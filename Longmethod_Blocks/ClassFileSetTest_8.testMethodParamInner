void#testMethodParamInner#(#)#{#Project#p#=#getProject#(#)#;#executeTarget#(#"testmethodparaminner"#)#;#FileSet#resultFileSet#=#(#FileSet#)#p#.#getReference#(#RESULT_FILESET#)#;#DirectoryScanner#scanner#=#resultFileSet#.#getDirectoryScanner#(#p#)#;#String#[#]#scannedFiles#=#scanner#.#getIncludedFiles#(#)#;#Hashtable#files#=#new#Hashtable#(#)#;##for#(#int#i#=#0#;##i#<#scannedFiles#.#length#;#++#i#)#{#files#.#put#(#scannedFiles#[#i#]#,#scannedFiles#[#i#]#)#;#}##assertEquals#(#"Classfileset did not pick up expected number of "#+#"class files"#,#4#,#files#.#size#(#)#)#;#assertTrue#(#"Result did not contain test"#+#File#.#separator#+#"Outer$Inner.class"#,#files#.#containsKey#(#"test"#+#File#.#separator#+#"Outer$Inner.class"#)#)#;#assertTrue#(#"Result did not contain test"#+#File#.#separator#+#"Outer.class"#,#files#.#containsKey#(#"test"#+#File#.#separator#+#"Outer.class"#)#)#;#assertTrue#(#"Result did not contain test"#+#File#.#separator#+#"ContainsOnlyInner.class"#,#files#.#containsKey#(#"test"#+#File#.#separator#+#"ContainsOnlyInner.class"#)#)#;#assertTrue#(#"Result did not contain test"#+#File#.#separator#+#"ContainsOnlyInner.class"#,#files#.#containsKey#(#"test"#+#File#.#separator#+#"MethodParam.class"#)#)#;#}