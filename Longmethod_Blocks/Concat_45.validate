void#validate#(#)#{##// treat empty nested text as no text#sanitizeText#(#)#;##// if binary check if incompatible attributes are used##if#(#binary#)#{##if#(#textBuffer#!=#null#)#{#throw#new#BuildException#(#"Nested text is incompatible with binary concatenation"#)#;#}##if#(#encoding#!=#null#||#outputEncoding#!=#null#)#{#throw#new#BuildException#(#"Setting input or output encoding is incompatible with binary"#+#" concatenation"#)#;#}##if#(#filterChains#!=#null#)#{#throw#new#BuildException#(#"Setting filters is incompatible with binary concatenation"#)#;#}##if#(#fixLastLine#)#{#throw#new#BuildException#(#"Setting fixlastline is incompatible with binary concatenation"#)#;#}##if#(#header#!=#null#||#footer#!=#null#)#{#throw#new#BuildException#(#"Nested header or footer is incompatible with binary concatenation"#)#;#}#}##if#(#dest#!=#null#&&#outputWriter#!=#null#)#{#throw#new#BuildException#(#"Cannot specify both a destination resource and an output writer"#)#;#}##// Sanity check our inputs.##if#(#rc#==#null#&&#textBuffer#==#null#)#{##// Nothing to concatenate!#throw#new#BuildException#(#"At least one resource must be provided, or some text."#)#;#}##if#(#rc#!=#null#&&#textBuffer#!=#null#)#{##// If using resources, disallow inline text. This is similar to##// using GNU 'cat' with file arguments--stdin is simply ignored.#throw#new#BuildException#(#"Cannot include inline text when using resources."#)#;#}#}