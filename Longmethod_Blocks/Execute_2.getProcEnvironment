Vector#getProcEnvironment#(#)#{##if#(#procEnvironment#!=#null#)#{##return#procEnvironment#;#}##procEnvironment#=#new#Vector#(#)#;##try#{#ByteArrayOutputStream#out#=#new#ByteArrayOutputStream#(#)#;#Execute#exe#=#new#Execute#(#new#PumpStreamHandler#(#out#)#)#;#exe#.#setCommandline#(#getProcEnvCommand#(#)#)#;##// Make sure we do not recurse forever#exe#.#setNewenvironment#(#true#)#;#int#retval#=#exe#.#execute#(#)#;##if#(#retval#!=#0#)#{##// Just try to use what we got#}##BufferedReader#in#=#new#BufferedReader#(#new#StringReader#(#toString#(#out#)#)#)#;##if#(#Os#.#isFamily#(#"openvms"#)#)#{#procEnvironment#=#addVMSLogicals#(#procEnvironment#,#in#)#;##return#procEnvironment#;#}##String#var#=#null#;#String#line#,#lineSep#=#StringUtils#.#LINE_SEP#;##while#(#(#line#=#in#.#readLine#(#)#)#!=#null#)#{##if#(#line#.#indexOf#(#'='#)#==#-#1#)#{##// Chunk part of previous env var (UNIX env vars can##// contain embedded new lines).##if#(#var#==#null#)#{#var#=#lineSep#+#line#;#}#else#{#var#+=#lineSep#+#line#;#}#}#else#{##// New env var...append the previous one if we have it.##if#(#var#!=#null#)#{#procEnvironment#.#addElement#(#var#)#;#}##var#=#line#;#}#}##// Since we "look ahead" before adding, there's one last env var.##if#(#var#!=#null#)#{#procEnvironment#.#addElement#(#var#)#;#}#}##catch#(#java#.#io#.#IOException#exc#)#{#exc#.#printStackTrace#(#)#;##// Just try to see how much we got#}##return#procEnvironment#;#}