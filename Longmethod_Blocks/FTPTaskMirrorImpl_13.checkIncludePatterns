void#checkIncludePatterns#(#)#{#Hashtable#newroots#=#new#Hashtable#(#)#;##// put in the newroots vector the include patterns without##// wildcard tokens#for#(#int#icounter#=#0#;##icounter#<#includes#.#length#;#icounter#++#)#{#String#newpattern#=#SelectorUtils#.#rtrimWildcardTokens#(#includes#[#icounter#]#)#;#newroots#.#put#(#newpattern#,#includes#[#icounter#]#)#;#}##if#(#task#.#getRemotedir#(#)#==#null#)#{#try#{#task#.#setRemotedir#(#ftp#.#printWorkingDirectory#(#)#)#;#}##catch#(#IOException#e#)#{#throw#new#BuildException#(#"could not read current ftp directory"#,#task#.#getLocation#(#)#)#;#}#}##AntFTPFile#baseFTPFile#=#new#AntFTPRootFile#(#ftp#,#task#.#getRemotedir#(#)#)#;#rootPath#=#baseFTPFile#.#getAbsolutePath#(#)#;##// construct it##if#(#newroots#.#containsKey#(#""#)#)#{##// we are going to scan everything anyway#scandir#(#rootPath#,#""#,#true#)#;#}#else#{##// only scan directories that can include matched files or##// directories#Enumeration#enum2#=#newroots#.#keys#(#)#;##while#(#enum2#.#hasMoreElements#(#)#)#{#String#currentelement#=#(#String#)#enum2#.#nextElement#(#)#;#String#originalpattern#=#(#String#)#newroots#.#get#(#currentelement#)#;#AntFTPFile#myfile#=#new#AntFTPFile#(#baseFTPFile#,#currentelement#)#;#boolean#isOK#=#true#;#boolean#traversesSymlinks#=#false#;#String#path#=#null#;##if#(#myfile#.#exists#(#)#)#{#forceRemoteSensitivityCheck#(#)#;##if#(#remoteSensitivityChecked#&&#remoteSystemCaseSensitive#&&#isFollowSymlinks#(#)#)#{##// cool case,##//we do not need to scan all the subdirs in the relative path#path#=#myfile#.#getFastRelativePath#(#)#;#}#else#{##// may be on a case insensitive file system.  We want##// the results to show what's really on the disk, so##// we need to double check.#try#{#path#=#myfile#.#getRelativePath#(#)#;#traversesSymlinks#=#myfile#.#isTraverseSymlinks#(#)#;#}##catch#(#IOException#be#)#{#throw#new#BuildException#(#be#,#task#.#getLocation#(#)#)#;#}##catch#(#BuildException#be#)#{#isOK#=#false#;#}#}#}#else#{#isOK#=#false#;#}##if#(#isOK#)#{#currentelement#=#path#.#replace#(#task#.#getSeparator#(#)#.#charAt#(#0#)#,#File#.#separatorChar#)#;##if#(#!#isFollowSymlinks#(#)#&&#traversesSymlinks#)#{#continue#;#}##if#(#myfile#.#isDirectory#(#)#)#{##if#(#isIncluded#(#currentelement#)#&&#currentelement#.#length#(#)#>#0#)#{#accountForIncludedDir#(#currentelement#,#myfile#,#true#)#;#}#else#{##if#(#currentelement#.#length#(#)#>#0#)#{##if#(#currentelement#.#charAt#(#currentelement#.#length#(#)#-#1#)#!=#File#.#separatorChar#)#{#currentelement#=#currentelement#+#File#.#separatorChar#;#}#}##scandir#(#myfile#.#getAbsolutePath#(#)#,#currentelement#,#true#)#;#}#}#else#{##if#(#isCaseSensitive#&&#originalpattern#.#equals#(#currentelement#)#)#{#accountForIncludedFile#(#currentelement#)#;#}#else##if#(#!#isCaseSensitive#&&#originalpattern#.#equalsIgnoreCase#(#currentelement#)#)#{#accountForIncludedFile#(#currentelement#)#;#}#}#}#}#}#}