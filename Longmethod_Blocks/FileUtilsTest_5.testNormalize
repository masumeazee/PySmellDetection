void#testNormalize#(#)#{##if#(#!#(#Os#.#isFamily#(#"dos"#)#||#Os#.#isFamily#(#"netware"#)#)#)#{##/*
             * Start with simple absolute file names.
             */#assertEquals#(#File#.#separator#,#FILE_UTILS#.#normalize#(#"/"#)#.#getPath#(#)#)#;#assertEquals#(#File#.#separator#,#FILE_UTILS#.#normalize#(#"\\"#)#.#getPath#(#)#)#;#}#else#{#try#{#FILE_UTILS#.#normalize#(#"/"#)#.#getPath#(#)#;#fail#(#"normalized \"/\" on dos or netware"#)#;#}##catch#(#Exception#e#)#{#}##try#{#FILE_UTILS#.#normalize#(#"\\"#)#.#getPath#(#)#;#fail#(#"normalized \"\\\" on dos or netware"#)#;#}##catch#(#Exception#e#)#{#}#}##if#(#Os#.#isFamily#(#"dos"#)#)#{##/*
             * throw in drive letters
             */#String#driveSpec#=#"C:"#;##try#{#FILE_UTILS#.#normalize#(#driveSpec#)#.#getPath#(#)#;#fail#(#driveSpec#+#" is not an absolute path"#)#;#}##catch#(#Exception#e#)#{#}##assertEquals#(#driveSpec#+#"\\"#,#FILE_UTILS#.#normalize#(#driveSpec#+#"/"#)#.#getPath#(#)#)#;#assertEquals#(#driveSpec#+#"\\"#,#FILE_UTILS#.#normalize#(#driveSpec#+#"\\"#)#.#getPath#(#)#)#;#String#driveSpecLower#=#"c:"#;#assertEquals#(#driveSpecLower#+#"\\"#,#FILE_UTILS#.#normalize#(#driveSpecLower#+#"/"#)#.#getPath#(#)#)#;#assertEquals#(#driveSpecLower#+#"\\"#,#FILE_UTILS#.#normalize#(#driveSpecLower#+#"\\"#)#.#getPath#(#)#)#;##/*
             * promised to eliminate consecutive slashes after drive letter.
             */#assertEquals#(#driveSpec#+#"\\"#,#FILE_UTILS#.#normalize#(#driveSpec#+#"/////"#)#.#getPath#(#)#)#;#assertEquals#(#driveSpec#+#"\\"#,#FILE_UTILS#.#normalize#(#driveSpec#+#"\\\\\\\\\\\\"#)#.#getPath#(#)#)#;#}#else##if#(#Os#.#isFamily#(#"netware"#)#)#{##/*
             * throw in NetWare volume names
             */#String#driveSpec#=#"SYS:"#;#assertEquals#(#driveSpec#,#FILE_UTILS#.#normalize#(#driveSpec#)#.#getPath#(#)#)#;#assertEquals#(#driveSpec#,#FILE_UTILS#.#normalize#(#driveSpec#+#"/"#)#.#getPath#(#)#)#;#assertEquals#(#driveSpec#,#FILE_UTILS#.#normalize#(#driveSpec#+#"\\"#)#.#getPath#(#)#)#;#String#driveSpecLower#=#"sys:"#;#assertEquals#(#driveSpec#,#FILE_UTILS#.#normalize#(#driveSpecLower#)#.#getPath#(#)#)#;#assertEquals#(#driveSpec#,#FILE_UTILS#.#normalize#(#driveSpecLower#+#"/"#)#.#getPath#(#)#)#;#assertEquals#(#driveSpec#,#FILE_UTILS#.#normalize#(#driveSpecLower#+#"\\"#)#.#getPath#(#)#)#;#assertEquals#(#driveSpec#+#"\\junk"#,#FILE_UTILS#.#normalize#(#driveSpecLower#+#"\\junk"#)#.#getPath#(#)#)#;##/*
             * promised to eliminate consecutive slashes after drive letter.
             */#assertEquals#(#driveSpec#,#FILE_UTILS#.#normalize#(#driveSpec#+#"/////"#)#.#getPath#(#)#)#;#assertEquals#(#driveSpec#,#FILE_UTILS#.#normalize#(#driveSpec#+#"\\\\\\\\\\\\"#)#.#getPath#(#)#)#;#}#else#{#try#{#String#driveSpec#=#"C:"#;#assertEquals#(#driveSpec#,#FILE_UTILS#.#normalize#(#driveSpec#)#.#getPath#(#)#)#;#fail#(#"Expected failure, C: isn't an absolute path on other os's"#)#;#}##catch#(#BuildException#e#)#{##// Passed test #}#}##/*
         * Now test some relative file name magic.
         */#assertEquals#(#localize#(#"/1/2/3/4"#)#,#FILE_UTILS#.#normalize#(#localize#(#"/1/2/3/4"#)#)#.#getPath#(#)#)#;#assertEquals#(#localize#(#"/1/2/3/4"#)#,#FILE_UTILS#.#normalize#(#localize#(#"/1/2/3/./4"#)#)#.#getPath#(#)#)#;#assertEquals#(#localize#(#"/1/2/3/4"#)#,#FILE_UTILS#.#normalize#(#localize#(#"/1/2/3/.\\4"#)#)#.#getPath#(#)#)#;#assertEquals#(#localize#(#"/1/2/3/4"#)#,#FILE_UTILS#.#normalize#(#localize#(#"/1/2/3/./.\\4"#)#)#.#getPath#(#)#)#;#assertEquals#(#localize#(#"/1/2/3/4"#)#,#FILE_UTILS#.#normalize#(#localize#(#"/1/2/3/../3/4"#)#)#.#getPath#(#)#)#;#assertEquals#(#localize#(#"/1/2/3/4"#)#,#FILE_UTILS#.#normalize#(#localize#(#"/1/2/3/..\\3\\4"#)#)#.#getPath#(#)#)#;#assertEquals#(#localize#(#"/1/2/3/4"#)#,#FILE_UTILS#.#normalize#(#localize#(#"/1/2/3/../../5/.././2/./3/6/../4"#)#)#.#getPath#(#)#)#;#assertEquals#(#localize#(#"/1/2/3/4"#)#,#FILE_UTILS#.#normalize#(#localize#(#"/1/2/3/..\\../5/..\\./2/./3/6\\../4"#)#)#.#getPath#(#)#)#;##try#{#FILE_UTILS#.#normalize#(#"foo"#)#;#fail#(#"foo is not an absolute path"#)#;#}##catch#(#BuildException#e#)#{##// Expected exception caught#}##assertEquals#(#"will not go outside FS root (but will not throw an exception either)"#,#new#File#(#localize#(#"/1/../../b"#)#)#,#FILE_UTILS#.#normalize#(#localize#(#"/1/../../b"#)#)#)#;#}