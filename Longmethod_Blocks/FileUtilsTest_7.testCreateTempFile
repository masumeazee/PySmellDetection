void#testCreateTempFile#(#)#{##// null parent dir#File#tmp1#=#FILE_UTILS#.#createTempFile#(#"pre"#,#".suf"#,#null#,#false#,#true#)#;#String#tmploc#=#System#.#getProperty#(#"java.io.tmpdir"#)#;#String#name#=#tmp1#.#getName#(#)#;#assertTrue#(#"starts with pre"#,#name#.#startsWith#(#"pre"#)#)#;#assertTrue#(#"ends with .suf"#,#name#.#endsWith#(#".suf"#)#)#;#assertTrue#(#"File was created"#,#tmp1#.#exists#(#)#)#;#assertEquals#(#(#new#File#(#tmploc#,#tmp1#.#getName#(#)#)#)#.#getAbsolutePath#(#)#,#tmp1#.#getAbsolutePath#(#)#)#;#tmp1#.#delete#(#)#;#File#dir2#=#new#File#(#tmploc#+#"/ant-test"#)#;#dir2#.#mkdir#(#)#;#removeThis#=#dir2#;#File#tmp2#=#FILE_UTILS#.#createTempFile#(#"pre"#,#".suf"#,#dir2#,#true#,#true#)#;#String#name2#=#tmp2#.#getName#(#)#;#assertTrue#(#"starts with pre"#,#name2#.#startsWith#(#"pre"#)#)#;#assertTrue#(#"ends with .suf"#,#name2#.#endsWith#(#".suf"#)#)#;#assertTrue#(#"File was created"#,#tmp2#.#exists#(#)#)#;#assertEquals#(#(#new#File#(#dir2#,#tmp2#.#getName#(#)#)#)#.#getAbsolutePath#(#)#,#tmp2#.#getAbsolutePath#(#)#)#;#tmp2#.#delete#(#)#;#dir2#.#delete#(#)#;#File#parent#=#new#File#(#(#new#File#(#"/tmp"#)#)#.#getAbsolutePath#(#)#)#;#tmp1#=#FILE_UTILS#.#createTempFile#(#"pre"#,#".suf"#,#parent#,#false#)#;#assertTrue#(#"new file"#,#!#tmp1#.#exists#(#)#)#;#name#=#tmp1#.#getName#(#)#;#assertTrue#(#"starts with pre"#,#name#.#startsWith#(#"pre"#)#)#;#assertTrue#(#"ends with .suf"#,#name#.#endsWith#(#".suf"#)#)#;#assertEquals#(#"is inside parent dir"#,#parent#.#getAbsolutePath#(#)#,#tmp1#.#getParent#(#)#)#;#tmp2#=#FILE_UTILS#.#createTempFile#(#"pre"#,#".suf"#,#parent#,#false#)#;#assertTrue#(#"files are different"#,#!#tmp1#.#getAbsolutePath#(#)#.#equals#(#tmp2#.#getAbsolutePath#(#)#)#)#;##// null parent dir#File#tmp3#=#FILE_UTILS#.#createTempFile#(#"pre"#,#".suf"#,#null#,#false#)#;#tmploc#=#System#.#getProperty#(#"java.io.tmpdir"#)#;#assertEquals#(#(#new#File#(#tmploc#,#tmp3#.#getName#(#)#)#)#.#getAbsolutePath#(#)#,#tmp3#.#getAbsolutePath#(#)#)#;#}