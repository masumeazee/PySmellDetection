boolean#doGet#(#URL#source#,#File#dest#,#int#logLevel#,#DownloadProgress#progress#)#throws#IOException#{##if#(#dest#.#exists#(#)#&&#skipExisting#)#{#log#(#"Destination already exists (skipping): "#+#dest#.#getAbsolutePath#(#)#,#logLevel#)#;##return#true#;#}##//dont do any progress, unless asked##if#(#progress#==#null#)#{#progress#=#new#NullProgress#(#)#;#}##log#(#"Getting: "#+#source#,#logLevel#)#;#log#(#"To: "#+#dest#.#getAbsolutePath#(#)#,#logLevel#)#;##//set the timestamp to the file date.#long#timestamp#=#0#;#boolean#hasTimestamp#=#false#;##if#(#useTimestamp#&&#dest#.#exists#(#)#)#{#timestamp#=#dest#.#lastModified#(#)#;##if#(#verbose#)#{#Date#t#=#new#Date#(#timestamp#)#;#log#(#"local file date : "#+#t#.#toString#(#)#,#logLevel#)#;#}##hasTimestamp#=#true#;#}##GetThread#getThread#=#new#GetThread#(#source#,#dest#,#hasTimestamp#,#timestamp#,#progress#,#logLevel#)#;#getThread#.#setDaemon#(#true#)#;#getProject#(#)#.#registerThreadTask#(#getThread#,#this#)#;#getThread#.#start#(#)#;##try#{#getThread#.#join#(#maxTime#*#1000#)#;#}##catch#(#InterruptedException#ie#)#{#log#(#"interrupted waiting for GET to finish"#,#Project#.#MSG_VERBOSE#)#;#}##if#(#getThread#.#isAlive#(#)#)#{#String#msg#=#"The GET operation took longer than "#+#maxTime#+#" seconds, stopping it."#;##if#(#ignoreErrors#)#{#log#(#msg#)#;#}##getThread#.#closeStreams#(#)#;##if#(#!#ignoreErrors#)#{#throw#new#BuildException#(#msg#)#;#}##return#false#;#}##return#getThread#.#wasSuccessful#(#)#;#}