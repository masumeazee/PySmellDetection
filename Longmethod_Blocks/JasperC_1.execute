boolean#execute#(#)#throws#BuildException#{#getJspc#(#)#.#log#(#"Using jasper compiler"#,#Project#.#MSG_VERBOSE#)#;#CommandlineJava#cmd#=#setupJasperCommand#(#)#;##try#{##// Create an instance of the compiler, redirecting output to##// the project log#Java#java#=#new#Java#(#owner#)#;#Path#p#=#getClasspath#(#)#;##if#(#getJspc#(#)#.#getClasspath#(#)#!=#null#)#{#getProject#(#)#.#log#(#"using user supplied classpath: "#+#p#,#Project#.#MSG_DEBUG#)#;#}#else#{#getProject#(#)#.#log#(#"using system classpath: "#+#p#,#Project#.#MSG_DEBUG#)#;#}##java#.#setClasspath#(#p#)#;#java#.#setDir#(#getProject#(#)#.#getBaseDir#(#)#)#;#java#.#setClassname#(#"org.apache.jasper.JspC"#)#;##//this is really irritating; we need a way to set stuff#String#[#]#args#=#cmd#.#getJavaCommand#(#)#.#getArguments#(#)#;##for#(#int#i#=#0#;##i#<#args#.#length#;#i#++#)#{#java#.#createArg#(#)#.#setValue#(#args#[#i#]#)#;#}##java#.#setFailonerror#(#getJspc#(#)#.#getFailonerror#(#)#)#;##//we are forking here to be sure that if JspC calls##//System.exit() it doesn't halt the build#java#.#setFork#(#true#)#;#java#.#setTaskName#(#"jasperc"#)#;#java#.#execute#(#)#;##return#true#;#}##catch#(#Exception#ex#)#{##if#(#ex#instanceof#BuildException#)#{#throw#(#BuildException#)#ex#;#}#else#{#throw#new#BuildException#(#"Error running jsp compiler: "#,#ex#,#getJspc#(#)#.#getLocation#(#)#)#;#}#}##finally#{#getJspc#(#)#.#deleteEmptyJavaFiles#(#)#;#}#}