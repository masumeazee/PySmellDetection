void#execute#(#)#throws#BuildException#{#Resources#savedPath#=#path#;#String#savedPathSep#=#pathSep#;##// may be altered in validateSetup#String#savedDirSep#=#dirSep#;##// may be altered in validateSetup#try#{##// If we are a reference, create a Path from the reference##if#(#isReference#(#)#)#{#Object#o#=#refid#.#getReferencedObject#(#getProject#(#)#)#;##if#(#!#(#o#instanceof#ResourceCollection#)#)#{#throw#new#BuildException#(#"refid '"#+#refid#.#getRefId#(#)#+#"' does not refer to a resource collection."#)#;#}##getPath#(#)#.#add#(#(#ResourceCollection#)#o#)#;#}##validateSetup#(#)#;##// validate our setup##// Currently, we deal with only two path formats: Unix and Windows##// And Unix is everything that is not Windows##// (with the exception for NetWare and OS/2 below)##// for NetWare and OS/2, piggy-back on Windows, since here and##// in the apply code, the same assumptions can be made as with##// windows - that \\ is an OK separator, and do comparisons##// case-insensitive.#String#fromDirSep#=#onWindows#?#"\\"#:#"/"#;#StringBuffer#rslt#=#new#StringBuffer#(#)#;#ResourceCollection#resources#=#isPreserveDuplicates#(#)#?#(#ResourceCollection#)#path#:#new#Union#(#path#)#;#List#ret#=#new#ArrayList#(#)#;#FileNameMapper#mapperImpl#=#mapper#==#null#?#new#IdentityMapper#(#)#:#mapper#.#getImplementation#(#)#;##for#(#Iterator#iter#=#resources#.#iterator#(#)#;##iter#.#hasNext#(#)#;#)#{#String#[#]#mapped#=#mapperImpl#.#mapFileName#(#String#.#valueOf#(#iter#.#next#(#)#)#)#;##for#(#int#m#=#0#;##mapped#!=#null#&&#m#<#mapped#.#length#;#++#m#)#{#ret#.#add#(#mapped#[#m#]#)#;#}#}##boolean#first#=#true#;##for#(#Iterator#mappedIter#=#ret#.#iterator#(#)#;##mappedIter#.#hasNext#(#)#;#)#{#String#elem#=#mapElement#(#(#String#)#mappedIter#.#next#(#)#)#;##// Apply the path prefix map##// Now convert the path and file separator characters from the##// current os to the target os.##if#(#!#first#)#{#rslt#.#append#(#pathSep#)#;#}##first#=#false#;#StringTokenizer#stDirectory#=#new#StringTokenizer#(#elem#,#fromDirSep#,#true#)#;##while#(#stDirectory#.#hasMoreTokens#(#)#)#{#String#token#=#stDirectory#.#nextToken#(#)#;#rslt#.#append#(#fromDirSep#.#equals#(#token#)#?#dirSep#:#token#)#;#}#}##// Place the result into the specified property,##// unless setonempty == false##if#(#setonempty#||#rslt#.#length#(#)#>#0#)#{#String#value#=#rslt#.#toString#(#)#;##if#(#property#==#null#)#{#log#(#value#)#;#}#else#{#log#(#"Set property "#+#property#+#" = "#+#value#,#Project#.#MSG_VERBOSE#)#;#getProject#(#)#.#setNewProperty#(#property#,#value#)#;#}#}#}##finally#{#path#=#savedPath#;#dirSep#=#savedDirSep#;#pathSep#=#savedPathSep#;#}#}