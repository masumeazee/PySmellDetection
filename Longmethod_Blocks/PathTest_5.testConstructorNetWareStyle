void#testConstructorNetWareStyle#(#)#{##// try a netware-volume length path, see how it is handled#Path#p#=#new#Path#(#project#,#"sys:\\test"#)#;#String#[#]#l#=#p#.#list#(#)#;##if#(#isUnixStyle#)#{#assertEquals#(#"no drives on Unix"#,#2#,#l#.#length#)#;#assertTrue#(#"sys resolved relative to project\'s basedir"#,#l#[#0#]#.#endsWith#(#"/sys"#)#)#;#assertEquals#(#"/test"#,#l#[#1#]#)#;#}#else##if#(#isNetWare#)#{#assertEquals#(#"sys:\\test"#,#l#[#0#]#.#toLowerCase#(#Locale#.#US#)#)#;#assertEquals#(#"volumes on NetWare"#,#1#,#l#.#length#)#;#}#else#{#assertEquals#(#"no multiple character-length volumes on Windows"#,#2#,#l#.#length#)#;#assertTrue#(#"sys resolved relative to project\'s basedir"#,#l#[#0#]#.#endsWith#(#"\\sys"#)#)#;#assertTrue#(#"test resolved relative to project\'s basedir"#,#l#[#1#]#.#endsWith#(#"\\test"#)#)#;#}##// try a multi-part netware-volume length path, see how it is handled#p#=#new#Path#(#project#,#"sys:\\test;dev:\\temp"#)#;#l#=#p#.#list#(#)#;##if#(#isUnixStyle#)#{#assertEquals#(#"no drives on Unix"#,#4#,#l#.#length#)#;#assertTrue#(#"sys resolved relative to project\'s basedir"#,#l#[#0#]#.#endsWith#(#"/sys"#)#)#;#assertEquals#(#"/test"#,#l#[#1#]#)#;#assertTrue#(#"dev resolved relative to project\'s basedir"#,#l#[#2#]#.#endsWith#(#"/dev"#)#)#;#assertEquals#(#"/temp"#,#l#[#3#]#)#;#}#else##if#(#isNetWare#)#{#assertEquals#(#"volumes on NetWare"#,#2#,#l#.#length#)#;#assertEquals#(#"sys:\\test"#,#l#[#0#]#.#toLowerCase#(#Locale#.#US#)#)#;#assertEquals#(#"dev:\\temp"#,#l#[#1#]#.#toLowerCase#(#Locale#.#US#)#)#;#}#else#{#assertEquals#(#"no multiple character-length volumes on Windows"#,#4#,#l#.#length#)#;#assertTrue#(#"sys resolved relative to project\'s basedir"#,#l#[#0#]#.#endsWith#(#"\\sys"#)#)#;#assertTrue#(#"test resolved relative to project\'s basedir"#,#l#[#1#]#.#endsWith#(#"\\test"#)#)#;#assertTrue#(#"dev resolved relative to project\'s basedir"#,#l#[#2#]#.#endsWith#(#"\\dev"#)#)#;#assertTrue#(#"temp resolved relative to project\'s basedir"#,#l#[#3#]#.#endsWith#(#"\\temp"#)#)#;#}##// try a netware-volume length path w/forward slash, see how it is handled#p#=#new#Path#(#project#,#"sys:/test"#)#;#l#=#p#.#list#(#)#;##if#(#isUnixStyle#)#{#assertEquals#(#"no drives on Unix"#,#2#,#l#.#length#)#;#assertTrue#(#"sys resolved relative to project\'s basedir"#,#l#[#0#]#.#endsWith#(#"/sys"#)#)#;#assertEquals#(#"/test"#,#l#[#1#]#)#;#}#else##if#(#isNetWare#)#{#assertEquals#(#"volumes on NetWare"#,#1#,#l#.#length#)#;#assertEquals#(#"sys:\\test"#,#l#[#0#]#.#toLowerCase#(#Locale#.#US#)#)#;#}#else#{#assertEquals#(#"no multiple character-length volumes on Windows"#,#2#,#l#.#length#)#;#assertTrue#(#"sys resolved relative to project\'s basedir"#,#l#[#0#]#.#endsWith#(#"\\sys"#)#)#;#assertTrue#(#"test resolved relative to project\'s basedir"#,#l#[#1#]#.#endsWith#(#"\\test"#)#)#;#}##// try a multi-part netware-volume length path w/forward slash, see how it is handled#p#=#new#Path#(#project#,#"sys:/test;dev:/temp"#)#;#l#=#p#.#list#(#)#;##if#(#isUnixStyle#)#{#assertEquals#(#"no drives on Unix"#,#4#,#l#.#length#)#;#assertTrue#(#"sys resolved relative to project\'s basedir"#,#l#[#0#]#.#endsWith#(#"/sys"#)#)#;#assertEquals#(#"/test"#,#l#[#1#]#)#;#assertTrue#(#"dev resolved relative to project\'s basedir"#,#l#[#2#]#.#endsWith#(#"/dev"#)#)#;#assertEquals#(#"/temp"#,#l#[#3#]#)#;#}#else##if#(#isNetWare#)#{#assertEquals#(#"volumes on NetWare"#,#2#,#l#.#length#)#;#assertEquals#(#"sys:\\test"#,#l#[#0#]#.#toLowerCase#(#Locale#.#US#)#)#;#assertEquals#(#"dev:\\temp"#,#l#[#1#]#.#toLowerCase#(#Locale#.#US#)#)#;#}#else#{#assertEquals#(#"no multiple character-length volumes on Windows"#,#4#,#l#.#length#)#;#assertTrue#(#"sys resolved relative to project\'s basedir"#,#l#[#0#]#.#endsWith#(#"\\sys"#)#)#;#assertTrue#(#"test resolved relative to project\'s basedir"#,#l#[#1#]#.#endsWith#(#"\\test"#)#)#;#assertTrue#(#"dev resolved relative to project\'s basedir"#,#l#[#2#]#.#endsWith#(#"\\dev"#)#)#;#assertTrue#(#"temp resolved relative to project\'s basedir"#,#l#[#3#]#.#endsWith#(#"\\temp"#)#)#;#}##// try a multi-part netware-volume length path with UNIX##// separator (this testcase if from an actual bug that was##// found, in AvailableTest, which uses PathTokenizer)#p#=#new#Path#(#project#,#"SYS:\\JAVA/lib/rt.jar:SYS:\\JAVA/lib/classes.zip"#)#;#l#=#p#.#list#(#)#;##if#(#isUnixStyle#)#{#assertEquals#(#"no drives on Unix"#,#3#,#l#.#length#)#;#assertTrue#(#"sys resolved relative to project\'s basedir"#,#l#[#0#]#.#endsWith#(#"/SYS"#)#)#;#assertEquals#(#"/JAVA/lib/rt.jar"#,#l#[#1#]#)#;#assertEquals#(#"/JAVA/lib/classes.zip"#,#l#[#2#]#)#;#}#else##if#(#isNetWare#)#{#assertEquals#(#"volumes on NetWare"#,#2#,#l#.#length#)#;#assertEquals#(#"sys:\\java\\lib\\rt.jar"#,#l#[#0#]#.#toLowerCase#(#Locale#.#US#)#)#;#assertEquals#(#"sys:\\java\\lib\\classes.zip"#,#l#[#1#]#.#toLowerCase#(#Locale#.#US#)#)#;#}#else#{#assertEquals#(#"no multiple character-length volumes on Windows"#,#3#,#l#.#length#)#;#assertTrue#(#"sys resolved relative to project\'s basedir"#,#l#[#0#]#.#endsWith#(#"\\SYS"#)#)#;#assertTrue#(#"java/lib/rt.jar resolved relative to project\'s basedir"#,#l#[#1#]#.#endsWith#(#"\\JAVA\\lib\\rt.jar"#)#)#;#assertTrue#(#"java/lib/classes.zip resolved relative to project\'s basedir"#,#l#[#2#]#.#endsWith#(#"\\JAVA\\lib\\classes.zip"#)#)#;#}#}