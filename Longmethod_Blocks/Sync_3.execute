void#execute#(#)#throws#BuildException#{##// The destination of the files to copy#File#toDir#=#myCopy#.#getToDir#(#)#;##// The complete list of files to copy#Set#allFiles#=#myCopy#.#nonOrphans#;##// If the destination directory didn't already exist,##// or was empty, then no previous file removal is necessary!#boolean#noRemovalNecessary#=#!#toDir#.#exists#(#)#||#toDir#.#list#(#)#.#length#<#1#;##// Copy all the necessary out-of-date files#log#(#"PASS#1: Copying files to "#+#toDir#,#Project#.#MSG_DEBUG#)#;#myCopy#.#execute#(#)#;##// Do we need to perform further processing?##if#(#noRemovalNecessary#)#{#log#(#"NO removing necessary in "#+#toDir#,#Project#.#MSG_DEBUG#)#;##return#;##// nope ;-)#}##// will hold the directories matched by SyncTarget in reversed##// lexicographic order (order is important, that's why we use##// a LinkedHashSet#Set#preservedDirectories#=#new#LinkedHashSet#(#)#;##// Get rid of all files not listed in the source filesets.#log#(#"PASS#2: Removing orphan files from "#+#toDir#,#Project#.#MSG_DEBUG#)#;#int#[#]#removedFileCount#=#removeOrphanFiles#(#allFiles#,#toDir#,#preservedDirectories#)#;#logRemovedCount#(#removedFileCount#[#0#]#,#"dangling director"#,#"y"#,#"ies"#)#;#logRemovedCount#(#removedFileCount#[#1#]#,#"dangling file"#,#""#,#"s"#)#;##// Get rid of empty directories on the destination side##if#(#!#myCopy#.#getIncludeEmptyDirs#(#)#||#getExplicitPreserveEmptyDirs#(#)#==#Boolean#.#FALSE#)#{#log#(#"PASS#3: Removing empty directories from "#+#toDir#,#Project#.#MSG_DEBUG#)#;#int#removedDirCount#=#0#;##if#(#!#myCopy#.#getIncludeEmptyDirs#(#)#)#{#removedDirCount#=#removeEmptyDirectories#(#toDir#,#false#,#preservedDirectories#)#;#}#else#{##// must be syncTarget.preserveEmptydirs == FALSE#removedDirCount#=#removeEmptyDirectories#(#preservedDirectories#)#;#}##logRemovedCount#(#removedDirCount#,#"empty director"#,#"y"#,#"ies"#)#;#}#}