void#tearDown#(#)#{#try#{##// first try to load the class and let's hope it is on our##// classpath#Class#testClass#=#null#;##if#(#Thread#.#currentThread#(#)#.#getContextClassLoader#(#)#!=#null#)#{#try#{#testClass#=#Thread#.#currentThread#(#)#.#getContextClassLoader#(#)#.#loadClass#(#suiteName#)#;#}##catch#(#ClassNotFoundException#cnfe#)#{#}#}##if#(#testClass#==#null#&&#getClass#(#)#.#getClassLoader#(#)#!=#null#)#{#try#{#testClass#=#getClass#(#)#.#getClassLoader#(#)#.#loadClass#(#suiteName#)#;#}##catch#(#ClassNotFoundException#cnfe#)#{#}#}##if#(#testClass#==#null#)#{##// fall back to system classloader#testClass#=#Class#.#forName#(#suiteName#)#;#}##// if the test has a suite method, then we can't know##// which test of the executed suite timed out, ignore it#try#{##// check if there is a suite method#testClass#.#getMethod#(#"suite"#,#new#Class#[#0#]#)#;##return#;#}##catch#(#NoSuchMethodException#e#)#{##// no suite method#}##// a loadable class and no suite method##// no reason to check for JUnit 4 since JUnit4TestAdapter##// doesn't have any tearDown method.#try#{#Method#td#=#testClass#.#getMethod#(#"tearDown"#,#new#Class#[#0#]#)#;##if#(#td#.#getReturnType#(#)#==#Void#.#TYPE#)#{#td#.#invoke#(#testClass#.#newInstance#(#)#,#new#Object#[#0#]#)#;#}#}##catch#(#NoSuchMethodException#nsme#)#{##// no tearDown, fine#}#}##catch#(#ClassNotFoundException#cnfe#)#{##// class probably is not in our classpath, there is##// nothing we can do#}##catch#(#InvocationTargetException#ite#)#{#System#.#err#.#println#(#"Caught an exception while trying to invoke"#+#" tearDown: "#+#ite#.#getMessage#(#)#)#;#}##catch#(#Throwable#t#)#{#System#.#err#.#println#(#"Caught an exception while trying to invoke"#+#" tearDown: "#+#t#.#getMessage#(#)#)#;#}#}