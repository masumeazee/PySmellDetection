ArchiveState#getNonFileSetResourcesToAdd#(#ResourceCollection#[#]#rcs#,#File#zipFile#,#boolean#needsUpdate#)#throws#BuildException#{##/*
         * Backwards compatibility forces us to repeat the logic of
         * getResourcesToAdd(FileSet[], ...) here once again.
         */#Resource#[#]#[#]#initialResources#=#grabNonFileSetResources#(#rcs#)#;##if#(#isEmpty#(#initialResources#)#)#{##// no emptyBehavior handling since the FileSet version##// will take care of it.##return#new#ArchiveState#(#needsUpdate#,#initialResources#)#;#}##// initialResources is not empty##if#(#!#zipFile#.#exists#(#)#)#{##return#new#ArchiveState#(#true#,#initialResources#)#;#}##if#(#needsUpdate#&&#!#doUpdate#)#{##// we are recreating the archive, need all resources##return#new#ArchiveState#(#true#,#initialResources#)#;#}##Resource#[#]#[#]#newerResources#=#new#Resource#[#rcs#.#length#]#[#]#;##for#(#int#i#=#0#;##i#<#rcs#.#length#;#i#++#)#{##if#(#initialResources#[#i#]#.#length#==#0#)#{#newerResources#[#i#]#=#new#Resource#[#]#{#}#;#continue#;#}##for#(#int#j#=#0#;##j#<#initialResources#[#i#]#.#length#;#j#++#)#{#FileProvider#fp#=#(#FileProvider#)#initialResources#[#i#]#[#j#]#.#as#(#FileProvider#.#class#)#;##if#(#fp#!=#null#&&#zipFile#.#equals#(#fp#.#getFile#(#)#)#)#{#throw#new#BuildException#(#"A zip file cannot include "#+#"itself"#,#getLocation#(#)#)#;#}#}##newerResources#[#i#]#=#selectOutOfDateResources#(#initialResources#[#i#]#,#new#IdentityMapper#(#)#)#;#needsUpdate#=#needsUpdate#||#(#newerResources#[#i#]#.#length#>#0#)#;##if#(#needsUpdate#&&#!#doUpdate#)#{##// we will return initialResources anyway, no reason##// to scan further.#break#;#}#}##if#(#needsUpdate#&&#!#doUpdate#)#{##// we are recreating the archive, need all resources##return#new#ArchiveState#(#true#,#initialResources#)#;#}##return#new#ArchiveState#(#needsUpdate#,#newerResources#)#;#}