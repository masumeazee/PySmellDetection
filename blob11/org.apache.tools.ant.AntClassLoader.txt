boolean#hasMoreElements#(#)#{#return#(#this#.#nextResource#!=#null#)#;#}##Object#nextElement#(#)#{#URL#ret#=#this#.#nextResource#;#findNextResource#(#)#;#return#ret#;#}##void#findNextResource#(#)#{#URL#url#=#null#;#while#(#(#pathElementsIndex#<#pathComponents#.#size#(#)#)#&&#(#url#==#null#)#)#{#try#{#File#pathComponent#=#(#File#)#pathComponents#.#elementAt#(#pathElementsIndex#)#;#url#=#getResourceURL#(#pathComponent#,#this#.#resourceName#)#;#pathElementsIndex#++#;#}#catch#(#BuildException#e#)#{#// ignore path elements which are not valid relative to the#// project#}#}#this#.#nextResource#=#url#;#}##void#setProject#(#Project#project#)#{#this#.#project#=#project#;#if#(#project#!=#null#)#{#project#.#addBuildListener#(#this#)#;#}#}##void#setClassPath#(#Path#classpath#)#{#pathComponents#.#removeAllElements#(#)#;#if#(#classpath#!=#null#)#{#Path#actualClasspath#=#classpath#.#concatSystemClasspath#(#"ignore"#)#;#String#[#]#pathElements#=#actualClasspath#.#list#(#)#;#for#(#int#i#=#0#;#i#<#pathElements#.#length#;#++#i#)#{#try#{#addPathElement#(#pathElements#[#i#]#)#;#}#catch#(#BuildException#e#)#{#// ignore path elements which are invalid#// relative to the project#}#}#}#}##void#setParent#(#ClassLoader#parent#)#{#this#.#parent#=#parent#==#null#?#AntClassLoader#.#class#.#getClassLoader#(#)#:#parent#;#}##void#setParentFirst#(#boolean#parentFirst#)#{#this#.#parentFirst#=#parentFirst#;#}##void#log#(#String#message#,#int#priority#)#{#if#(#project#!=#null#)#{#project#.#log#(#message#,#priority#)#;#}#}##void#setThreadContextLoader#(#)#{#if#(#isContextLoaderSaved#)#{#throw#new#BuildException#(#"Context loader has not been reset"#)#;#}#if#(#LoaderUtils#.#isContextLoaderAvailable#(#)#)#{#savedContextLoader#=#LoaderUtils#.#getContextClassLoader#(#)#;#ClassLoader#loader#=#this#;#if#(#project#!=#null#&&#"only"#.#equals#(#project#.#getProperty#(#"build.sysclasspath"#)#)#)#{#loader#=#this#.#getClass#(#)#.#getClassLoader#(#)#;#}#LoaderUtils#.#setContextClassLoader#(#loader#)#;#isContextLoaderSaved#=#true#;#}#}##void#resetThreadContextLoader#(#)#{#if#(#LoaderUtils#.#isContextLoaderAvailable#(#)#&&#isContextLoaderSaved#)#{#LoaderUtils#.#setContextClassLoader#(#savedContextLoader#)#;#savedContextLoader#=#null#;#isContextLoaderSaved#=#false#;#}#}##void#addPathElement#(#String#pathElement#)#throws#BuildException#{#File#pathComponent#=#project#!=#null#?#project#.#resolveFile#(#pathElement#)#:#new#File#(#pathElement#)#;#try#{#addPathFile#(#pathComponent#)#;#}#catch#(#IOException#e#)#{#throw#new#BuildException#(#e#)#;#}#}##void#addPathComponent#(#File#file#)#{#if#(#pathComponents#.#contains#(#file#)#)#{#return#;#}#pathComponents#.#addElement#(#file#)#;#}##void#addPathFile#(#File#pathComponent#)#throws#IOException#{#if#(#!#pathComponents#.#contains#(#pathComponent#)#)#{#pathComponents#.#addElement#(#pathComponent#)#;#}#if#(#pathComponent#.#isDirectory#(#)#)#{#return#;#}#String#absPathPlusTimeAndLength#=#pathComponent#.#getAbsolutePath#(#)#+#pathComponent#.#lastModified#(#)#+#"-"#+#pathComponent#.#length#(#)#;#String#classpath#=#(#String#)#pathMap#.#get#(#absPathPlusTimeAndLength#)#;#if#(#classpath#==#null#)#{#ZipFile#jarFile#=#null#;#InputStream#manifestStream#=#null#;#try#{#jarFile#=#new#ZipFile#(#pathComponent#)#;#manifestStream#=#jarFile#.#getInputStream#(#new#ZipEntry#(#"META-INF/MANIFEST.MF"#)#)#;#if#(#manifestStream#==#null#)#{#return#;#}#Reader#manifestReader#=#new#InputStreamReader#(#manifestStream#,#"UTF-8"#)#;#org#.#apache#.#tools#.#ant#.#taskdefs#.#Manifest#manifest#=#new#org#.#apache#.#tools#.#ant#.#taskdefs#.#Manifest#(#manifestReader#)#;#classpath#=#manifest#.#getMainSection#(#)#.#getAttributeValue#(#"Class-Path"#)#;#}#catch#(#org#.#apache#.#tools#.#ant#.#taskdefs#.#ManifestException#e#)#{#// ignore#}#finally#{#FileUtils#.#close#(#manifestStream#)#;#if#(#jarFile#!=#null#)#{#jarFile#.#close#(#)#;#}#}#if#(#classpath#==#null#)#{#classpath#=#""#;#}#pathMap#.#put#(#absPathPlusTimeAndLength#,#classpath#)#;#}#if#(#!#""#.#equals#(#classpath#)#)#{#URL#baseURL#=#FILE_UTILS#.#getFileURL#(#pathComponent#)#;#StringTokenizer#st#=#new#StringTokenizer#(#classpath#)#;#while#(#st#.#hasMoreTokens#(#)#)#{#String#classpathElement#=#st#.#nextToken#(#)#;#URL#libraryURL#=#new#URL#(#baseURL#,#classpathElement#)#;#if#(#!#libraryURL#.#getProtocol#(#)#.#equals#(#"file"#)#)#{#log#(#"Skipping jar library "#+#classpathElement#+#" since only relative URLs are supported by this"#+#" loader"#,#Project#.#MSG_VERBOSE#)#;#continue#;#}#String#decodedPath#=#Locator#.#decodeUri#(#libraryURL#.#getFile#(#)#)#;#File#libraryFile#=#new#File#(#decodedPath#)#;#if#(#libraryFile#.#exists#(#)#&&#!#isInPath#(#libraryFile#)#)#{#addPathFile#(#libraryFile#)#;#}#}#}#}##String#getClasspath#(#)#{#StringBuffer#sb#=#new#StringBuffer#(#)#;#boolean#firstPass#=#true#;#Enumeration#componentEnum#=#pathComponents#.#elements#(#)#;#while#(#componentEnum#.#hasMoreElements#(#)#)#{#if#(#!#firstPass#)#{#sb#.#append#(#System#.#getProperty#(#"path.separator"#)#)#;#}#else#{#firstPass#=#false#;#}#sb#.#append#(#(#(#File#)#componentEnum#.#nextElement#(#)#)#.#getAbsolutePath#(#)#)#;#}#return#sb#.#toString#(#)#;#}##void#setIsolated#(#boolean#isolated#)#{#ignoreBase#=#isolated#;#}##void#initializeClass#(#Class#theClass#)#{#// ***HACK*** We ask the VM to create an instance#// by voluntarily providing illegal arguments to force#// the VM to run the class' static initializer, while#// at the same time not running a valid constructor.#final#Constructor#[#]#cons#=#theClass#.#getDeclaredConstructors#(#)#;#//At least one constructor is guaranteed to be there, but check anyway.#if#(#cons#!=#null#)#{#if#(#cons#.#length#>#0#&&#cons#[#0#]#!=#null#)#{#final#String#[#]#strs#=#new#String#[#NUMBER_OF_STRINGS#]#;#try#{#cons#[#0#]#.#newInstance#(#(#Object#[#]#)#strs#)#;#// Expecting an exception to be thrown by this call:#// IllegalArgumentException: wrong number of Arguments#}#catch#(#Exception#e#)#{#// Ignore - we are interested only in the side#// effect - that of getting the static initializers#// invoked.  As we do not want to call a valid#// constructor to get this side effect, an#// attempt is made to call a hopefully#// invalid constructor - come on, nobody#// would have a constructor that takes in#// 256 String arguments ;-)#// (In fact, they can't - according to JVM spec#// section 4.10, the number of method parameters is limited#// to 255 by the definition of a method descriptor.#// Constructors count as methods here.)#}#}#}#}##void#addSystemPackageRoot#(#String#packageRoot#)#{#systemPackages#.#addElement#(#packageRoot#+#(#packageRoot#.#endsWith#(#"."#)#?#""#:#"."#)#)#;#}##void#addLoaderPackageRoot#(#String#packageRoot#)#{#loaderPackages#.#addElement#(#packageRoot#+#(#packageRoot#.#endsWith#(#"."#)#?#""#:#"."#)#)#;#}##Class#forceLoadClass#(#String#classname#)#throws#ClassNotFoundException#{#log#(#"force loading "#+#classname#,#Project#.#MSG_DEBUG#)#;#Class#theClass#=#findLoadedClass#(#classname#)#;#if#(#theClass#==#null#)#{#theClass#=#findClass#(#classname#)#;#}#return#theClass#;#}##Class#forceLoadSystemClass#(#String#classname#)#throws#ClassNotFoundException#{#log#(#"force system loading "#+#classname#,#Project#.#MSG_DEBUG#)#;#Class#theClass#=#findLoadedClass#(#classname#)#;#if#(#theClass#==#null#)#{#theClass#=#findBaseClass#(#classname#)#;#}#return#theClass#;#}##InputStream#getResourceAsStream#(#String#name#)#{#InputStream#resourceStream#=#null#;#if#(#isParentFirst#(#name#)#)#{#resourceStream#=#loadBaseResource#(#name#)#;#}#if#(#resourceStream#!=#null#)#{#log#(#"ResourceStream for "#+#name#+#" loaded from parent loader"#,#Project#.#MSG_DEBUG#)#;#}#else#{#resourceStream#=#loadResource#(#name#)#;#if#(#resourceStream#!=#null#)#{#log#(#"ResourceStream for "#+#name#+#" loaded from ant loader"#,#Project#.#MSG_DEBUG#)#;#}#}#if#(#resourceStream#==#null#&&#!#isParentFirst#(#name#)#)#{#if#(#ignoreBase#)#{#resourceStream#=#getRootLoader#(#)#==#null#?#null#:#getRootLoader#(#)#.#getResourceAsStream#(#name#)#;#}#else#{#resourceStream#=#loadBaseResource#(#name#)#;#}#if#(#resourceStream#!=#null#)#{#log#(#"ResourceStream for "#+#name#+#" loaded from parent loader"#,#Project#.#MSG_DEBUG#)#;#}#}#if#(#resourceStream#==#null#)#{#log#(#"Couldn't load ResourceStream for "#+#name#,#Project#.#MSG_DEBUG#)#;#}#return#resourceStream#;#}##InputStream#loadResource#(#String#name#)#{#// we need to search the components of the path to see if we can#// find the class we want.#InputStream#stream#=#null#;#Enumeration#e#=#pathComponents#.#elements#(#)#;#while#(#e#.#hasMoreElements#(#)#&&#stream#==#null#)#{#File#pathComponent#=#(#File#)#e#.#nextElement#(#)#;#stream#=#getResourceStream#(#pathComponent#,#name#)#;#}#return#stream#;#}##InputStream#loadBaseResource#(#String#name#)#{#return#parent#==#null#?#super#.#getResourceAsStream#(#name#)#:#parent#.#getResourceAsStream#(#name#)#;#}##InputStream#getResourceStream#(#File#file#,#String#resourceName#)#{#try#{#ZipFile#zipFile#=#(#ZipFile#)#zipFiles#.#get#(#file#)#;#if#(#zipFile#==#null#&&#file#.#isDirectory#(#)#)#{#File#resource#=#new#File#(#file#,#resourceName#)#;#if#(#resource#.#exists#(#)#)#{#return#new#FileInputStream#(#resource#)#;#}#}#else#{#if#(#zipFile#==#null#)#{#if#(#file#.#exists#(#)#)#{#zipFile#=#new#ZipFile#(#file#)#;#zipFiles#.#put#(#file#,#zipFile#)#;#}#else#{#return#null#;#}#//to eliminate a race condition, retrieve the entry#//that is in the hash table under that filename#zipFile#=#(#ZipFile#)#zipFiles#.#get#(#file#)#;#}#ZipEntry#entry#=#zipFile#.#getEntry#(#resourceName#)#;#if#(#entry#!=#null#)#{#return#zipFile#.#getInputStream#(#entry#)#;#}#}#}#catch#(#Exception#e#)#{#log#(#"Ignoring Exception "#+#e#.#getClass#(#)#.#getName#(#)#+#": "#+#e#.#getMessage#(#)#+#" reading resource "#+#resourceName#+#" from "#+#file#,#Project#.#MSG_VERBOSE#)#;#}#return#null#;#}##boolean#isParentFirst#(#String#resourceName#)#{#// default to the global setting and then see#// if this class belongs to a package which has been#// designated to use a specific loader first#// (this one or the parent one)#// XXX - shouldn't this always return false in isolated mode?#boolean#useParentFirst#=#parentFirst#;#for#(#Enumeration#e#=#systemPackages#.#elements#(#)#;#e#.#hasMoreElements#(#)#;#)#{#String#packageName#=#(#String#)#e#.#nextElement#(#)#;#if#(#resourceName#.#startsWith#(#packageName#)#)#{#useParentFirst#=#true#;#break#;#}#}#for#(#Enumeration#e#=#loaderPackages#.#elements#(#)#;#e#.#hasMoreElements#(#)#;#)#{#String#packageName#=#(#String#)#e#.#nextElement#(#)#;#if#(#resourceName#.#startsWith#(#packageName#)#)#{#useParentFirst#=#false#;#break#;#}#}#return#useParentFirst#;#}##ClassLoader#getRootLoader#(#)#{#ClassLoader#ret#=#getClass#(#)#.#getClassLoader#(#)#;#while#(#ret#!=#null#&&#ret#.#getParent#(#)#!=#null#)#{#ret#=#ret#.#getParent#(#)#;#}#return#ret#;#}##URL#getResource#(#String#name#)#{#// we need to search the components of the path to see if#// we can find the class we want.#URL#url#=#null#;#if#(#isParentFirst#(#name#)#)#{#url#=#parent#==#null#?#super#.#getResource#(#name#)#:#parent#.#getResource#(#name#)#;#}#if#(#url#!=#null#)#{#log#(#"Resource "#+#name#+#" loaded from parent loader"#,#Project#.#MSG_DEBUG#)#;#}#else#{#// try and load from this loader if the parent either didn't find#// it or wasn't consulted.#Enumeration#e#=#pathComponents#.#elements#(#)#;#while#(#e#.#hasMoreElements#(#)#&&#url#==#null#)#{#File#pathComponent#=#(#File#)#e#.#nextElement#(#)#;#url#=#getResourceURL#(#pathComponent#,#name#)#;#if#(#url#!=#null#)#{#log#(#"Resource "#+#name#+#" loaded from ant loader"#,#Project#.#MSG_DEBUG#)#;#}#}#}#if#(#url#==#null#&&#!#isParentFirst#(#name#)#)#{#// this loader was first but it didn't find it - try the parent#if#(#ignoreBase#)#{#url#=#getRootLoader#(#)#==#null#?#null#:#getRootLoader#(#)#.#getResource#(#name#)#;#}#else#{#url#=#parent#==#null#?#super#.#getResource#(#name#)#:#parent#.#getResource#(#name#)#;#}#if#(#url#!=#null#)#{#log#(#"Resource "#+#name#+#" loaded from parent loader"#,#Project#.#MSG_DEBUG#)#;#}#}#if#(#url#==#null#)#{#log#(#"Couldn't load Resource "#+#name#,#Project#.#MSG_DEBUG#)#;#}#return#url#;#}##Enumeration#/*<URL>*/#getNamedResources#(#String#name#)#throws#IOException#{#return#findResources#(#name#,#false#)#;#}##Enumeration#/*<URL>*/#findResources#(#String#name#)#throws#IOException#{#return#findResources#(#name#,#true#)#;#}##Enumeration#/*<URL>*/#findResources#(#String#name#,#boolean#parentHasBeenSearched#)#throws#IOException#{#Enumeration#/*<URL>*/#mine#=#new#ResourceEnumeration#(#name#)#;#Enumeration#/*<URL>*/#base#;#if#(#parent#!=#null#&&#(#!#parentHasBeenSearched#||#parent#!=#getParent#(#)#)#)#{#// Delegate to the parent:#base#=#parent#.#getResources#(#name#)#;#// Note: could cause overlaps in case#// ClassLoader.this.parent has matches and#// parentHasBeenSearched is true#}#else#{#// ClassLoader.this.parent is already delegated to for example from#// ClassLoader.getResources, no need:#base#=#new#CollectionUtils#.#EmptyEnumeration#(#)#;#}#if#(#isParentFirst#(#name#)#)#{#// Normal case.#return#CollectionUtils#.#append#(#base#,#mine#)#;#}#if#(#ignoreBase#)#{#return#getRootLoader#(#)#==#null#?#mine#:#CollectionUtils#.#append#(#mine#,#getRootLoader#(#)#.#getResources#(#name#)#)#;#}#// parent last:#return#CollectionUtils#.#append#(#mine#,#base#)#;#}##URL#getResourceURL#(#File#file#,#String#resourceName#)#{#try#{#ZipFile#zipFile#=#(#ZipFile#)#zipFiles#.#get#(#file#)#;#if#(#zipFile#==#null#&&#file#.#isDirectory#(#)#)#{#File#resource#=#new#File#(#file#,#resourceName#)#;#if#(#resource#.#exists#(#)#)#{#try#{#return#FILE_UTILS#.#getFileURL#(#resource#)#;#}#catch#(#MalformedURLException#ex#)#{#return#null#;#}#}#}#else#{#if#(#zipFile#==#null#)#{#if#(#file#.#exists#(#)#)#{#zipFile#=#new#ZipFile#(#file#)#;#zipFiles#.#put#(#file#,#zipFile#)#;#}#else#{#return#null#;#}#}#ZipEntry#entry#=#zipFile#.#getEntry#(#resourceName#)#;#if#(#entry#!=#null#)#{#try#{#return#new#URL#(#"jar:"#+#FILE_UTILS#.#getFileURL#(#file#)#+#"!/"#+#entry#)#;#}#catch#(#MalformedURLException#ex#)#{#return#null#;#}#}#}#}#catch#(#Exception#e#)#{#String#msg#=#"Unable to obtain resource from "#+#file#+#": "#;#log#(#msg#+#e#,#Project#.#MSG_WARN#)#;#System#.#err#.#println#(#msg#)#;#e#.#printStackTrace#(#)#;#}#return#null#;#}##Class#loadClass#(#String#classname#,#boolean#resolve#)#throws#ClassNotFoundException#{#// 'sync' is needed - otherwise 2 threads can load the same class#// twice, resulting in LinkageError: duplicated class definition.#// findLoadedClass avoids that, but without sync it won't work.#Class#theClass#=#findLoadedClass#(#classname#)#;#if#(#theClass#!=#null#)#{#return#theClass#;#}#if#(#isParentFirst#(#classname#)#)#{#try#{#theClass#=#findBaseClass#(#classname#)#;#log#(#"Class "#+#classname#+#" loaded from parent loader "#+#"(parentFirst)"#,#Project#.#MSG_DEBUG#)#;#}#catch#(#ClassNotFoundException#cnfe#)#{#theClass#=#findClass#(#classname#)#;#log#(#"Class "#+#classname#+#" loaded from ant loader "#+#"(parentFirst)"#,#Project#.#MSG_DEBUG#)#;#}#}#else#{#try#{#theClass#=#findClass#(#classname#)#;#log#(#"Class "#+#classname#+#" loaded from ant loader"#,#Project#.#MSG_DEBUG#)#;#}#catch#(#ClassNotFoundException#cnfe#)#{#if#(#ignoreBase#)#{#throw#cnfe#;#}#theClass#=#findBaseClass#(#classname#)#;#log#(#"Class "#+#classname#+#" loaded from parent loader"#,#Project#.#MSG_DEBUG#)#;#}#}#if#(#resolve#)#{#resolveClass#(#theClass#)#;#}#return#theClass#;#}##String#getClassFilename#(#String#classname#)#{#return#classname#.#replace#(#'.'#,#'/'#)#+#".class"#;#}##Class#defineClassFromData#(#File#container#,#byte#[#]#classData#,#String#classname#)#throws#IOException#{#definePackage#(#container#,#classname#)#;#ProtectionDomain#currentPd#=#Project#.#class#.#getProtectionDomain#(#)#;#String#classResource#=#getClassFilename#(#classname#)#;#CodeSource#src#=#new#CodeSource#(#FILE_UTILS#.#getFileURL#(#container#)#,#getCertificates#(#container#,#classResource#)#)#;#ProtectionDomain#classesPd#=#new#ProtectionDomain#(#src#,#currentPd#.#getPermissions#(#)#,#this#,#currentPd#.#getPrincipals#(#)#)#;#return#defineClass#(#classname#,#classData#,#0#,#classData#.#length#,#classesPd#)#;#}##void#definePackage#(#File#container#,#String#className#)#throws#IOException#{#int#classIndex#=#className#.#lastIndexOf#(#'.'#)#;#if#(#classIndex#==#-#1#)#{#return#;#}#String#packageName#=#className#.#substring#(#0#,#classIndex#)#;#if#(#getPackage#(#packageName#)#!=#null#)#{#// already defined#return#;#}#// define the package now#Manifest#manifest#=#getJarManifest#(#container#)#;#if#(#manifest#==#null#)#{#definePackage#(#packageName#,#null#,#null#,#null#,#null#,#null#,#null#,#null#)#;#}#else#{#definePackage#(#container#,#packageName#,#manifest#)#;#}#}##Manifest#getJarManifest#(#File#container#)#throws#IOException#{#if#(#container#.#isDirectory#(#)#)#{#return#null#;#}#JarFile#jarFile#=#null#;#try#{#jarFile#=#new#JarFile#(#container#)#;#return#jarFile#.#getManifest#(#)#;#}#finally#{#if#(#jarFile#!=#null#)#{#jarFile#.#close#(#)#;#}#}#}##Certificate#[#]#getCertificates#(#File#container#,#String#entry#)#throws#IOException#{#if#(#container#.#isDirectory#(#)#)#{#return#null#;#}#JarFile#jarFile#=#null#;#InputStream#is#=#null#;#try#{#jarFile#=#new#JarFile#(#container#)#;#JarEntry#ent#=#jarFile#.#getJarEntry#(#entry#)#;#if#(#ent#!=#null#)#{#// must read the input in order to obtain certificates#is#=#jarFile#.#getInputStream#(#ent#)#;#while#(#is#.#read#(#)#>=#0#)#;#}#return#ent#==#null#?#null#:#ent#.#getCertificates#(#)#;#}#finally#{#FileUtils#.#close#(#is#)#;#if#(#jarFile#!=#null#)#{#jarFile#.#close#(#)#;#}#}#}##void#definePackage#(#File#container#,#String#packageName#,#Manifest#manifest#)#{#String#sectionName#=#packageName#.#replace#(#'.'#,#'/'#)#+#"/"#;#String#specificationTitle#=#null#;#String#specificationVendor#=#null#;#String#specificationVersion#=#null#;#String#implementationTitle#=#null#;#String#implementationVendor#=#null#;#String#implementationVersion#=#null#;#String#sealedString#=#null#;#URL#sealBase#=#null#;#Attributes#sectionAttributes#=#manifest#.#getAttributes#(#sectionName#)#;#if#(#sectionAttributes#!=#null#)#{#specificationTitle#=#sectionAttributes#.#getValue#(#Name#.#SPECIFICATION_TITLE#)#;#specificationVendor#=#sectionAttributes#.#getValue#(#Name#.#SPECIFICATION_VENDOR#)#;#specificationVersion#=#sectionAttributes#.#getValue#(#Name#.#SPECIFICATION_VERSION#)#;#implementationTitle#=#sectionAttributes#.#getValue#(#Name#.#IMPLEMENTATION_TITLE#)#;#implementationVendor#=#sectionAttributes#.#getValue#(#Name#.#IMPLEMENTATION_VENDOR#)#;#implementationVersion#=#sectionAttributes#.#getValue#(#Name#.#IMPLEMENTATION_VERSION#)#;#sealedString#=#sectionAttributes#.#getValue#(#Name#.#SEALED#)#;#}#Attributes#mainAttributes#=#manifest#.#getMainAttributes#(#)#;#if#(#mainAttributes#!=#null#)#{#if#(#specificationTitle#==#null#)#{#specificationTitle#=#mainAttributes#.#getValue#(#Name#.#SPECIFICATION_TITLE#)#;#}#if#(#specificationVendor#==#null#)#{#specificationVendor#=#mainAttributes#.#getValue#(#Name#.#SPECIFICATION_VENDOR#)#;#}#if#(#specificationVersion#==#null#)#{#specificationVersion#=#mainAttributes#.#getValue#(#Name#.#SPECIFICATION_VERSION#)#;#}#if#(#implementationTitle#==#null#)#{#implementationTitle#=#mainAttributes#.#getValue#(#Name#.#IMPLEMENTATION_TITLE#)#;#}#if#(#implementationVendor#==#null#)#{#implementationVendor#=#mainAttributes#.#getValue#(#Name#.#IMPLEMENTATION_VENDOR#)#;#}#if#(#implementationVersion#==#null#)#{#implementationVersion#=#mainAttributes#.#getValue#(#Name#.#IMPLEMENTATION_VERSION#)#;#}#if#(#sealedString#==#null#)#{#sealedString#=#mainAttributes#.#getValue#(#Name#.#SEALED#)#;#}#}#if#(#sealedString#!=#null#&&#sealedString#.#toLowerCase#(#Locale#.#ENGLISH#)#.#equals#(#"true"#)#)#{#try#{#sealBase#=#new#URL#(#FileUtils#.#getFileUtils#(#)#.#toURI#(#container#.#getAbsolutePath#(#)#)#)#;#}#catch#(#MalformedURLException#e#)#{#// ignore#}#}#definePackage#(#packageName#,#specificationTitle#,#specificationVersion#,#specificationVendor#,#implementationTitle#,#implementationVersion#,#implementationVendor#,#sealBase#)#;#}##Class#getClassFromStream#(#InputStream#stream#,#String#classname#,#File#container#)#throws#IOException#,#SecurityException#{#ByteArrayOutputStream#baos#=#new#ByteArrayOutputStream#(#)#;#int#bytesRead#=#-#1#;#byte#[#]#buffer#=#new#byte#[#BUFFER_SIZE#]#;#while#(#(#bytesRead#=#stream#.#read#(#buffer#,#0#,#BUFFER_SIZE#)#)#!=#-#1#)#{#baos#.#write#(#buffer#,#0#,#bytesRead#)#;#}#byte#[#]#classData#=#baos#.#toByteArray#(#)#;#return#defineClassFromData#(#container#,#classData#,#classname#)#;#}##Class#findClass#(#String#name#)#throws#ClassNotFoundException#{#log#(#"Finding class "#+#name#,#Project#.#MSG_DEBUG#)#;#return#findClassInComponents#(#name#)#;#}##boolean#isInPath#(#File#component#)#{#return#pathComponents#.#contains#(#component#)#;#}##Class#findClassInComponents#(#String#name#)#throws#ClassNotFoundException#{#// we need to search the components of the path to see if#// we can find the class we want.#InputStream#stream#=#null#;#String#classFilename#=#getClassFilename#(#name#)#;#try#{#Enumeration#e#=#pathComponents#.#elements#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#File#pathComponent#=#(#File#)#e#.#nextElement#(#)#;#try#{#stream#=#getResourceStream#(#pathComponent#,#classFilename#)#;#if#(#stream#!=#null#)#{#log#(#"Loaded from "#+#pathComponent#+#" "#+#classFilename#,#Project#.#MSG_DEBUG#)#;#return#getClassFromStream#(#stream#,#name#,#pathComponent#)#;#}#}#catch#(#SecurityException#se#)#{#throw#se#;#}#catch#(#IOException#ioe#)#{#// ioe.printStackTrace();#log#(#"Exception reading component "#+#pathComponent#+#" (reason: "#+#ioe#.#getMessage#(#)#+#")"#,#Project#.#MSG_VERBOSE#)#;#}#}#throw#new#ClassNotFoundException#(#name#)#;#}#finally#{#FileUtils#.#close#(#stream#)#;#}#}##Class#findBaseClass#(#String#name#)#throws#ClassNotFoundException#{#return#parent#==#null#?#findSystemClass#(#name#)#:#parent#.#loadClass#(#name#)#;#}##void#cleanup#(#)#{#for#(#Enumeration#e#=#zipFiles#.#elements#(#)#;#e#.#hasMoreElements#(#)#;#)#{#ZipFile#zipFile#=#(#ZipFile#)#e#.#nextElement#(#)#;#try#{#zipFile#.#close#(#)#;#}#catch#(#IOException#ioe#)#{#// ignore#}#}#zipFiles#=#new#Hashtable#(#)#;#if#(#project#!=#null#)#{#project#.#removeBuildListener#(#this#)#;#}#project#=#null#;#}##ClassLoader#getConfiguredParent#(#)#{#return#parent#;#}##void#buildStarted#(#BuildEvent#event#)#{#// Not significant for the class loader.#}##void#buildFinished#(#BuildEvent#event#)#{#cleanup#(#)#;#}##void#subBuildFinished#(#BuildEvent#event#)#{#if#(#event#.#getProject#(#)#==#project#)#{#cleanup#(#)#;#}#}##void#subBuildStarted#(#BuildEvent#event#)#{#// Not significant for the class loader.#}##void#targetStarted#(#BuildEvent#event#)#{#// Not significant for the class loader.#}##void#targetFinished#(#BuildEvent#event#)#{#// Not significant for the class loader.#}##void#taskStarted#(#BuildEvent#event#)#{#// Not significant for the class loader.#}##void#taskFinished#(#BuildEvent#event#)#{#// Not significant for the class loader.#}##void#messageLogged#(#BuildEvent#event#)#{#// Not significant for the class loader.#}##void#addJavaLibraries#(#)#{#Vector#packages#=#JavaEnvUtils#.#getJrePackages#(#)#;#Enumeration#e#=#packages#.#elements#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#String#packageName#=#(#String#)#e#.#nextElement#(#)#;#addSystemPackageRoot#(#packageName#)#;#}#}##String#toString#(#)#{#return#"AntClassLoader["#+#getClasspath#(#)#+#"]"#;#}##AntClassLoader#newAntClassLoader#(#ClassLoader#parent#,#Project#project#,#Path#path#,#boolean#parentFirst#)#{#if#(#subClassToLoad#!=#null#)#{#return#(#AntClassLoader#)#ReflectUtil#.#newInstance#(#subClassToLoad#,#CONSTRUCTOR_ARGS#,#new#Object#[#]#{#parent#,#project#,#path#,#Boolean#.#valueOf#(#parentFirst#)#}#)#;#}#return#new#AntClassLoader#(#parent#,#project#,#path#,#parentFirst#)#;#}##