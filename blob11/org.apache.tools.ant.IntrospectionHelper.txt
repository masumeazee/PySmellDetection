boolean#isHiddenSetMethod#(#String#name#,#Class#type#)#{#if#(#"setLocation"#.#equals#(#name#)#&&#org#.#apache#.#tools#.#ant#.#Location#.#class#.#equals#(#type#)#)#{#return#true#;#}#if#(#"setTaskType"#.#equals#(#name#)#&&#java#.#lang#.#String#.#class#.#equals#(#type#)#)#{#return#true#;#}#return#false#;#}##IntrospectionHelper#getHelper#(#Class#c#)#{#return#getHelper#(#null#,#c#)#;#}##IntrospectionHelper#getHelper#(#Project#p#,#Class#c#)#{#IntrospectionHelper#ih#=#(#IntrospectionHelper#)#HELPERS#.#get#(#c#.#getName#(#)#)#;#// If a helper cannot be found, or if the helper is for another#// classloader, create a new IH#if#(#ih#==#null#||#ih#.#bean#!=#c#)#{#ih#=#new#IntrospectionHelper#(#c#)#;#if#(#p#!=#null#)#{#// #30162: do *not* cache this if there is no project, as we#// cannot guarantee that the cache will be cleared.#HELPERS#.#put#(#c#.#getName#(#)#,#ih#)#;#}#}#return#ih#;#}##void#setAttribute#(#Project#p#,#Object#element#,#String#attributeName#,#Object#value#)#throws#BuildException#{#AttributeSetter#as#=#(#AttributeSetter#)#attributeSetters#.#get#(#attributeName#.#toLowerCase#(#Locale#.#US#)#)#;#if#(#as#==#null#&&#value#!=#null#)#{#if#(#element#instanceof#DynamicAttributeNS#)#{#DynamicAttributeNS#dc#=#(#DynamicAttributeNS#)#element#;#String#uriPlusPrefix#=#ProjectHelper#.#extractUriFromComponentName#(#attributeName#)#;#String#uri#=#ProjectHelper#.#extractUriFromComponentName#(#uriPlusPrefix#)#;#String#localName#=#ProjectHelper#.#extractNameFromComponentName#(#attributeName#)#;#String#qName#=#""#.#equals#(#uri#)#?#localName#:#uri#+#":"#+#localName#;#dc#.#setDynamicAttribute#(#uri#,#localName#,#qName#,#value#.#toString#(#)#)#;#return#;#}#if#(#element#instanceof#DynamicAttribute#)#{#DynamicAttribute#dc#=#(#DynamicAttribute#)#element#;#dc#.#setDynamicAttribute#(#attributeName#.#toLowerCase#(#Locale#.#US#)#,#value#.#toString#(#)#)#;#return#;#}#if#(#attributeName#.#indexOf#(#':'#)#>=#0#)#{#return#;#// Ignore attribute from unknown uri's#}#String#msg#=#getElementName#(#p#,#element#)#+#" doesn't support the \""#+#attributeName#+#"\" attribute."#;#throw#new#UnsupportedAttributeException#(#msg#,#attributeName#)#;#}#try#{#as#.#setObject#(#p#,#element#,#value#)#;#}#catch#(#IllegalAccessException#ie#)#{#// impossible as getMethods should only return public methods#throw#new#BuildException#(#ie#)#;#}#catch#(#InvocationTargetException#ite#)#{#throw#extractBuildException#(#ite#)#;#}#}##void#setAttribute#(#Project#p#,#Object#element#,#String#attributeName#,#String#value#)#throws#BuildException#{#setAttribute#(#p#,#element#,#attributeName#,#(#Object#)#value#)#;#}##void#addText#(#Project#project#,#Object#element#,#String#text#)#throws#BuildException#{#if#(#addText#==#null#)#{#text#=#text#.#trim#(#)#;#// Element doesn't handle text content#if#(#text#.#length#(#)#==#0#)#{#// Only whitespace - ignore#return#;#}#// Not whitespace - fail#throw#new#BuildException#(#project#.#getElementName#(#element#)#+#" doesn't support nested text data (\""#+#condenseText#(#text#)#+#"\")."#)#;#}#try#{#addText#.#invoke#(#element#,#new#Object#[#]#{#text#}#)#;#}#catch#(#IllegalAccessException#ie#)#{#// impossible as getMethods should only return public methods#throw#new#BuildException#(#ie#)#;#}#catch#(#InvocationTargetException#ite#)#{#throw#extractBuildException#(#ite#)#;#}#}##void#throwNotSupported#(#Project#project#,#Object#parent#,#String#elementName#)#{#String#msg#=#project#.#getElementName#(#parent#)#+#NOT_SUPPORTED_CHILD_PREFIX#+#elementName#+#NOT_SUPPORTED_CHILD_POSTFIX#;#throw#new#UnsupportedElementException#(#msg#,#elementName#)#;#}##NestedCreator#getNestedCreator#(#Project#project#,#String#parentUri#,#Object#parent#,#String#elementName#,#UnknownElement#child#)#throws#BuildException#{#String#uri#=#ProjectHelper#.#extractUriFromComponentName#(#elementName#)#;#String#name#=#ProjectHelper#.#extractNameFromComponentName#(#elementName#)#;#if#(#uri#.#equals#(#ProjectHelper#.#ANT_CORE_URI#)#)#{#uri#=#""#;#}#if#(#parentUri#.#equals#(#ProjectHelper#.#ANT_CORE_URI#)#)#{#parentUri#=#""#;#}#NestedCreator#nc#=#null#;#if#(#uri#.#equals#(#parentUri#)#||#uri#.#length#(#)#==#0#)#{#nc#=#(#NestedCreator#)#nestedCreators#.#get#(#name#.#toLowerCase#(#Locale#.#US#)#)#;#}#if#(#nc#==#null#)#{#nc#=#createAddTypeCreator#(#project#,#parent#,#elementName#)#;#}#if#(#nc#==#null#&&#(#parent#instanceof#DynamicElementNS#||#parent#instanceof#DynamicElement#)#)#{#String#qName#=#child#==#null#?#name#:#child#.#getQName#(#)#;#final#Object#nestedElement#=#createDynamicElement#(#parent#,#child#==#null#?#""#:#child#.#getNamespace#(#)#,#name#,#qName#)#;#if#(#nestedElement#!=#null#)#{#nc#=#new#NestedCreator#(#null#)#{#Object#create#(#Project#project#,#Object#parent#,#Object#ignore#)#{#return#nestedElement#;#}#}#;#}#}#if#(#nc#==#null#)#{#throwNotSupported#(#project#,#parent#,#elementName#)#;#}#return#nc#;#}##Object#create#(#Project#project#,#Object#parent#,#Object#ignore#)#{#return#nestedElement#;#}##Object#createDynamicElement#(#Object#parent#,#String#ns#,#String#localName#,#String#qName#)#{#Object#nestedElement#=#null#;#if#(#parent#instanceof#DynamicElementNS#)#{#DynamicElementNS#dc#=#(#DynamicElementNS#)#parent#;#nestedElement#=#dc#.#createDynamicElement#(#ns#,#localName#,#qName#)#;#}#if#(#nestedElement#==#null#&&#parent#instanceof#DynamicElement#)#{#DynamicElement#dc#=#(#DynamicElement#)#parent#;#nestedElement#=#dc#.#createDynamicElement#(#localName#.#toLowerCase#(#Locale#.#US#)#)#;#}#return#nestedElement#;#}##Object#createElement#(#Project#project#,#Object#parent#,#String#elementName#)#throws#BuildException#{#NestedCreator#nc#=#getNestedCreator#(#project#,#""#,#parent#,#elementName#,#null#)#;#try#{#Object#nestedElement#=#nc#.#create#(#project#,#parent#,#null#)#;#if#(#project#!=#null#)#{#project#.#setProjectReference#(#nestedElement#)#;#}#return#nestedElement#;#}#catch#(#IllegalAccessException#ie#)#{#// impossible as getMethods should only return public methods#throw#new#BuildException#(#ie#)#;#}#catch#(#InstantiationException#ine#)#{#// impossible as getMethods should only return public methods#throw#new#BuildException#(#ine#)#;#}#catch#(#InvocationTargetException#ite#)#{#throw#extractBuildException#(#ite#)#;#}#}##Creator#getElementCreator#(#Project#project#,#String#parentUri#,#Object#parent#,#String#elementName#,#UnknownElement#ue#)#{#NestedCreator#nc#=#getNestedCreator#(#project#,#parentUri#,#parent#,#elementName#,#ue#)#;#return#new#Creator#(#project#,#parent#,#nc#)#;#}##boolean#isDynamic#(#)#{#return#DynamicElement#.#class#.#isAssignableFrom#(#bean#)#||#DynamicElementNS#.#class#.#isAssignableFrom#(#bean#)#;#}##boolean#isContainer#(#)#{#return#TaskContainer#.#class#.#isAssignableFrom#(#bean#)#;#}##boolean#supportsNestedElement#(#String#elementName#)#{#return#supportsNestedElement#(#""#,#elementName#)#;#}##boolean#supportsNestedElement#(#String#parentUri#,#String#elementName#)#{#if#(#isDynamic#(#)#||#addTypeMethods#.#size#(#)#>#0#)#{#return#true#;#}#return#supportsReflectElement#(#parentUri#,#elementName#)#;#}##boolean#supportsNestedElement#(#String#parentUri#,#String#elementName#,#Project#project#,#Object#parent#)#{#if#(#addTypeMethods#.#size#(#)#>#0#&&#createAddTypeCreator#(#project#,#parent#,#elementName#)#!=#null#)#{#return#true#;#}#return#isDynamic#(#)#||#supportsReflectElement#(#parentUri#,#elementName#)#;#}##boolean#supportsReflectElement#(#String#parentUri#,#String#elementName#)#{#String#name#=#ProjectHelper#.#extractNameFromComponentName#(#elementName#)#;#if#(#!#nestedCreators#.#containsKey#(#name#.#toLowerCase#(#Locale#.#US#)#)#)#{#return#false#;#}#String#uri#=#ProjectHelper#.#extractUriFromComponentName#(#elementName#)#;#if#(#uri#.#equals#(#ProjectHelper#.#ANT_CORE_URI#)#)#{#uri#=#""#;#}#if#(#""#.#equals#(#uri#)#)#{#return#true#;#}#if#(#parentUri#.#equals#(#ProjectHelper#.#ANT_CORE_URI#)#)#{#parentUri#=#""#;#}#return#uri#.#equals#(#parentUri#)#;#}##void#storeElement#(#Project#project#,#Object#parent#,#Object#child#,#String#elementName#)#throws#BuildException#{#if#(#elementName#==#null#)#{#return#;#}#NestedCreator#ns#=#(#NestedCreator#)#nestedCreators#.#get#(#elementName#.#toLowerCase#(#Locale#.#US#)#)#;#if#(#ns#==#null#)#{#return#;#}#try#{#ns#.#store#(#parent#,#child#)#;#}#catch#(#IllegalAccessException#ie#)#{#// impossible as getMethods should only return public methods#throw#new#BuildException#(#ie#)#;#}#catch#(#InstantiationException#ine#)#{#// impossible as getMethods should only return public methods#throw#new#BuildException#(#ine#)#;#}#catch#(#InvocationTargetException#ite#)#{#throw#extractBuildException#(#ite#)#;#}#}##BuildException#extractBuildException#(#InvocationTargetException#ite#)#{#Throwable#t#=#ite#.#getTargetException#(#)#;#if#(#t#instanceof#BuildException#)#{#return#(#BuildException#)#t#;#}#return#new#BuildException#(#t#)#;#}##Class#getElementType#(#String#elementName#)#throws#BuildException#{#Class#nt#=#(#Class#)#nestedTypes#.#get#(#elementName#)#;#if#(#nt#==#null#)#{#throw#new#UnsupportedElementException#(#"Class "#+#bean#.#getName#(#)#+#" doesn't support the nested \""#+#elementName#+#"\" element."#,#elementName#)#;#}#return#nt#;#}##Class#getAttributeType#(#String#attributeName#)#throws#BuildException#{#Class#at#=#(#Class#)#attributeTypes#.#get#(#attributeName#)#;#if#(#at#==#null#)#{#throw#new#UnsupportedAttributeException#(#"Class "#+#bean#.#getName#(#)#+#" doesn't support the \""#+#attributeName#+#"\" attribute."#,#attributeName#)#;#}#return#at#;#}##Method#getAddTextMethod#(#)#throws#BuildException#{#if#(#!#supportsCharacters#(#)#)#{#throw#new#BuildException#(#"Class "#+#bean#.#getName#(#)#+#" doesn't support nested text data."#)#;#}#return#addText#;#}##Method#getElementMethod#(#String#elementName#)#throws#BuildException#{#Object#creator#=#nestedCreators#.#get#(#elementName#)#;#if#(#creator#==#null#)#{#throw#new#UnsupportedElementException#(#"Class "#+#bean#.#getName#(#)#+#" doesn't support the nested \""#+#elementName#+#"\" element."#,#elementName#)#;#}#return#(#(#NestedCreator#)#creator#)#.#method#;#}##Method#getAttributeMethod#(#String#attributeName#)#throws#BuildException#{#Object#setter#=#attributeSetters#.#get#(#attributeName#)#;#if#(#setter#==#null#)#{#throw#new#UnsupportedAttributeException#(#"Class "#+#bean#.#getName#(#)#+#" doesn't support the \""#+#attributeName#+#"\" attribute."#,#attributeName#)#;#}#return#(#(#AttributeSetter#)#setter#)#.#method#;#}##boolean#supportsCharacters#(#)#{#return#addText#!=#null#;#}##Enumeration#getAttributes#(#)#{#return#attributeSetters#.#keys#(#)#;#}##Map#getAttributeMap#(#)#{#return#attributeTypes#.#isEmpty#(#)#?#Collections#.#EMPTY_MAP#:#Collections#.#unmodifiableMap#(#attributeTypes#)#;#}##Enumeration#getNestedElements#(#)#{#return#nestedTypes#.#keys#(#)#;#}##Map#getNestedElementMap#(#)#{#return#nestedTypes#.#isEmpty#(#)#?#Collections#.#EMPTY_MAP#:#Collections#.#unmodifiableMap#(#nestedTypes#)#;#}##List#getExtensionPoints#(#)#{#return#addTypeMethods#.#isEmpty#(#)#?#Collections#.#EMPTY_LIST#:#Collections#.#unmodifiableList#(#addTypeMethods#)#;#}##AttributeSetter#createAttributeSetter#(#final#Method#m#,#Class#arg#,#final#String#attrName#)#{#// use wrappers for primitive classes, e.g. int and#// Integer are treated identically#final#Class#reflectedArg#=#PRIMITIVE_TYPE_MAP#.#containsKey#(#arg#)#?#(#Class#)#PRIMITIVE_TYPE_MAP#.#get#(#arg#)#:#arg#;#// Object.class - it gets handled differently by AttributeSetter#if#(#java#.#lang#.#Object#.#class#==#reflectedArg#)#{#return#new#AttributeSetter#(#m#,#arg#)#{#public#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#{#throw#new#BuildException#(#"Internal ant problem - this should not get called"#)#;#}#}#;#}#// simplest case - setAttribute expects String#if#(#java#.#lang#.#String#.#class#.#equals#(#reflectedArg#)#)#{#return#new#AttributeSetter#(#m#,#arg#)#{#public#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#{#m#.#invoke#(#parent#,#(#Object#[#]#)#new#String#[#]#{#value#}#)#;#}#}#;#}#// char and Character get special treatment - take the first character#if#(#java#.#lang#.#Character#.#class#.#equals#(#reflectedArg#)#)#{#return#new#AttributeSetter#(#m#,#arg#)#{#public#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#{#if#(#value#.#length#(#)#==#0#)#{#throw#new#BuildException#(#"The value \"\" is not a "#+#"legal value for attribute \""#+#attrName#+#"\""#)#;#}#m#.#invoke#(#parent#,#(#Object#[#]#)#new#Character#[#]#{#new#Character#(#value#.#charAt#(#0#)#)#}#)#;#}#}#;#}#// boolean and Boolean get special treatment because we have a nice method in Project#if#(#java#.#lang#.#Boolean#.#class#.#equals#(#reflectedArg#)#)#{#return#new#AttributeSetter#(#m#,#arg#)#{#public#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#{#m#.#invoke#(#parent#,#(#Object#[#]#)#new#Boolean#[#]#{#Project#.#toBoolean#(#value#)#?#Boolean#.#TRUE#:#Boolean#.#FALSE#}#)#;#}#}#;#}#// Class doesn't have a String constructor but a decent factory method#if#(#java#.#lang#.#Class#.#class#.#equals#(#reflectedArg#)#)#{#return#new#AttributeSetter#(#m#,#arg#)#{#public#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#try#{#m#.#invoke#(#parent#,#new#Object#[#]#{#Class#.#forName#(#value#)#}#)#;#}#catch#(#ClassNotFoundException#ce#)#{#throw#new#BuildException#(#ce#)#;#}#}#}#;#}#// resolve relative paths through Project#if#(#java#.#io#.#File#.#class#.#equals#(#reflectedArg#)#)#{#return#new#AttributeSetter#(#m#,#arg#)#{#public#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#{#m#.#invoke#(#parent#,#new#Object#[#]#{#p#.#resolveFile#(#value#)#}#)#;#}#}#;#}#// resolve Resources/FileProviders as FileResources relative to Project:#if#(#Resource#.#class#.#equals#(#reflectedArg#)#||#FileProvider#.#class#.#equals#(#reflectedArg#)#)#{#return#new#AttributeSetter#(#m#,#arg#)#{#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#m#.#invoke#(#parent#,#new#Object#[#]#{#new#FileResource#(#p#,#p#.#resolveFile#(#value#)#)#}#)#;#}#;#}#;#}#// EnumeratedAttributes have their own helper class#if#(#EnumeratedAttribute#.#class#.#isAssignableFrom#(#reflectedArg#)#)#{#return#new#AttributeSetter#(#m#,#arg#)#{#public#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#try#{#EnumeratedAttribute#ea#=#(#EnumeratedAttribute#)#reflectedArg#.#newInstance#(#)#;#ea#.#setValue#(#value#)#;#m#.#invoke#(#parent#,#new#Object#[#]#{#ea#}#)#;#}#catch#(#InstantiationException#ie#)#{#throw#new#BuildException#(#ie#)#;#}#}#}#;#}#AttributeSetter#setter#=#getEnumSetter#(#reflectedArg#,#m#,#arg#)#;#if#(#setter#!=#null#)#{#return#setter#;#}#if#(#java#.#lang#.#Long#.#class#.#equals#(#reflectedArg#)#)#{#return#new#AttributeSetter#(#m#,#arg#)#{#public#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#try#{#m#.#invoke#(#parent#,#new#Object#[#]#{#new#Long#(#StringUtils#.#parseHumanSizes#(#value#)#)#}#)#;#}#catch#(#NumberFormatException#e#)#{#throw#new#BuildException#(#"Can't assign non-numeric"#+#" value '"#+#value#+#"' to"#+#" attribute "#+#attrName#)#;#}#catch#(#InvocationTargetException#e#)#{#throw#e#;#}#catch#(#IllegalAccessException#e#)#{#throw#e#;#}#catch#(#Exception#e#)#{#throw#new#BuildException#(#e#)#;#}#}#}#;#}#// worst case. look for a public String constructor and use it#// also supports new Whatever(Project, String) as for Path or Reference#// This is used (deliberately) for all primitives/wrappers other than#// char, boolean, and long.#boolean#includeProject#;#Constructor#c#;#try#{#// First try with Project.#c#=#reflectedArg#.#getConstructor#(#new#Class#[#]#{#Project#.#class#,#String#.#class#}#)#;#includeProject#=#true#;#}#catch#(#NoSuchMethodException#nme#)#{#// OK, try without.#try#{#c#=#reflectedArg#.#getConstructor#(#new#Class#[#]#{#String#.#class#}#)#;#includeProject#=#false#;#}#catch#(#NoSuchMethodException#nme2#)#{#// Well, no matching constructor.#return#null#;#}#}#final#boolean#finalIncludeProject#=#includeProject#;#final#Constructor#finalConstructor#=#c#;#return#new#AttributeSetter#(#m#,#arg#)#{#public#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#try#{#Object#[#]#args#=#finalIncludeProject#?#new#Object#[#]#{#p#,#value#}#:#new#Object#[#]#{#value#}#;#Object#attribute#=#finalConstructor#.#newInstance#(#args#)#;#if#(#p#!=#null#)#{#p#.#setProjectReference#(#attribute#)#;#}#m#.#invoke#(#parent#,#new#Object#[#]#{#attribute#}#)#;#}#catch#(#InvocationTargetException#e#)#{#Throwable#cause#=#e#.#getCause#(#)#;#if#(#cause#instanceof#IllegalArgumentException#)#{#throw#new#BuildException#(#"Can't assign value '"#+#value#+#"' to attribute "#+#attrName#+#", reason: "#+#cause#.#getClass#(#)#+#" with message '"#+#cause#.#getMessage#(#)#+#"'"#)#;#}#throw#e#;#}#catch#(#InstantiationException#ie#)#{#throw#new#BuildException#(#ie#)#;#}#}#}#;#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#{#throw#new#BuildException#(#"Internal ant problem - this should not get called"#)#;#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#{#m#.#invoke#(#parent#,#(#Object#[#]#)#new#String#[#]#{#value#}#)#;#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#{#if#(#value#.#length#(#)#==#0#)#{#throw#new#BuildException#(#"The value \"\" is not a "#+#"legal value for attribute \""#+#attrName#+#"\""#)#;#}#m#.#invoke#(#parent#,#(#Object#[#]#)#new#Character#[#]#{#new#Character#(#value#.#charAt#(#0#)#)#}#)#;#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#{#m#.#invoke#(#parent#,#(#Object#[#]#)#new#Boolean#[#]#{#Project#.#toBoolean#(#value#)#?#Boolean#.#TRUE#:#Boolean#.#FALSE#}#)#;#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#try#{#m#.#invoke#(#parent#,#new#Object#[#]#{#Class#.#forName#(#value#)#}#)#;#}#catch#(#ClassNotFoundException#ce#)#{#throw#new#BuildException#(#ce#)#;#}#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#{#m#.#invoke#(#parent#,#new#Object#[#]#{#p#.#resolveFile#(#value#)#}#)#;#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#m#.#invoke#(#parent#,#new#Object#[#]#{#new#FileResource#(#p#,#p#.#resolveFile#(#value#)#)#}#)#;#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#try#{#EnumeratedAttribute#ea#=#(#EnumeratedAttribute#)#reflectedArg#.#newInstance#(#)#;#ea#.#setValue#(#value#)#;#m#.#invoke#(#parent#,#new#Object#[#]#{#ea#}#)#;#}#catch#(#InstantiationException#ie#)#{#throw#new#BuildException#(#ie#)#;#}#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#try#{#m#.#invoke#(#parent#,#new#Object#[#]#{#new#Long#(#StringUtils#.#parseHumanSizes#(#value#)#)#}#)#;#}#catch#(#NumberFormatException#e#)#{#throw#new#BuildException#(#"Can't assign non-numeric"#+#" value '"#+#value#+#"' to"#+#" attribute "#+#attrName#)#;#}#catch#(#InvocationTargetException#e#)#{#throw#e#;#}#catch#(#IllegalAccessException#e#)#{#throw#e#;#}#catch#(#Exception#e#)#{#throw#new#BuildException#(#e#)#;#}#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#try#{#Object#[#]#args#=#finalIncludeProject#?#new#Object#[#]#{#p#,#value#}#:#new#Object#[#]#{#value#}#;#Object#attribute#=#finalConstructor#.#newInstance#(#args#)#;#if#(#p#!=#null#)#{#p#.#setProjectReference#(#attribute#)#;#}#m#.#invoke#(#parent#,#new#Object#[#]#{#attribute#}#)#;#}#catch#(#InvocationTargetException#e#)#{#Throwable#cause#=#e#.#getCause#(#)#;#if#(#cause#instanceof#IllegalArgumentException#)#{#throw#new#BuildException#(#"Can't assign value '"#+#value#+#"' to attribute "#+#attrName#+#", reason: "#+#cause#.#getClass#(#)#+#" with message '"#+#cause#.#getMessage#(#)#+#"'"#)#;#}#throw#e#;#}#catch#(#InstantiationException#ie#)#{#throw#new#BuildException#(#ie#)#;#}#}##AttributeSetter#getEnumSetter#(#final#Class#reflectedArg#,#final#Method#m#,#Class#arg#)#{#Class#enumClass#=#null#;#try#{#enumClass#=#Class#.#forName#(#"java.lang.Enum"#)#;#}#catch#(#ClassNotFoundException#e#)#{#//ignore#}#if#(#enumClass#!=#null#&&#enumClass#.#isAssignableFrom#(#reflectedArg#)#)#{#return#new#AttributeSetter#(#m#,#arg#)#{#public#void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#try#{#m#.#invoke#(#parent#,#new#Object#[#]#{#reflectedArg#.#getMethod#(#"valueOf"#,#new#Class#[#]#{#String#.#class#}#)#.#invoke#(#null#,#new#Object#[#]#{#value#}#)#}#)#;#}#catch#(#InvocationTargetException#x#)#{#//there is specific logic here for the value#// being out of the allowed set of enumerations.#if#(#x#.#getTargetException#(#)#instanceof#IllegalArgumentException#)#{#throw#new#BuildException#(#"'"#+#value#+#"' is not a permitted value for "#+#reflectedArg#.#getName#(#)#)#;#}#//only if the exception is not an IllegalArgument do we#// request the#//BuildException via extractBuildException():#throw#extractBuildException#(#x#)#;#}#catch#(#Exception#x#)#{#//any other failure of invoke() to work.#throw#new#BuildException#(#x#)#;#}#}#}#;#}#return#null#;#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#try#{#m#.#invoke#(#parent#,#new#Object#[#]#{#reflectedArg#.#getMethod#(#"valueOf"#,#new#Class#[#]#{#String#.#class#}#)#.#invoke#(#null#,#new#Object#[#]#{#value#}#)#}#)#;#}#catch#(#InvocationTargetException#x#)#{#//there is specific logic here for the value#// being out of the allowed set of enumerations.#if#(#x#.#getTargetException#(#)#instanceof#IllegalArgumentException#)#{#throw#new#BuildException#(#"'"#+#value#+#"' is not a permitted value for "#+#reflectedArg#.#getName#(#)#)#;#}#//only if the exception is not an IllegalArgument do we#// request the#//BuildException via extractBuildException():#throw#extractBuildException#(#x#)#;#}#catch#(#Exception#x#)#{#//any other failure of invoke() to work.#throw#new#BuildException#(#x#)#;#}#}##String#getElementName#(#Project#project#,#Object#element#)#{#return#project#.#getElementName#(#element#)#;#}##String#getPropertyName#(#String#methodName#,#String#prefix#)#{#return#methodName#.#substring#(#prefix#.#length#(#)#)#.#toLowerCase#(#Locale#.#US#)#;#}##void#setPolyType#(#String#polyType#)#{#this#.#polyType#=#polyType#;#}##Object#create#(#)#{#if#(#polyType#!=#null#)#{#if#(#!#nestedCreator#.#isPolyMorphic#(#)#)#{#throw#new#BuildException#(#"Not allowed to use the polymorphic form for this element"#)#;#}#ComponentHelper#helper#=#ComponentHelper#.#getComponentHelper#(#project#)#;#nestedObject#=#helper#.#createComponent#(#polyType#)#;#if#(#nestedObject#==#null#)#{#throw#new#BuildException#(#"Unable to create object of type "#+#polyType#)#;#}#}#try#{#nestedObject#=#nestedCreator#.#create#(#project#,#parent#,#nestedObject#)#;#if#(#project#!=#null#)#{#project#.#setProjectReference#(#nestedObject#)#;#}#return#nestedObject#;#}#catch#(#IllegalAccessException#ex#)#{#throw#new#BuildException#(#ex#)#;#}#catch#(#InstantiationException#ex#)#{#throw#new#BuildException#(#ex#)#;#}#catch#(#IllegalArgumentException#ex#)#{#if#(#polyType#==#null#)#{#throw#ex#;#}#throw#new#BuildException#(#"Invalid type used "#+#polyType#)#;#}#catch#(#InvocationTargetException#ex#)#{#throw#extractBuildException#(#ex#)#;#}#}##Object#getRealObject#(#)#{#return#nestedCreator#.#getRealObject#(#)#;#}##void#store#(#)#{#try#{#nestedCreator#.#store#(#parent#,#nestedObject#)#;#}#catch#(#IllegalAccessException#ex#)#{#throw#new#BuildException#(#ex#)#;#}#catch#(#InstantiationException#ex#)#{#throw#new#BuildException#(#ex#)#;#}#catch#(#IllegalArgumentException#ex#)#{#if#(#polyType#==#null#)#{#throw#ex#;#}#throw#new#BuildException#(#"Invalid type used "#+#polyType#)#;#}#catch#(#InvocationTargetException#ex#)#{#throw#extractBuildException#(#ex#)#;#}#}##Method#getMethod#(#)#{#return#method#;#}##boolean#isPolyMorphic#(#)#{#return#false#;#}##Object#getRealObject#(#)#{#return#null#;#}##Object#create#(#Project#project#,#Object#parent#,#Object#child#)#throws#InvocationTargetException#,#IllegalAccessException#,#InstantiationException#;##void#store#(#Object#parent#,#Object#child#)#throws#InvocationTargetException#,#IllegalAccessException#,#InstantiationException#{#// DO NOTHING#}##Object#create#(#Project#project#,#Object#parent#,#Object#ignore#)#throws#InvocationTargetException#,#IllegalAccessException#{#return#getMethod#(#)#.#invoke#(#parent#,#new#Object#[#]#{#}#)#;#}##boolean#isPolyMorphic#(#)#{#return#true#;#}##Object#create#(#Project#project#,#Object#parent#,#Object#child#)#throws#InvocationTargetException#,#IllegalAccessException#,#InstantiationException#{#if#(#child#==#null#)#{#child#=#constructor#.#newInstance#(#constructor#.#getParameterTypes#(#)#.#length#==#0#?#new#Object#[#]#{#}#:#new#Object#[#]#{#project#}#)#;#}#if#(#child#instanceof#PreSetDef#.#PreSetDefinition#)#{#child#=#(#(#PreSetDef#.#PreSetDefinition#)#child#)#.#createObject#(#project#)#;#}#if#(#behavior#==#ADD#)#{#istore#(#parent#,#child#)#;#}#return#child#;#}##void#store#(#Object#parent#,#Object#child#)#throws#InvocationTargetException#,#IllegalAccessException#,#InstantiationException#{#if#(#behavior#==#ADD_CONFIGURED#)#{#istore#(#parent#,#child#)#;#}#}##void#istore#(#Object#parent#,#Object#child#)#throws#InvocationTargetException#,#IllegalAccessException#,#InstantiationException#{#getMethod#(#)#.#invoke#(#parent#,#new#Object#[#]#{#child#}#)#;#}##void#setObject#(#Project#p#,#Object#parent#,#Object#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#{#if#(#type#!=#null#)#{#Class#useType#=#type#;#if#(#type#.#isPrimitive#(#)#)#{#if#(#value#==#null#)#{#throw#new#BuildException#(#"Attempt to set primitive "#+#getPropertyName#(#method#.#getName#(#)#,#"set"#)#+#" to null on "#+#parent#)#;#}#useType#=#(#Class#)#PRIMITIVE_TYPE_MAP#.#get#(#type#)#;#}#if#(#value#==#null#||#useType#.#isInstance#(#value#)#)#{#method#.#invoke#(#parent#,#new#Object#[#]#{#value#}#)#;#return#;#}#}#set#(#p#,#parent#,#value#.#toString#(#)#)#;#}##void#set#(#Project#p#,#Object#parent#,#String#value#)#throws#InvocationTargetException#,#IllegalAccessException#,#BuildException#;##void#clearCache#(#)#{#HELPERS#.#clear#(#)#;#}##NestedCreator#createAddTypeCreator#(#Project#project#,#Object#parent#,#String#elementName#)#throws#BuildException#{#if#(#addTypeMethods#.#size#(#)#==#0#)#{#return#null#;#}#ComponentHelper#helper#=#ComponentHelper#.#getComponentHelper#(#project#)#;#MethodAndObject#restricted#=#createRestricted#(#helper#,#elementName#,#addTypeMethods#)#;#MethodAndObject#topLevel#=#createTopLevel#(#helper#,#elementName#,#addTypeMethods#)#;#if#(#restricted#==#null#&&#topLevel#==#null#)#{#return#null#;#}#if#(#restricted#!=#null#&&#topLevel#!=#null#)#{#throw#new#BuildException#(#"ambiguous: type and component definitions for "#+#elementName#)#;#}#MethodAndObject#methodAndObject#=#restricted#!=#null#?#restricted#:#topLevel#;#Object#rObject#=#methodAndObject#.#object#;#if#(#methodAndObject#.#object#instanceof#PreSetDef#.#PreSetDefinition#)#{#rObject#=#(#(#PreSetDef#.#PreSetDefinition#)#methodAndObject#.#object#)#.#createObject#(#project#)#;#}#final#Object#nestedObject#=#methodAndObject#.#object#;#final#Object#realObject#=#rObject#;#return#new#NestedCreator#(#methodAndObject#.#method#)#{#Object#create#(#Project#project#,#Object#parent#,#Object#ignore#)#throws#InvocationTargetException#,#IllegalAccessException#{#if#(#!#getMethod#(#)#.#getName#(#)#.#endsWith#(#"Configured"#)#)#{#getMethod#(#)#.#invoke#(#parent#,#new#Object#[#]#{#realObject#}#)#;#}#return#nestedObject#;#}#Object#getRealObject#(#)#{#return#realObject#;#}#void#store#(#Object#parent#,#Object#child#)#throws#InvocationTargetException#,#IllegalAccessException#,#InstantiationException#{#if#(#getMethod#(#)#.#getName#(#)#.#endsWith#(#"Configured"#)#)#{#getMethod#(#)#.#invoke#(#parent#,#new#Object#[#]#{#realObject#}#)#;#}#}#}#;#}##Object#create#(#Project#project#,#Object#parent#,#Object#ignore#)#throws#InvocationTargetException#,#IllegalAccessException#{#if#(#!#getMethod#(#)#.#getName#(#)#.#endsWith#(#"Configured"#)#)#{#getMethod#(#)#.#invoke#(#parent#,#new#Object#[#]#{#realObject#}#)#;#}#return#nestedObject#;#}##Object#getRealObject#(#)#{#return#realObject#;#}##void#store#(#Object#parent#,#Object#child#)#throws#InvocationTargetException#,#IllegalAccessException#,#InstantiationException#{#if#(#getMethod#(#)#.#getName#(#)#.#endsWith#(#"Configured"#)#)#{#getMethod#(#)#.#invoke#(#parent#,#new#Object#[#]#{#realObject#}#)#;#}#}##void#insertAddTypeMethod#(#Method#method#)#{#Class#argClass#=#method#.#getParameterTypes#(#)#[#0#]#;#for#(#int#c#=#0#;#c#<#addTypeMethods#.#size#(#)#;#++#c#)#{#Method#current#=#(#Method#)#addTypeMethods#.#get#(#c#)#;#if#(#current#.#getParameterTypes#(#)#[#0#]#.#equals#(#argClass#)#)#{#if#(#method#.#getName#(#)#.#equals#(#"addConfigured"#)#)#{#// add configured replaces the add method#addTypeMethods#.#set#(#c#,#method#)#;#}#return#;#// Already present#}#if#(#current#.#getParameterTypes#(#)#[#0#]#.#isAssignableFrom#(#argClass#)#)#{#addTypeMethods#.#add#(#c#,#method#)#;#return#;#// higher derived#}#}#addTypeMethods#.#add#(#method#)#;#}##Method#findMatchingMethod#(#Class#paramClass#,#List#methods#)#{#if#(#paramClass#==#null#)#{#return#null#;#}#Class#matchedClass#=#null#;#Method#matchedMethod#=#null#;#for#(#int#i#=#0#;#i#<#methods#.#size#(#)#;#++#i#)#{#Method#method#=#(#Method#)#methods#.#get#(#i#)#;#Class#methodClass#=#method#.#getParameterTypes#(#)#[#0#]#;#if#(#methodClass#.#isAssignableFrom#(#paramClass#)#)#{#if#(#matchedClass#==#null#)#{#matchedClass#=#methodClass#;#matchedMethod#=#method#;#}#else#if#(#!#methodClass#.#isAssignableFrom#(#matchedClass#)#)#{#throw#new#BuildException#(#"ambiguous: types "#+#matchedClass#.#getName#(#)#+#" and "#+#methodClass#.#getName#(#)#+#" match "#+#paramClass#.#getName#(#)#)#;#}#}#}#return#matchedMethod#;#}##String#condenseText#(#final#String#text#)#{#if#(#text#.#length#(#)#<=#MAX_REPORT_NESTED_TEXT#)#{#return#text#;#}#int#ends#=#(#MAX_REPORT_NESTED_TEXT#-#ELLIPSIS#.#length#(#)#)#/#2#;#return#new#StringBuffer#(#text#)#.#replace#(#ends#,#text#.#length#(#)#-#ends#,#ELLIPSIS#)#.#toString#(#)#;#}##AntTypeDefinition#findRestrictedDefinition#(#ComponentHelper#helper#,#String#componentName#,#List#methods#)#{#AntTypeDefinition#definition#=#null#;#Class#matchedDefinitionClass#=#null#;#List#definitions#=#helper#.#getRestrictedDefinitions#(#componentName#)#;#if#(#definitions#==#null#)#{#return#null#;#}#synchronized#(#definitions#)#{#for#(#int#i#=#0#;#i#<#definitions#.#size#(#)#;#++#i#)#{#AntTypeDefinition#d#=#(#AntTypeDefinition#)#definitions#.#get#(#i#)#;#Class#exposedClass#=#d#.#getExposedClass#(#helper#.#getProject#(#)#)#;#if#(#exposedClass#==#null#)#{#continue#;#}#Method#method#=#findMatchingMethod#(#exposedClass#,#methods#)#;#if#(#method#==#null#)#{#continue#;#}#if#(#matchedDefinitionClass#!=#null#)#{#throw#new#BuildException#(#"ambiguous: restricted definitions for "#+#componentName#+#" "#+#matchedDefinitionClass#+#" and "#+#exposedClass#)#;#}#matchedDefinitionClass#=#exposedClass#;#definition#=#d#;#}#}#return#definition#;#}##MethodAndObject#createRestricted#(#ComponentHelper#helper#,#String#elementName#,#List#addTypeMethods#)#{#Project#project#=#helper#.#getProject#(#)#;#AntTypeDefinition#restrictedDefinition#=#findRestrictedDefinition#(#helper#,#elementName#,#addTypeMethods#)#;#if#(#restrictedDefinition#==#null#)#{#return#null#;#}#Method#addMethod#=#findMatchingMethod#(#restrictedDefinition#.#getExposedClass#(#project#)#,#addTypeMethods#)#;#if#(#addMethod#==#null#)#{#throw#new#BuildException#(#"Ant Internal Error - contract mismatch for "#+#elementName#)#;#}#Object#addedObject#=#restrictedDefinition#.#create#(#project#)#;#if#(#addedObject#==#null#)#{#throw#new#BuildException#(#"Failed to create object "#+#elementName#+#" of type "#+#restrictedDefinition#.#getTypeClass#(#project#)#)#;#}#return#new#MethodAndObject#(#addMethod#,#addedObject#)#;#}##MethodAndObject#createTopLevel#(#ComponentHelper#helper#,#String#elementName#,#List#methods#)#{#Class#clazz#=#helper#.#getComponentClass#(#elementName#)#;#if#(#clazz#==#null#)#{#return#null#;#}#Method#addMethod#=#findMatchingMethod#(#clazz#,#addTypeMethods#)#;#if#(#addMethod#==#null#)#{#return#null#;#}#Object#addedObject#=#helper#.#createComponent#(#elementName#)#;#return#new#MethodAndObject#(#addMethod#,#addedObject#)#;#}##