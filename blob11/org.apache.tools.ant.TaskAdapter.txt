void#checkTaskClass#(#final#Class#taskClass#,#final#Project#project#)#{#if#(#!#Dispatchable#.#class#.#isAssignableFrom#(#taskClass#)#)#{#// don't have to check for interface, since then#// taskClass would be abstract too.#try#{#final#Method#executeM#=#taskClass#.#getMethod#(#"execute"#,#(#Class#[#]#)#null#)#;#// don't have to check for public, since#// getMethod finds public method only.#// don't have to check for abstract, since then#// taskClass would be abstract too.#if#(#!#Void#.#TYPE#.#equals#(#executeM#.#getReturnType#(#)#)#)#{#final#String#message#=#"return type of execute() should be "#+#"void but was \""#+#executeM#.#getReturnType#(#)#+#"\" in "#+#taskClass#;#project#.#log#(#message#,#Project#.#MSG_WARN#)#;#}#}#catch#(#NoSuchMethodException#e#)#{#final#String#message#=#"No public execute() in "#+#taskClass#;#project#.#log#(#message#,#Project#.#MSG_ERR#)#;#throw#new#BuildException#(#message#)#;#}#catch#(#LinkageError#e#)#{#String#message#=#"Could not load "#+#taskClass#+#": "#+#e#;#project#.#log#(#message#,#Project#.#MSG_ERR#)#;#throw#new#BuildException#(#message#,#e#)#;#}#}#}##void#checkProxyClass#(#Class#proxyClass#)#{#checkTaskClass#(#proxyClass#,#getProject#(#)#)#;#}##void#execute#(#)#throws#BuildException#{#try#{#Method#setLocationM#=#proxy#.#getClass#(#)#.#getMethod#(#"setLocation"#,#new#Class#[#]#{#Location#.#class#}#)#;#if#(#setLocationM#!=#null#)#{#setLocationM#.#invoke#(#proxy#,#new#Object#[#]#{#getLocation#(#)#}#)#;#}#}#catch#(#NoSuchMethodException#e#)#{#// ignore this if the class being used as a task does not have#// a set location method.#}#catch#(#Exception#ex#)#{#log#(#"Error setting location in "#+#proxy#.#getClass#(#)#,#Project#.#MSG_ERR#)#;#throw#new#BuildException#(#ex#)#;#}#try#{#Method#setProjectM#=#proxy#.#getClass#(#)#.#getMethod#(#"setProject"#,#new#Class#[#]#{#Project#.#class#}#)#;#if#(#setProjectM#!=#null#)#{#setProjectM#.#invoke#(#proxy#,#new#Object#[#]#{#getProject#(#)#}#)#;#}#}#catch#(#NoSuchMethodException#e#)#{#// ignore this if the class being used as a task does not have#// a set project method.#}#catch#(#Exception#ex#)#{#log#(#"Error setting project in "#+#proxy#.#getClass#(#)#,#Project#.#MSG_ERR#)#;#throw#new#BuildException#(#ex#)#;#}#try#{#DispatchUtils#.#execute#(#proxy#)#;#}#catch#(#BuildException#be#)#{#throw#be#;#}#catch#(#Exception#ex#)#{#log#(#"Error in "#+#proxy#.#getClass#(#)#,#Project#.#MSG_VERBOSE#)#;#throw#new#BuildException#(#ex#)#;#}#}##void#setProxy#(#Object#o#)#{#this#.#proxy#=#o#;#}##Object#getProxy#(#)#{#return#proxy#;#}##