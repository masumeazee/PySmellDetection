void#setUp#(#)#{#configureProject#(#"src/etc/testcases/taskdefs/antstructure.xml"#)#;#}##void#tearDown#(#)#{#executeTarget#(#"tearDown"#)#;#}##void#test1#(#)#{#expectBuildException#(#"test1"#,#"required argument not specified"#)#;#}##void#testCustomPrinter#(#)#{#executeTarget#(#"testCustomPrinter"#)#;#// can't access the booleans in MyPrinter here (even if they#// were static) since the MyPrinter instance that was used in#// the test has likely been loaded via a different classloader#// than this class.  Therefore we make the printer assert its#// state and only check for the tail invocation.#assertLogContaining#(#MyPrinter#.#TAIL_CALLED#)#;#}##void#printHead#(#PrintWriter#out#,#Project#p#,#Hashtable#tasks#,#Hashtable#types#)#{#Assert#.#assertTrue#(#!#headCalled#)#;#Assert#.#assertTrue#(#!#targetCalled#)#;#Assert#.#assertTrue#(#!#tailCalled#)#;#Assert#.#assertEquals#(#0#,#elementCalled#)#;#headCalled#=#true#;#}##void#printTargetDecl#(#PrintWriter#out#)#{#Assert#.#assertTrue#(#headCalled#)#;#Assert#.#assertTrue#(#!#targetCalled#)#;#Assert#.#assertTrue#(#!#tailCalled#)#;#Assert#.#assertEquals#(#0#,#elementCalled#)#;#targetCalled#=#true#;#}##void#printElementDecl#(#PrintWriter#out#,#Project#p#,#String#name#,#Class#element#)#{#Assert#.#assertTrue#(#headCalled#)#;#Assert#.#assertTrue#(#targetCalled#)#;#Assert#.#assertTrue#(#!#tailCalled#)#;#elementCalled#++#;#this#.#p#=#p#;#}##void#printTail#(#PrintWriter#out#)#{#Assert#.#assertTrue#(#headCalled#)#;#Assert#.#assertTrue#(#targetCalled#)#;#Assert#.#assertTrue#(#!#tailCalled#)#;#Assert#.#assertTrue#(#elementCalled#>#0#)#;#tailCalled#=#true#;#p#.#log#(#TAIL_CALLED#)#;#}##