void#setUp#(#)#{#configureProject#(#"src/etc/testcases/taskdefs/ant.xml"#)#;#}##void#tearDown#(#)#{#executeTarget#(#"cleanup"#)#;#}##void#test1#(#)#{#expectBuildException#(#"test1"#,#"recursive call"#)#;#}##void#test2#(#)#{#expectBuildException#(#"test2"#,#"required argument not specified"#)#;#}##void#test3#(#)#{#expectBuildException#(#"test1"#,#"recursive call"#)#;#}##void#test4#(#)#{#expectBuildException#(#"test4"#,#"target attribute must not be empty"#)#;#}##void#test4b#(#)#{#expectBuildException#(#"test4b"#,#"target doesn't exist"#)#;#}##void#test5#(#)#{#executeTarget#(#"test5"#)#;#}##void#test6#(#)#{#executeTarget#(#"test6"#)#;#}##void#testExplicitBasedir1#(#)#{#File#dir1#=#getProjectDir#(#)#;#File#dir2#=#project#.#resolveFile#(#".."#)#;#testBaseDirs#(#"explicitBasedir1"#,#new#String#[#]#{#dir1#.#getAbsolutePath#(#)#,#dir2#.#getAbsolutePath#(#)#}#)#;#}##void#testExplicitBasedir2#(#)#{#File#dir1#=#getProjectDir#(#)#;#File#dir2#=#project#.#resolveFile#(#".."#)#;#testBaseDirs#(#"explicitBasedir2"#,#new#String#[#]#{#dir1#.#getAbsolutePath#(#)#,#dir2#.#getAbsolutePath#(#)#}#)#;#}##void#testInheritBasedir#(#)#{#String#basedir#=#getProjectDir#(#)#.#getAbsolutePath#(#)#;#testBaseDirs#(#"inheritBasedir"#,#new#String#[#]#{#basedir#,#basedir#}#)#;#}##void#testDoNotInheritBasedir#(#)#{#File#dir1#=#getProjectDir#(#)#;#File#dir2#=#project#.#resolveFile#(#"ant"#)#;#String#basedir#=#getProjectDir#(#)#.#getAbsolutePath#(#)#;#testBaseDirs#(#"doNotInheritBasedir"#,#new#String#[#]#{#dir1#.#getAbsolutePath#(#)#,#dir2#.#getAbsolutePath#(#)#}#)#;#}##void#testBasedirTripleCall#(#)#{#File#dir1#=#getProjectDir#(#)#;#File#dir2#=#project#.#resolveFile#(#"ant"#)#;#testBaseDirs#(#"tripleCall"#,#new#String#[#]#{#dir1#.#getAbsolutePath#(#)#,#dir2#.#getAbsolutePath#(#)#,#dir1#.#getAbsolutePath#(#)#}#)#;#}##void#testBaseDirs#(#String#target#,#String#[#]#dirs#)#{#BasedirChecker#bc#=#new#BasedirChecker#(#dirs#)#;#project#.#addBuildListener#(#bc#)#;#executeTarget#(#target#)#;#AssertionFailedError#ae#=#bc#.#getError#(#)#;#if#(#ae#!=#null#)#{#throw#ae#;#}#project#.#removeBuildListener#(#bc#)#;#}##void#testReferenceInheritance#(#)#{#Path#p#=#Path#.#systemClasspath#;#p#.#setProject#(#project#)#;#project#.#addReference#(#"path"#,#p#)#;#project#.#addReference#(#"no-override"#,#p#)#;#testReference#(#"testInherit"#,#new#String#[#]#{#"path"#,#"path"#}#,#new#boolean#[#]#{#true#,#true#}#,#p#)#;#testReference#(#"testInherit"#,#new#String#[#]#{#"no-override"#,#"no-override"#}#,#new#boolean#[#]#{#true#,#false#}#,#p#)#;#testReference#(#"testInherit"#,#new#String#[#]#{#"no-override"#,#"no-override"#}#,#new#boolean#[#]#{#false#,#false#}#,#null#)#;#}##void#testReferenceNoInheritance#(#)#{#Path#p#=#Path#.#systemClasspath#;#p#.#setProject#(#project#)#;#project#.#addReference#(#"path"#,#p#)#;#project#.#addReference#(#"no-override"#,#p#)#;#testReference#(#"testNoInherit"#,#new#String#[#]#{#"path"#,#"path"#}#,#new#boolean#[#]#{#true#,#false#}#,#p#)#;#testReference#(#"testNoInherit"#,#new#String#[#]#{#"path"#,#"path"#}#,#new#boolean#[#]#{#false#,#true#}#,#null#)#;#testReference#(#"testInherit"#,#new#String#[#]#{#"no-override"#,#"no-override"#}#,#new#boolean#[#]#{#true#,#false#}#,#p#)#;#testReference#(#"testInherit"#,#new#String#[#]#{#"no-override"#,#"no-override"#}#,#new#boolean#[#]#{#false#,#false#}#,#null#)#;#}##void#testReferenceRename#(#)#{#Path#p#=#Path#.#systemClasspath#;#p#.#setProject#(#project#)#;#project#.#addReference#(#"path"#,#p#)#;#testReference#(#"testRename"#,#new#String#[#]#{#"path"#,#"path"#}#,#new#boolean#[#]#{#true#,#false#}#,#p#)#;#testReference#(#"testRename"#,#new#String#[#]#{#"path"#,#"path"#}#,#new#boolean#[#]#{#false#,#true#}#,#null#)#;#testReference#(#"testRename"#,#new#String#[#]#{#"newpath"#,#"newpath"#}#,#new#boolean#[#]#{#false#,#true#}#,#p#)#;#}##void#testInheritPath#(#)#{#executeTarget#(#"testInheritPath"#)#;#}##void#testReference#(#String#target#,#String#[#]#keys#,#boolean#[#]#expect#,#Object#value#)#{#ReferenceChecker#rc#=#new#ReferenceChecker#(#keys#,#expect#,#value#)#;#project#.#addBuildListener#(#rc#)#;#executeTarget#(#target#)#;#AssertionFailedError#ae#=#rc#.#getError#(#)#;#if#(#ae#!=#null#)#{#throw#ae#;#}#project#.#removeBuildListener#(#rc#)#;#}##void#testLogfilePlacement#(#)#{#File#[#]#logFiles#=#new#File#[#]#{#getProject#(#)#.#resolveFile#(#"test1.log"#)#,#getProject#(#)#.#resolveFile#(#"test2.log"#)#,#getProject#(#)#.#resolveFile#(#"ant/test3.log"#)#,#getProject#(#)#.#resolveFile#(#"ant/test4.log"#)#}#;#for#(#int#i#=#0#;#i#<#logFiles#.#length#;#i#++#)#{#assertTrue#(#logFiles#[#i#]#.#getName#(#)#+#" doesn\'t exist"#,#!#logFiles#[#i#]#.#exists#(#)#)#;#}#executeTarget#(#"testLogfilePlacement"#)#;#for#(#int#i#=#0#;#i#<#logFiles#.#length#;#i#++#)#{#assertTrue#(#logFiles#[#i#]#.#getName#(#)#+#" exists"#,#logFiles#[#i#]#.#exists#(#)#)#;#}#}##void#testInputHandlerInheritance#(#)#{#InputHandler#ih#=#new#PropertyFileInputHandler#(#)#;#getProject#(#)#.#setInputHandler#(#ih#)#;#InputHandlerChecker#ic#=#new#InputHandlerChecker#(#ih#)#;#getProject#(#)#.#addBuildListener#(#ic#)#;#executeTarget#(#"tripleCall"#)#;#AssertionFailedError#ae#=#ic#.#getError#(#)#;#if#(#ae#!=#null#)#{#throw#ae#;#}#getProject#(#)#.#removeBuildListener#(#ic#)#;#}##void#testRefId#(#)#{#Path#testPath#=#new#Path#(#project#)#;#testPath#.#createPath#(#)#.#setPath#(#System#.#getProperty#(#"java.class.path"#)#)#;#PropertyChecker#pc#=#new#PropertyChecker#(#"testprop"#,#new#String#[#]#{#null#,#testPath#.#toString#(#)#}#)#;#project#.#addBuildListener#(#pc#)#;#executeTarget#(#"testRefid"#)#;#AssertionFailedError#ae#=#pc#.#getError#(#)#;#if#(#ae#!=#null#)#{#throw#ae#;#}#project#.#removeBuildListener#(#pc#)#;#}##void#testUserPropertyWinsInheritAll#(#)#{#getProject#(#)#.#setUserProperty#(#"test"#,#"7"#)#;#expectLogContaining#(#"test-property-override-inheritall-start"#,#"The value of test is 7"#)#;#}##void#testUserPropertyWinsNoInheritAll#(#)#{#getProject#(#)#.#setUserProperty#(#"test"#,#"7"#)#;#expectLogContaining#(#"test-property-override-no-inheritall-start"#,#"The value of test is 7"#)#;#}##void#testOverrideWinsInheritAll#(#)#{#expectLogContaining#(#"test-property-override-inheritall-start"#,#"The value of test is 4"#)#;#}##void#testOverrideWinsNoInheritAll#(#)#{#expectLogContaining#(#"test-property-override-no-inheritall-start"#,#"The value of test is 4"#)#;#}##void#testPropertySet#(#)#{#executeTarget#(#"test-propertyset"#)#;#assertTrue#(#getLog#(#)#.#indexOf#(#"test1 is ${test1}"#)#>#-#1#)#;#assertTrue#(#getLog#(#)#.#indexOf#(#"test2 is ${test2}"#)#>#-#1#)#;#assertTrue#(#getLog#(#)#.#indexOf#(#"test1.x is 1"#)#>#-#1#)#;#}##void#testInfiniteLoopViaDepends#(#)#{#expectBuildException#(#"infinite-loop-via-depends"#,#"recursive call"#)#;#}##void#testMultiSameProperty#(#)#{#expectLog#(#"multi-same-property"#,#"prop is two"#)#;#}##void#testTopLevelTarget#(#)#{#expectLog#(#"topleveltarget"#,#"Hello world"#)#;#}##void#testMultiplePropertyFileChildren#(#)#{#PropertyChecker#pcBar#=#new#PropertyChecker#(#"bar"#,#new#String#[#]#{#null#,#"Bar"#}#)#;#PropertyChecker#pcFoo#=#new#PropertyChecker#(#"foo"#,#new#String#[#]#{#null#,#"Foo"#}#)#;#project#.#addBuildListener#(#pcBar#)#;#project#.#addBuildListener#(#pcFoo#)#;#executeTarget#(#"multiple-property-file-children"#)#;#AssertionFailedError#aeBar#=#pcBar#.#getError#(#)#;#if#(#aeBar#!=#null#)#{#throw#aeBar#;#}#AssertionFailedError#aeFoo#=#pcFoo#.#getError#(#)#;#if#(#aeFoo#!=#null#)#{#throw#aeFoo#;#}#project#.#removeBuildListener#(#pcBar#)#;#project#.#removeBuildListener#(#pcFoo#)#;#}##void#testBlankTarget#(#)#{#expectBuildException#(#"blank-target"#,#"target name must not be empty"#)#;#}##void#testMultipleTargets#(#)#{#expectLog#(#"multiple-targets"#,#"tadadctbdbtc"#)#;#}##void#testMultipleTargets2#(#)#{#expectLog#(#"multiple-targets-2"#,#"dadctb"#)#;#}##void#testAntCoreLib#(#)#{#// Cf. #42263#executeTarget#(#"sub-show-ant.core.lib"#)#;#String#realLog#=#getLog#(#)#;#assertTrue#(#"found ant.core.lib in: "#+#realLog#,#realLog#.#matches#(#".*(ant[.]jar|build.classes).*"#)#)#;#}##void#buildStarted#(#BuildEvent#event#)#{#}##void#buildFinished#(#BuildEvent#event#)#{#}##void#targetFinished#(#BuildEvent#event#)#{#}##void#taskStarted#(#BuildEvent#event#)#{#}##void#taskFinished#(#BuildEvent#event#)#{#}##void#messageLogged#(#BuildEvent#event#)#{#}##void#targetStarted#(#BuildEvent#event#)#{#if#(#event#.#getTarget#(#)#.#getName#(#)#.#equals#(#""#)#)#{#return#;#}#if#(#error#==#null#)#{#try#{#assertEquals#(#expectedBasedirs#[#calls#++#]#,#event#.#getProject#(#)#.#getBaseDir#(#)#.#getAbsolutePath#(#)#)#;#}#catch#(#AssertionFailedError#e#)#{#error#=#e#;#}#}#}##AssertionFailedError#getError#(#)#{#return#error#;#}##void#buildStarted#(#BuildEvent#event#)#{#}##void#buildFinished#(#BuildEvent#event#)#{#}##void#targetFinished#(#BuildEvent#event#)#{#}##void#taskStarted#(#BuildEvent#event#)#{#}##void#taskFinished#(#BuildEvent#event#)#{#}##void#messageLogged#(#BuildEvent#event#)#{#}##void#targetStarted#(#BuildEvent#event#)#{#if#(#event#.#getTarget#(#)#.#getName#(#)#.#equals#(#""#)#)#{#return#;#}#if#(#error#==#null#)#{#try#{#String#msg#=#"Call "#+#calls#+#" refid=\'"#+#keys#[#calls#]#+#"\'"#;#if#(#value#==#null#)#{#Object#o#=#event#.#getProject#(#)#.#getReference#(#keys#[#calls#]#)#;#if#(#expectSame#[#calls#++#]#)#{#assertNull#(#msg#,#o#)#;#}#else#{#assertNotNull#(#msg#,#o#)#;#}#}#else#{#// a rather convoluted equals() test#Path#expect#=#(#Path#)#value#;#Path#received#=#(#Path#)#event#.#getProject#(#)#.#getReference#(#keys#[#calls#]#)#;#boolean#shouldBeEqual#=#expectSame#[#calls#++#]#;#if#(#received#==#null#)#{#assertTrue#(#msg#,#!#shouldBeEqual#)#;#}#else#{#String#[#]#l1#=#expect#.#list#(#)#;#String#[#]#l2#=#received#.#list#(#)#;#if#(#l1#.#length#==#l2#.#length#)#{#for#(#int#i#=#0#;#i#<#l1#.#length#;#i#++#)#{#if#(#!#l1#[#i#]#.#equals#(#l2#[#i#]#)#)#{#assertTrue#(#msg#,#!#shouldBeEqual#)#;#}#}#assertTrue#(#msg#,#shouldBeEqual#)#;#}#else#{#assertTrue#(#msg#,#!#shouldBeEqual#)#;#}#}#}#}#catch#(#AssertionFailedError#e#)#{#error#=#e#;#}#}#}##AssertionFailedError#getError#(#)#{#return#error#;#}##void#buildStarted#(#BuildEvent#event#)#{#check#(#event#)#;#}##void#buildFinished#(#BuildEvent#event#)#{#check#(#event#)#;#}##void#targetFinished#(#BuildEvent#event#)#{#check#(#event#)#;#}##void#taskStarted#(#BuildEvent#event#)#{#check#(#event#)#;#}##void#taskFinished#(#BuildEvent#event#)#{#check#(#event#)#;#}##void#messageLogged#(#BuildEvent#event#)#{#check#(#event#)#;#}##void#targetStarted#(#BuildEvent#event#)#{#check#(#event#)#;#}##void#check#(#BuildEvent#event#)#{#if#(#error#==#null#)#{#try#{#assertNotNull#(#event#.#getProject#(#)#.#getInputHandler#(#)#)#;#assertSame#(#ih#,#event#.#getProject#(#)#.#getInputHandler#(#)#)#;#}#catch#(#AssertionFailedError#e#)#{#error#=#e#;#}#}#}##AssertionFailedError#getError#(#)#{#return#error#;#}##void#buildStarted#(#BuildEvent#event#)#{#}##void#buildFinished#(#BuildEvent#event#)#{#}##void#targetFinished#(#BuildEvent#event#)#{#}##void#taskStarted#(#BuildEvent#event#)#{#}##void#taskFinished#(#BuildEvent#event#)#{#}##void#messageLogged#(#BuildEvent#event#)#{#}##void#targetStarted#(#BuildEvent#event#)#{#if#(#event#.#getTarget#(#)#.#getName#(#)#.#equals#(#""#)#)#{#return#;#}#if#(#calls#>=#expectedValues#.#length#)#{#error#=#new#AssertionFailedError#(#"Unexpected invocation of"#+#" target "#+#event#.#getTarget#(#)#.#getName#(#)#)#;#}#if#(#error#==#null#)#{#try#{#assertEquals#(#expectedValues#[#calls#++#]#,#event#.#getProject#(#)#.#getProperty#(#key#)#)#;#}#catch#(#AssertionFailedError#e#)#{#error#=#e#;#}#}#}##AssertionFailedError#getError#(#)#{#return#error#;#}##