void#setProject#(#Project#project#)#{#super#.#setProject#(#project#)#;#defaultSet#.#setProject#(#project#)#;#}##void#setFile#(#File#src#)#{#FileSet#fs#=#new#FileSet#(#)#;#fs#.#setFile#(#src#)#;#addFileset#(#fs#)#;#}##void#setDir#(#File#src#)#{#defaultSet#.#setDir#(#src#)#;#}##void#setPerm#(#String#perm#)#{#createArg#(#)#.#setValue#(#perm#)#;#havePerm#=#true#;#}##PatternSet#.#NameEntry#createInclude#(#)#{#defaultSetDefined#=#true#;#return#defaultSet#.#createInclude#(#)#;#}##PatternSet#.#NameEntry#createExclude#(#)#{#defaultSetDefined#=#true#;#return#defaultSet#.#createExclude#(#)#;#}##PatternSet#createPatternSet#(#)#{#defaultSetDefined#=#true#;#return#defaultSet#.#createPatternSet#(#)#;#}##void#setIncludes#(#String#includes#)#{#defaultSetDefined#=#true#;#defaultSet#.#setIncludes#(#includes#)#;#}##void#setExcludes#(#String#excludes#)#{#defaultSetDefined#=#true#;#defaultSet#.#setExcludes#(#excludes#)#;#}##void#setDefaultexcludes#(#boolean#useDefaultExcludes#)#{#defaultSetDefined#=#true#;#defaultSet#.#setDefaultexcludes#(#useDefaultExcludes#)#;#}##void#checkConfiguration#(#)#{#if#(#!#havePerm#)#{#throw#new#BuildException#(#"Required attribute perm not set in chmod"#,#getLocation#(#)#)#;#}#if#(#defaultSetDefined#&&#defaultSet#.#getDir#(#getProject#(#)#)#!=#null#)#{#addFileset#(#defaultSet#)#;#}#super#.#checkConfiguration#(#)#;#}##void#execute#(#)#throws#BuildException#{#/*
         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions
         * of directory foo, not anything inside of it.  This is the case the
         * second branch of the if statement below catches for backwards
         * compatibility.
         */#if#(#defaultSetDefined#||#defaultSet#.#getDir#(#getProject#(#)#)#==#null#)#{#try#{#super#.#execute#(#)#;#}#finally#{#if#(#defaultSetDefined#&&#defaultSet#.#getDir#(#getProject#(#)#)#!=#null#)#{#filesets#.#removeElement#(#defaultSet#)#;#}#}#}#else#if#(#isValidOs#(#)#)#{#// we are chmodding the given directory#Execute#execute#=#prepareExec#(#)#;#Commandline#cloned#=#(#Commandline#)#cmdl#.#clone#(#)#;#cloned#.#createArgument#(#)#.#setValue#(#defaultSet#.#getDir#(#getProject#(#)#)#.#getPath#(#)#)#;#try#{#execute#.#setCommandline#(#cloned#.#getCommandline#(#)#)#;#runExecute#(#execute#)#;#}#catch#(#IOException#e#)#{#throw#new#BuildException#(#"Execute failed: "#+#e#,#e#,#getLocation#(#)#)#;#}#finally#{#// close the output file if required#logFlush#(#)#;#}#}#}##void#setExecutable#(#String#e#)#{#throw#new#BuildException#(#getTaskType#(#)#+#" doesn\'t support the executable attribute"#,#getLocation#(#)#)#;#}##void#setCommand#(#Commandline#cmdl#)#{#throw#new#BuildException#(#getTaskType#(#)#+#" doesn\'t support the command attribute"#,#getLocation#(#)#)#;#}##void#setSkipEmptyFilesets#(#boolean#skip#)#{#throw#new#BuildException#(#getTaskType#(#)#+#" doesn\'t support the skipemptyfileset attribute"#,#getLocation#(#)#)#;#}##void#setAddsourcefile#(#boolean#b#)#{#throw#new#BuildException#(#getTaskType#(#)#+#" doesn\'t support the addsourcefile attribute"#,#getLocation#(#)#)#;#}##boolean#isValidOs#(#)#{#return#getOs#(#)#==#null#&&#getOsFamily#(#)#==#null#?#Os#.#isFamily#(#Os#.#FAMILY_UNIX#)#:#super#.#isValidOs#(#)#;#}##