void#setUp#(#)#{#configureProject#(#"src/etc/testcases/taskdefs/concat.xml"#)#;#}##void#tearDown#(#)#{#executeTarget#(#"cleanup"#)#;#}##void#test1#(#)#{#expectBuildException#(#"test1"#,#"Insufficient information."#)#;#}##void#test2#(#)#{#expectBuildException#(#"test2"#,#"Invalid destination file."#)#;#}##void#test3#(#)#{#File#file#=#new#File#(#getProjectDir#(#)#,#tempFile#)#;#if#(#file#.#exists#(#)#)#{#file#.#delete#(#)#;#}#executeTarget#(#"test3"#)#;#assertTrue#(#file#.#exists#(#)#)#;#}##void#test4#(#)#{#test3#(#)#;#File#file#=#new#File#(#getProjectDir#(#)#,#tempFile#)#;#final#long#origSize#=#file#.#length#(#)#;#executeTarget#(#"test4"#)#;#File#file2#=#new#File#(#getProjectDir#(#)#,#tempFile2#)#;#final#long#newSize#=#file2#.#length#(#)#;#assertEquals#(#origSize#*#3#,#newSize#)#;#}##void#test5#(#)#{#expectLog#(#"test5"#,#"Hello, World!"#)#;#}##void#test6#(#)#{#String#filename#=#"src/etc/testcases/taskdefs/thisfiledoesnotexist"#.#replace#(#'/'#,#File#.#separatorChar#)#;#expectLogContaining#(#"test6"#,#filename#+#" does not exist."#)#;#}##void#testConcatNoNewline#(#)#{#expectLog#(#"testConcatNoNewline"#,#"ab"#)#;#}##void#testConcatNoNewlineEncoding#(#)#{#expectLog#(#"testConcatNoNewlineEncoding"#,#"ab"#)#;#}##void#testPath#(#)#{#test3#(#)#;#File#file#=#new#File#(#getProjectDir#(#)#,#tempFile#)#;#final#long#origSize#=#file#.#length#(#)#;#executeTarget#(#"testPath"#)#;#File#file2#=#new#File#(#getProjectDir#(#)#,#tempFile2#)#;#final#long#newSize#=#file2#.#length#(#)#;#assertEquals#(#origSize#,#newSize#)#;#}##void#testAppend#(#)#{#test3#(#)#;#File#file#=#new#File#(#getProjectDir#(#)#,#tempFile#)#;#final#long#origSize#=#file#.#length#(#)#;#executeTarget#(#"testAppend"#)#;#File#file2#=#new#File#(#getProjectDir#(#)#,#tempFile2#)#;#final#long#newSize#=#file2#.#length#(#)#;#assertEquals#(#origSize#*#2#,#newSize#)#;#}##void#testFilter#(#)#{#executeTarget#(#"testfilter"#)#;#assertTrue#(#getLog#(#)#.#indexOf#(#"REPLACED"#)#>#-#1#)#;#}##void#testNoOverwrite#(#)#{#executeTarget#(#"testnooverwrite"#)#;#File#file2#=#new#File#(#getProjectDir#(#)#,#tempFile2#)#;#long#size#=#file2#.#length#(#)#;#assertEquals#(#size#,#0#)#;#}##void#testheaderfooter#(#)#{#test3#(#)#;#expectLog#(#"testheaderfooter"#,#"headerHello, World!footer"#)#;#}##void#testfileheader#(#)#{#test3#(#)#;#expectLog#(#"testfileheader"#,#"Hello, World!Hello, World!"#)#;#}##void#testsame#(#)#{#expectBuildException#(#"samefile"#,#"output file same as input"#)#;#}##void#testfilterinline#(#)#{#executeTarget#(#"testfilterinline"#)#;#assertTrue#(#getLog#(#)#.#indexOf#(#"REPLACED"#)#>#-#1#)#;#}##void#testmultireader#(#)#{#executeTarget#(#"testmultireader"#)#;#assertTrue#(#getLog#(#)#.#indexOf#(#"Bye"#)#>#-#1#)#;#assertTrue#(#getLog#(#)#.#indexOf#(#"Hello"#)#==#-#1#)#;#}##void#testfixlastline#(#)#throws#IOException#{#expectFileContains#(#"testfixlastline"#,#"concat.line4"#,#"end of line"#+#System#.#getProperty#(#"line.separator"#)#+#"This has"#)#;#}##void#testfixlastlineeol#(#)#throws#IOException#{#expectFileContains#(#"testfixlastlineeol"#,#"concat.linecr"#,#"end of line\rThis has"#)#;#}##String#getFileString#(#String#filename#)#throws#IOException#{#Reader#r#=#null#;#try#{#r#=#new#FileReader#(#getProject#(#)#.#resolveFile#(#filename#)#)#;#return#FileUtils#.#readFully#(#r#)#;#}#finally#{#FileUtils#.#close#(#r#)#;#}#}##String#getFileString#(#String#target#,#String#filename#)#throws#IOException#{#executeTarget#(#target#)#;#return#getFileString#(#filename#)#;#}##void#expectFileContains#(#String#target#,#String#filename#,#String#contains#)#throws#IOException#{#String#content#=#getFileString#(#target#,#filename#)#;#assertTrue#(#"expecting file "#+#filename#+#" to contain "#+#contains#+#" but got "#+#content#,#content#.#indexOf#(#contains#)#>#-#1#)#;#}##void#testTranscoding#(#)#throws#IOException#{#executeTarget#(#"testTranscoding"#)#;#File#f1#=#getProject#(#)#.#resolveFile#(#"copy/expected/utf-8"#)#;#File#f2#=#getProject#(#)#.#resolveFile#(#"concat.utf8"#)#;#assertTrue#(#f1#.#toString#(#)#+#" differs from "#+#f2#.#toString#(#)#,#FILE_UTILS#.#contentEquals#(#f1#,#f2#)#)#;#}##