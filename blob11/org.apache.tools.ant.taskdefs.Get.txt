void#execute#(#)#throws#BuildException#{#checkAttributes#(#)#;#for#(#Iterator#iter#=#sources#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#Resource#r#=#(#Resource#)#iter#.#next#(#)#;#URLProvider#up#=#(#URLProvider#)#r#.#as#(#URLProvider#.#class#)#;#URL#source#=#up#.#getURL#(#)#;#File#dest#=#destination#;#if#(#destination#.#isDirectory#(#)#)#{#if#(#mapperElement#==#null#)#{#String#path#=#source#.#getPath#(#)#;#if#(#path#.#endsWith#(#"/"#)#)#{#path#=#path#.#substring#(#0#,#path#.#length#(#)#-#1#)#;#}#int#slash#=#path#.#lastIndexOf#(#"/"#)#;#if#(#slash#>#-#1#)#{#path#=#path#.#substring#(#slash#+#1#)#;#}#dest#=#new#File#(#destination#,#path#)#;#}#else#{#FileNameMapper#mapper#=#mapperElement#.#getImplementation#(#)#;#String#[#]#d#=#mapper#.#mapFileName#(#source#.#toString#(#)#)#;#if#(#d#==#null#)#{#log#(#"skipping "#+#r#+#" - mapper can't handle it"#,#Project#.#MSG_WARN#)#;#continue#;#}#else#if#(#d#.#length#==#0#)#{#log#(#"skipping "#+#r#+#" - mapper returns no file name"#,#Project#.#MSG_WARN#)#;#continue#;#}#else#if#(#d#.#length#>#1#)#{#log#(#"skipping "#+#r#+#" - mapper returns multiple file"#+#" names"#,#Project#.#MSG_WARN#)#;#continue#;#}#dest#=#new#File#(#destination#,#d#[#0#]#)#;#}#}#//set up logging#int#logLevel#=#Project#.#MSG_INFO#;#DownloadProgress#progress#=#null#;#if#(#verbose#)#{#progress#=#new#VerboseProgress#(#System#.#out#)#;#}#//execute the get#try#{#doGet#(#source#,#dest#,#logLevel#,#progress#)#;#}#catch#(#IOException#ioe#)#{#log#(#"Error getting "#+#source#+#" to "#+#dest#)#;#if#(#!#ignoreErrors#)#{#throw#new#BuildException#(#ioe#,#getLocation#(#)#)#;#}#}#}#}##boolean#doGet#(#int#logLevel#,#DownloadProgress#progress#)#throws#IOException#{#checkAttributes#(#)#;#for#(#Iterator#iter#=#sources#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#Resource#r#=#(#Resource#)#iter#.#next#(#)#;#URLProvider#up#=#(#URLProvider#)#r#.#as#(#URLProvider#.#class#)#;#URL#source#=#up#.#getURL#(#)#;#return#doGet#(#source#,#destination#,#logLevel#,#progress#)#;#}#/*NOTREACHED*/#return#false#;#}##boolean#doGet#(#URL#source#,#File#dest#,#int#logLevel#,#DownloadProgress#progress#)#throws#IOException#{#if#(#dest#.#exists#(#)#&&#skipExisting#)#{#log#(#"Destination already exists (skipping): "#+#dest#.#getAbsolutePath#(#)#,#logLevel#)#;#return#true#;#}#//dont do any progress, unless asked#if#(#progress#==#null#)#{#progress#=#new#NullProgress#(#)#;#}#log#(#"Getting: "#+#source#,#logLevel#)#;#log#(#"To: "#+#dest#.#getAbsolutePath#(#)#,#logLevel#)#;#//set the timestamp to the file date.#long#timestamp#=#0#;#boolean#hasTimestamp#=#false#;#if#(#useTimestamp#&&#dest#.#exists#(#)#)#{#timestamp#=#dest#.#lastModified#(#)#;#if#(#verbose#)#{#Date#t#=#new#Date#(#timestamp#)#;#log#(#"local file date : "#+#t#.#toString#(#)#,#logLevel#)#;#}#hasTimestamp#=#true#;#}#GetThread#getThread#=#new#GetThread#(#source#,#dest#,#hasTimestamp#,#timestamp#,#progress#,#logLevel#)#;#getThread#.#setDaemon#(#true#)#;#getProject#(#)#.#registerThreadTask#(#getThread#,#this#)#;#getThread#.#start#(#)#;#try#{#getThread#.#join#(#maxTime#*#1000#)#;#}#catch#(#InterruptedException#ie#)#{#log#(#"interrupted waiting for GET to finish"#,#Project#.#MSG_VERBOSE#)#;#}#if#(#getThread#.#isAlive#(#)#)#{#String#msg#=#"The GET operation took longer than "#+#maxTime#+#" seconds, stopping it."#;#if#(#ignoreErrors#)#{#log#(#msg#)#;#}#getThread#.#closeStreams#(#)#;#if#(#!#ignoreErrors#)#{#throw#new#BuildException#(#msg#)#;#}#return#false#;#}#return#getThread#.#wasSuccessful#(#)#;#}##void#checkAttributes#(#)#{#if#(#sources#.#size#(#)#==#0#)#{#throw#new#BuildException#(#"at least one source is required"#,#getLocation#(#)#)#;#}#for#(#Iterator#iter#=#sources#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#Object#up#=#(#(#Resource#)#iter#.#next#(#)#)#.#as#(#URLProvider#.#class#)#;#if#(#up#==#null#)#{#throw#new#BuildException#(#"Only URLProvider resources are"#+#" supported"#,#getLocation#(#)#)#;#}#}#if#(#destination#==#null#)#{#throw#new#BuildException#(#"dest attribute is required"#,#getLocation#(#)#)#;#}#if#(#destination#.#exists#(#)#&&#sources#.#size#(#)#>#1#&&#!#destination#.#isDirectory#(#)#)#{#throw#new#BuildException#(#"The specified destination is not a"#+#" directory"#,#getLocation#(#)#)#;#}#if#(#destination#.#exists#(#)#&&#!#destination#.#canWrite#(#)#)#{#throw#new#BuildException#(#"Can't write to "#+#destination#.#getAbsolutePath#(#)#,#getLocation#(#)#)#;#}#if#(#sources#.#size#(#)#>#1#&&#!#destination#.#exists#(#)#)#{#destination#.#mkdirs#(#)#;#}#}##void#setSrc#(#URL#u#)#{#add#(#new#URLResource#(#u#)#)#;#}##void#add#(#ResourceCollection#rc#)#{#sources#.#add#(#rc#)#;#}##void#setDest#(#File#dest#)#{#this#.#destination#=#dest#;#}##void#setVerbose#(#boolean#v#)#{#verbose#=#v#;#}##void#setIgnoreErrors#(#boolean#v#)#{#ignoreErrors#=#v#;#}##void#setUseTimestamp#(#boolean#v#)#{#useTimestamp#=#v#;#}##void#setUsername#(#String#u#)#{#this#.#uname#=#u#;#}##void#setPassword#(#String#p#)#{#this#.#pword#=#p#;#}##void#setMaxTime#(#long#maxTime#)#{#this#.#maxTime#=#maxTime#;#}##void#setRetries#(#int#r#)#{#this#.#numberRetries#=#r#;#}##void#setSkipExisting#(#boolean#s#)#{#this#.#skipExisting#=#s#;#}##void#setHttpUseCaches#(#boolean#httpUseCache#)#{#this#.#httpUseCaches#=#httpUseCache#;#}##Mapper#createMapper#(#)#throws#BuildException#{#if#(#mapperElement#!=#null#)#{#throw#new#BuildException#(#"Cannot define more than one mapper"#,#getLocation#(#)#)#;#}#mapperElement#=#new#Mapper#(#getProject#(#)#)#;#return#mapperElement#;#}##void#add#(#FileNameMapper#fileNameMapper#)#{#createMapper#(#)#.#add#(#fileNameMapper#)#;#}##void#beginDownload#(#)#{#}##void#onTick#(#)#{#}##void#endDownload#(#)#{#}##void#beginDownload#(#)#{#dots#=#0#;#}##void#onTick#(#)#{#out#.#print#(#"."#)#;#if#(#dots#++#>#DOTS_PER_LINE#)#{#out#.#flush#(#)#;#dots#=#0#;#}#}##void#endDownload#(#)#{#out#.#println#(#)#;#out#.#flush#(#)#;#}##void#run#(#)#{#try#{#success#=#get#(#)#;#}#catch#(#IOException#ioex#)#{#ioexception#=#ioex#;#}#catch#(#BuildException#bex#)#{#exception#=#bex#;#}#}##boolean#get#(#)#throws#IOException#,#BuildException#{#connection#=#openConnection#(#source#)#;#if#(#connection#==#null#)#{#return#false#;#}#boolean#downloadSucceeded#=#downloadFile#(#)#;#//if (and only if) the use file time option is set, then#//the saved file now has its timestamp set to that of the#//downloaded file#if#(#downloadSucceeded#&&#useTimestamp#)#{#updateTimeStamp#(#)#;#}#return#downloadSucceeded#;#}##boolean#redirectionAllowed#(#URL#aSource#,#URL#aDest#)#{#if#(#!#(#aSource#.#getProtocol#(#)#.#equals#(#aDest#.#getProtocol#(#)#)#||#(#HTTP#.#equals#(#aSource#.#getProtocol#(#)#)#&&#HTTPS#.#equals#(#aDest#.#getProtocol#(#)#)#)#)#)#{#String#message#=#"Redirection detected from "#+#aSource#.#getProtocol#(#)#+#" to "#+#aDest#.#getProtocol#(#)#+#". Protocol switch unsafe, not allowed."#;#if#(#ignoreErrors#)#{#log#(#message#,#logLevel#)#;#return#false#;#}#else#{#throw#new#BuildException#(#message#)#;#}#}#redirections#++#;#if#(#redirections#>#REDIRECT_LIMIT#)#{#String#message#=#"More than "#+#REDIRECT_LIMIT#+#" times redirected, giving up"#;#if#(#ignoreErrors#)#{#log#(#message#,#logLevel#)#;#return#false#;#}#else#{#throw#new#BuildException#(#message#)#;#}#}#return#true#;#}##URLConnection#openConnection#(#URL#aSource#)#throws#IOException#{#// set up the URL connection#URLConnection#connection#=#aSource#.#openConnection#(#)#;#// modify the headers#// NB: things like user authentication could go in here too.#if#(#hasTimestamp#)#{#connection#.#setIfModifiedSince#(#timestamp#)#;#}#// prepare Java 1.1 style credentials#if#(#uname#!=#null#||#pword#!=#null#)#{#String#up#=#uname#+#":"#+#pword#;#String#encoding#;#// we do not use the sun impl for portability,#// and always use our own implementation for consistent#// testing#Base64Converter#encoder#=#new#Base64Converter#(#)#;#encoding#=#encoder#.#encode#(#up#.#getBytes#(#)#)#;#connection#.#setRequestProperty#(#"Authorization"#,#"Basic "#+#encoding#)#;#}#if#(#connection#instanceof#HttpURLConnection#)#{#(#(#HttpURLConnection#)#connection#)#.#setInstanceFollowRedirects#(#false#)#;#(#(#HttpURLConnection#)#connection#)#.#setUseCaches#(#httpUseCaches#)#;#}#// connect to the remote site (may take some time)#connection#.#connect#(#)#;#// First check on a 301 / 302 (moved) response (HTTP only)#if#(#connection#instanceof#HttpURLConnection#)#{#HttpURLConnection#httpConnection#=#(#HttpURLConnection#)#connection#;#int#responseCode#=#httpConnection#.#getResponseCode#(#)#;#if#(#responseCode#==#HttpURLConnection#.#HTTP_MOVED_PERM#||#responseCode#==#HttpURLConnection#.#HTTP_MOVED_TEMP#||#responseCode#==#HttpURLConnection#.#HTTP_SEE_OTHER#)#{#String#newLocation#=#httpConnection#.#getHeaderField#(#"Location"#)#;#String#message#=#aSource#+#(#responseCode#==#HttpURLConnection#.#HTTP_MOVED_PERM#?#" permanently"#:#""#)#+#" moved to "#+#newLocation#;#log#(#message#,#logLevel#)#;#URL#newURL#=#new#URL#(#newLocation#)#;#if#(#!#redirectionAllowed#(#aSource#,#newURL#)#)#{#return#null#;#}#return#openConnection#(#newURL#)#;#}#// next test for a 304 result (HTTP only)#long#lastModified#=#httpConnection#.#getLastModified#(#)#;#if#(#responseCode#==#HttpURLConnection#.#HTTP_NOT_MODIFIED#||#(#lastModified#!=#0#&&#hasTimestamp#&&#timestamp#>=#lastModified#)#)#{#// not modified so no file download. just return#// instead and trace out something so the user#// doesn't think that the download happened when it#// didn't#log#(#"Not modified - so not downloaded"#,#logLevel#)#;#return#null#;#}#// test for 401 result (HTTP only)#if#(#responseCode#==#HttpURLConnection#.#HTTP_UNAUTHORIZED#)#{#String#message#=#"HTTP Authorization failure"#;#if#(#ignoreErrors#)#{#log#(#message#,#logLevel#)#;#return#null#;#}#else#{#throw#new#BuildException#(#message#)#;#}#}#}#//REVISIT: at this point even non HTTP connections may#//support the if-modified-since behaviour -we just check#//the date of the content and skip the write if it is not#//newer. Some protocols (FTP) don't include dates, of#//course.#return#connection#;#}##boolean#downloadFile#(#)#throws#FileNotFoundException#,#IOException#{#for#(#int#i#=#0#;#i#<#numberRetries#;#i#++#)#{#// this three attempt trick is to get round quirks in different#// Java implementations. Some of them take a few goes to bind#// property; we ignore the first couple of such failures.#try#{#is#=#connection#.#getInputStream#(#)#;#break#;#}#catch#(#IOException#ex#)#{#log#(#"Error opening connection "#+#ex#,#logLevel#)#;#}#}#if#(#is#==#null#)#{#log#(#"Can't get "#+#source#+#" to "#+#dest#,#logLevel#)#;#if#(#ignoreErrors#)#{#return#false#;#}#throw#new#BuildException#(#"Can't get "#+#source#+#" to "#+#dest#,#getLocation#(#)#)#;#}#os#=#new#FileOutputStream#(#dest#)#;#progress#.#beginDownload#(#)#;#boolean#finished#=#false#;#try#{#byte#[#]#buffer#=#new#byte#[#BIG_BUFFER_SIZE#]#;#int#length#;#while#(#!#isInterrupted#(#)#&&#(#length#=#is#.#read#(#buffer#)#)#>=#0#)#{#os#.#write#(#buffer#,#0#,#length#)#;#progress#.#onTick#(#)#;#}#finished#=#!#isInterrupted#(#)#;#}#finally#{#FileUtils#.#close#(#os#)#;#FileUtils#.#close#(#is#)#;#// we have started to (over)write dest, but failed.#// Try to delete the garbage we'd otherwise leave#// behind.#if#(#!#finished#)#{#dest#.#delete#(#)#;#}#}#progress#.#endDownload#(#)#;#return#true#;#}##void#updateTimeStamp#(#)#{#long#remoteTimestamp#=#connection#.#getLastModified#(#)#;#if#(#verbose#)#{#Date#t#=#new#Date#(#remoteTimestamp#)#;#log#(#"last modified = "#+#t#.#toString#(#)#+#(#(#remoteTimestamp#==#0#)#?#" - using current time instead"#:#""#)#,#logLevel#)#;#}#if#(#remoteTimestamp#!=#0#)#{#FILE_UTILS#.#setFileLastModified#(#dest#,#remoteTimestamp#)#;#}#}##boolean#wasSuccessful#(#)#throws#IOException#,#BuildException#{#if#(#ioexception#!=#null#)#{#throw#ioexception#;#}#if#(#exception#!=#null#)#{#throw#exception#;#}#return#success#;#}##void#closeStreams#(#)#{#interrupt#(#)#;#FileUtils#.#close#(#os#)#;#FileUtils#.#close#(#is#)#;#if#(#!#success#&&#dest#.#exists#(#)#)#{#dest#.#delete#(#)#;#}#}##