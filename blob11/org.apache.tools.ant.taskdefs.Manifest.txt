int#hashCode#(#)#{#int#hashCode#=#0#;#if#(#name#!=#null#)#{#hashCode#+=#getKey#(#)#.#hashCode#(#)#;#}#hashCode#+=#values#.#hashCode#(#)#;#return#hashCode#;#}##boolean#equals#(#Object#rhs#)#{#if#(#rhs#==#null#||#rhs#.#getClass#(#)#!=#getClass#(#)#)#{#return#false#;#}#if#(#rhs#==#this#)#{#return#true#;#}#Attribute#rhsAttribute#=#(#Attribute#)#rhs#;#String#lhsKey#=#getKey#(#)#;#String#rhsKey#=#rhsAttribute#.#getKey#(#)#;#if#(#(#lhsKey#==#null#&&#rhsKey#!=#null#)#||#(#lhsKey#!=#null#&&#!#lhsKey#.#equals#(#rhsKey#)#)#)#{#return#false#;#}#return#values#.#equals#(#rhsAttribute#.#values#)#;#}##void#parse#(#String#line#)#throws#ManifestException#{#int#index#=#line#.#indexOf#(#": "#)#;#if#(#index#==#-#1#)#{#throw#new#ManifestException#(#"Manifest line \""#+#line#+#"\" is not valid as it does not "#+#"contain a name and a value separated by ': ' "#)#;#}#name#=#line#.#substring#(#0#,#index#)#;#setValue#(#line#.#substring#(#index#+#2#)#)#;#}##void#setName#(#String#name#)#{#this#.#name#=#name#;#}##String#getName#(#)#{#return#name#;#}##String#getKey#(#)#{#if#(#name#==#null#)#{#return#null#;#}#return#name#.#toLowerCase#(#)#;#}##void#setValue#(#String#value#)#{#if#(#currentIndex#>=#values#.#size#(#)#)#{#values#.#addElement#(#value#)#;#currentIndex#=#values#.#size#(#)#-#1#;#}#else#{#values#.#setElementAt#(#value#,#currentIndex#)#;#}#}##String#getValue#(#)#{#if#(#values#.#size#(#)#==#0#)#{#return#null#;#}#String#fullValue#=#""#;#for#(#Enumeration#e#=#getValues#(#)#;#e#.#hasMoreElements#(#)#;#)#{#String#value#=#(#String#)#e#.#nextElement#(#)#;#fullValue#+=#value#+#" "#;#}#return#fullValue#.#trim#(#)#;#}##void#addValue#(#String#value#)#{#currentIndex#++#;#setValue#(#value#)#;#}##Enumeration#getValues#(#)#{#return#values#.#elements#(#)#;#}##void#addContinuation#(#String#line#)#{#String#currentValue#=#(#String#)#values#.#elementAt#(#currentIndex#)#;#setValue#(#currentValue#+#line#.#substring#(#1#)#)#;#}##void#write#(#PrintWriter#writer#)#throws#IOException#{#write#(#writer#,#false#)#;#}##void#write#(#PrintWriter#writer#,#boolean#flatten#)#throws#IOException#{#if#(#!#flatten#)#{#for#(#Enumeration#e#=#getValues#(#)#;#e#.#hasMoreElements#(#)#;#)#{#writeValue#(#writer#,#(#String#)#e#.#nextElement#(#)#)#;#}#}#else#{#writeValue#(#writer#,#getValue#(#)#)#;#}#}##void#writeValue#(#PrintWriter#writer#,#String#value#)#throws#IOException#{#String#line#=#null#;#int#nameLength#=#name#.#getBytes#(#JAR_ENCODING#)#.#length#;#if#(#nameLength#>#MAX_NAME_VALUE_LENGTH#)#{#if#(#nameLength#>#MAX_NAME_LENGTH#)#{#throw#new#IOException#(#"Unable to write manifest line "#+#name#+#": "#+#value#)#;#}#writer#.#print#(#name#+#": "#+#EOL#)#;#line#=#" "#+#value#;#}#else#{#line#=#name#+#": "#+#value#;#}#while#(#line#.#getBytes#(#JAR_ENCODING#)#.#length#>#MAX_SECTION_LENGTH#)#{#// try to find a MAX_LINE_LENGTH byte section#int#breakIndex#=#MAX_SECTION_LENGTH#;#if#(#breakIndex#>=#line#.#length#(#)#)#{#breakIndex#=#line#.#length#(#)#-#1#;#}#String#section#=#line#.#substring#(#0#,#breakIndex#)#;#while#(#section#.#getBytes#(#JAR_ENCODING#)#.#length#>#MAX_SECTION_LENGTH#&&#breakIndex#>#0#)#{#breakIndex#--#;#section#=#line#.#substring#(#0#,#breakIndex#)#;#}#if#(#breakIndex#==#0#)#{#throw#new#IOException#(#"Unable to write manifest line "#+#name#+#": "#+#value#)#;#}#writer#.#print#(#section#+#EOL#)#;#line#=#" "#+#line#.#substring#(#breakIndex#)#;#}#writer#.#print#(#line#+#EOL#)#;#}##void#setName#(#String#name#)#{#this#.#name#=#name#;#}##String#getName#(#)#{#return#name#;#}##String#read#(#BufferedReader#reader#)#throws#ManifestException#,#IOException#{#Attribute#attribute#=#null#;#while#(#true#)#{#String#line#=#reader#.#readLine#(#)#;#if#(#line#==#null#||#line#.#length#(#)#==#0#)#{#return#null#;#}#if#(#line#.#charAt#(#0#)#==#' '#)#{#// continuation line#if#(#attribute#==#null#)#{#if#(#name#!=#null#)#{#// a continuation on the first line is a#// continuation of the name - concatenate this#// line and the name#name#+=#line#.#substring#(#1#)#;#}#else#{#throw#new#ManifestException#(#"Can't start an "#+#"attribute with a continuation line "#+#line#)#;#}#}#else#{#attribute#.#addContinuation#(#line#)#;#}#}#else#{#attribute#=#new#Attribute#(#line#)#;#String#nameReadAhead#=#addAttributeAndCheck#(#attribute#)#;#// refresh attribute in case of multivalued attributes.#attribute#=#getAttribute#(#attribute#.#getKey#(#)#)#;#if#(#nameReadAhead#!=#null#)#{#return#nameReadAhead#;#}#}#}#}##void#merge#(#Section#section#)#throws#ManifestException#{#merge#(#section#,#false#)#;#}##void#merge#(#Section#section#,#boolean#mergeClassPaths#)#throws#ManifestException#{#if#(#name#==#null#&&#section#.#getName#(#)#!=#null#||#name#!=#null#&&#!#(#name#.#equalsIgnoreCase#(#section#.#getName#(#)#)#)#)#{#throw#new#ManifestException#(#"Unable to merge sections "#+#"with different names"#)#;#}#Enumeration#e#=#section#.#getAttributeKeys#(#)#;#Attribute#classpathAttribute#=#null#;#while#(#e#.#hasMoreElements#(#)#)#{#String#attributeName#=#(#String#)#e#.#nextElement#(#)#;#Attribute#attribute#=#section#.#getAttribute#(#attributeName#)#;#if#(#attributeName#.#equalsIgnoreCase#(#ATTRIBUTE_CLASSPATH#)#)#{#if#(#classpathAttribute#==#null#)#{#classpathAttribute#=#new#Attribute#(#)#;#classpathAttribute#.#setName#(#ATTRIBUTE_CLASSPATH#)#;#}#Enumeration#cpe#=#attribute#.#getValues#(#)#;#while#(#cpe#.#hasMoreElements#(#)#)#{#String#value#=#(#String#)#cpe#.#nextElement#(#)#;#classpathAttribute#.#addValue#(#value#)#;#}#}#else#{#// the merge file always wins#storeAttribute#(#attribute#)#;#}#}#if#(#classpathAttribute#!=#null#)#{#if#(#mergeClassPaths#)#{#Attribute#currentCp#=#getAttribute#(#ATTRIBUTE_CLASSPATH#)#;#if#(#currentCp#!=#null#)#{#for#(#Enumeration#attribEnum#=#currentCp#.#getValues#(#)#;#attribEnum#.#hasMoreElements#(#)#;#)#{#String#value#=#(#String#)#attribEnum#.#nextElement#(#)#;#classpathAttribute#.#addValue#(#value#)#;#}#}#}#storeAttribute#(#classpathAttribute#)#;#}#// add in the warnings#Enumeration#warnEnum#=#section#.#warnings#.#elements#(#)#;#while#(#warnEnum#.#hasMoreElements#(#)#)#{#warnings#.#addElement#(#warnEnum#.#nextElement#(#)#)#;#}#}##void#write#(#PrintWriter#writer#)#throws#IOException#{#write#(#writer#,#false#)#;#}##void#write#(#PrintWriter#writer#,#boolean#flatten#)#throws#IOException#{#if#(#name#!=#null#)#{#Attribute#nameAttr#=#new#Attribute#(#ATTRIBUTE_NAME#,#name#)#;#nameAttr#.#write#(#writer#)#;#}#Enumeration#e#=#getAttributeKeys#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#String#key#=#(#String#)#e#.#nextElement#(#)#;#Attribute#attribute#=#getAttribute#(#key#)#;#attribute#.#write#(#writer#,#flatten#)#;#}#writer#.#print#(#EOL#)#;#}##Attribute#getAttribute#(#String#attributeName#)#{#return#(#Attribute#)#attributes#.#get#(#attributeName#.#toLowerCase#(#)#)#;#}##Enumeration#getAttributeKeys#(#)#{#return#attributeIndex#.#elements#(#)#;#}##String#getAttributeValue#(#String#attributeName#)#{#Attribute#attribute#=#getAttribute#(#attributeName#.#toLowerCase#(#)#)#;#if#(#attribute#==#null#)#{#return#null#;#}#return#attribute#.#getValue#(#)#;#}##void#removeAttribute#(#String#attributeName#)#{#String#key#=#attributeName#.#toLowerCase#(#)#;#attributes#.#remove#(#key#)#;#attributeIndex#.#removeElement#(#key#)#;#}##void#addConfiguredAttribute#(#Attribute#attribute#)#throws#ManifestException#{#String#check#=#addAttributeAndCheck#(#attribute#)#;#if#(#check#!=#null#)#{#throw#new#BuildException#(#"Specify the section name using "#+#"the \"name\" attribute of the <section> element rather "#+#"than using a \"Name\" manifest attribute"#)#;#}#}##String#addAttributeAndCheck#(#Attribute#attribute#)#throws#ManifestException#{#if#(#attribute#.#getName#(#)#==#null#||#attribute#.#getValue#(#)#==#null#)#{#throw#new#BuildException#(#"Attributes must have name and value"#)#;#}#if#(#attribute#.#getKey#(#)#.#equalsIgnoreCase#(#ATTRIBUTE_NAME#)#)#{#warnings#.#addElement#(#"\""#+#ATTRIBUTE_NAME#+#"\" attributes "#+#"should not occur in the main section and must be the "#+#"first element in all other sections: \""#+#attribute#.#getName#(#)#+#": "#+#attribute#.#getValue#(#)#+#"\""#)#;#return#attribute#.#getValue#(#)#;#}#if#(#attribute#.#getKey#(#)#.#startsWith#(#ATTRIBUTE_FROM#.#toLowerCase#(#)#)#)#{#warnings#.#addElement#(#ERROR_FROM_FORBIDDEN#+#attribute#.#getName#(#)#+#": "#+#attribute#.#getValue#(#)#+#"\""#)#;#}#else#{#// classpath attributes go into a vector#String#attributeKey#=#attribute#.#getKey#(#)#;#if#(#attributeKey#.#equalsIgnoreCase#(#ATTRIBUTE_CLASSPATH#)#)#{#Attribute#classpathAttribute#=#(#Attribute#)#attributes#.#get#(#attributeKey#)#;#if#(#classpathAttribute#==#null#)#{#storeAttribute#(#attribute#)#;#}#else#{#warnings#.#addElement#(#"Multiple Class-Path attributes "#+#"are supported but violate the Jar "#+#"specification and may not be correctly "#+#"processed in all environments"#)#;#Enumeration#e#=#attribute#.#getValues#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#String#value#=#(#String#)#e#.#nextElement#(#)#;#classpathAttribute#.#addValue#(#value#)#;#}#}#}#else#if#(#attributes#.#containsKey#(#attributeKey#)#)#{#throw#new#ManifestException#(#"The attribute \""#+#attribute#.#getName#(#)#+#"\" may not occur more "#+#"than once in the same section"#)#;#}#else#{#storeAttribute#(#attribute#)#;#}#}#return#null#;#}##Object#clone#(#)#{#Section#cloned#=#new#Section#(#)#;#cloned#.#setName#(#name#)#;#Enumeration#e#=#getAttributeKeys#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#String#key#=#(#String#)#e#.#nextElement#(#)#;#Attribute#attribute#=#getAttribute#(#key#)#;#cloned#.#storeAttribute#(#new#Attribute#(#attribute#.#getName#(#)#,#attribute#.#getValue#(#)#)#)#;#}#return#cloned#;#}##void#storeAttribute#(#Attribute#attribute#)#{#if#(#attribute#==#null#)#{#return#;#}#String#attributeKey#=#attribute#.#getKey#(#)#;#attributes#.#put#(#attributeKey#,#attribute#)#;#if#(#!#attributeIndex#.#contains#(#attributeKey#)#)#{#attributeIndex#.#addElement#(#attributeKey#)#;#}#}##Enumeration#getWarnings#(#)#{#return#warnings#.#elements#(#)#;#}##int#hashCode#(#)#{#return#attributes#.#hashCode#(#)#;#}##boolean#equals#(#Object#rhs#)#{#if#(#rhs#==#null#||#rhs#.#getClass#(#)#!=#getClass#(#)#)#{#return#false#;#}#if#(#rhs#==#this#)#{#return#true#;#}#Section#rhsSection#=#(#Section#)#rhs#;#return#attributes#.#equals#(#rhsSection#.#attributes#)#;#}##Manifest#getDefaultManifest#(#)#throws#BuildException#{#InputStream#in#=#null#;#InputStreamReader#insr#=#null#;#try#{#String#defManifest#=#"/org/apache/tools/ant/defaultManifest.mf"#;#in#=#Manifest#.#class#.#getResourceAsStream#(#defManifest#)#;#if#(#in#==#null#)#{#throw#new#BuildException#(#"Could not find default manifest: "#+#defManifest#)#;#}#try#{#insr#=#new#InputStreamReader#(#in#,#"UTF-8"#)#;#Manifest#defaultManifest#=#new#Manifest#(#insr#)#;#String#version#=#System#.#getProperty#(#"java.runtime.version"#)#;#if#(#version#==#null#)#{#version#=#System#.#getProperty#(#"java.vm.version"#)#;#}#Attribute#createdBy#=#new#Attribute#(#"Created-By"#,#version#+#" ("#+#System#.#getProperty#(#"java.vm.vendor"#)#+#")"#)#;#defaultManifest#.#getMainSection#(#)#.#storeAttribute#(#createdBy#)#;#return#defaultManifest#;#}#catch#(#UnsupportedEncodingException#e#)#{#insr#=#new#InputStreamReader#(#in#)#;#return#new#Manifest#(#insr#)#;#}#}#catch#(#ManifestException#e#)#{#throw#new#BuildException#(#"Default manifest is invalid !!"#,#e#)#;#}#catch#(#IOException#e#)#{#throw#new#BuildException#(#"Unable to read default manifest"#,#e#)#;#}#finally#{#FileUtils#.#close#(#insr#)#;#FileUtils#.#close#(#in#)#;#}#}##void#addConfiguredSection#(#Section#section#)#throws#ManifestException#{#String#sectionName#=#section#.#getName#(#)#;#if#(#sectionName#==#null#)#{#throw#new#BuildException#(#"Sections must have a name"#)#;#}#sections#.#put#(#sectionName#,#section#)#;#if#(#!#sectionIndex#.#contains#(#sectionName#)#)#{#sectionIndex#.#addElement#(#sectionName#)#;#}#}##void#addConfiguredAttribute#(#Attribute#attribute#)#throws#ManifestException#{#if#(#attribute#.#getKey#(#)#==#null#||#attribute#.#getValue#(#)#==#null#)#{#throw#new#BuildException#(#"Attributes must have name and value"#)#;#}#if#(#attribute#.#getKey#(#)#.#equalsIgnoreCase#(#ATTRIBUTE_MANIFEST_VERSION#)#)#{#manifestVersion#=#attribute#.#getValue#(#)#;#}#else#{#mainSection#.#addConfiguredAttribute#(#attribute#)#;#}#}##void#merge#(#Manifest#other#)#throws#ManifestException#{#merge#(#other#,#false#)#;#}##void#merge#(#Manifest#other#,#boolean#overwriteMain#)#throws#ManifestException#{#merge#(#other#,#overwriteMain#,#false#)#;#}##void#merge#(#Manifest#other#,#boolean#overwriteMain#,#boolean#mergeClassPaths#)#throws#ManifestException#{#if#(#other#!=#null#)#{#if#(#overwriteMain#)#{#mainSection#=#(#Section#)#other#.#mainSection#.#clone#(#)#;#}#else#{#mainSection#.#merge#(#other#.#mainSection#,#mergeClassPaths#)#;#}#if#(#other#.#manifestVersion#!=#null#)#{#manifestVersion#=#other#.#manifestVersion#;#}#Enumeration#e#=#other#.#getSectionNames#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#String#sectionName#=#(#String#)#e#.#nextElement#(#)#;#Section#ourSection#=#(#Section#)#sections#.#get#(#sectionName#)#;#Section#otherSection#=#(#Section#)#other#.#sections#.#get#(#sectionName#)#;#if#(#ourSection#==#null#)#{#if#(#otherSection#!=#null#)#{#addConfiguredSection#(#(#Section#)#otherSection#.#clone#(#)#)#;#}#}#else#{#ourSection#.#merge#(#otherSection#,#mergeClassPaths#)#;#}#}#}#}##void#write#(#PrintWriter#writer#)#throws#IOException#{#write#(#writer#,#false#)#;#}##void#write#(#PrintWriter#writer#,#boolean#flatten#)#throws#IOException#{#writer#.#print#(#ATTRIBUTE_MANIFEST_VERSION#+#": "#+#manifestVersion#+#EOL#)#;#String#signatureVersion#=#mainSection#.#getAttributeValue#(#ATTRIBUTE_SIGNATURE_VERSION#)#;#if#(#signatureVersion#!=#null#)#{#writer#.#print#(#ATTRIBUTE_SIGNATURE_VERSION#+#": "#+#signatureVersion#+#EOL#)#;#mainSection#.#removeAttribute#(#ATTRIBUTE_SIGNATURE_VERSION#)#;#}#mainSection#.#write#(#writer#,#flatten#)#;#// add it back#if#(#signatureVersion#!=#null#)#{#try#{#Attribute#svAttr#=#new#Attribute#(#ATTRIBUTE_SIGNATURE_VERSION#,#signatureVersion#)#;#mainSection#.#addConfiguredAttribute#(#svAttr#)#;#}#catch#(#ManifestException#e#)#{#// shouldn't happen - ignore#}#}#Enumeration#e#=#sectionIndex#.#elements#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#String#sectionName#=#(#String#)#e#.#nextElement#(#)#;#Section#section#=#getSection#(#sectionName#)#;#section#.#write#(#writer#,#flatten#)#;#}#}##String#toString#(#)#{#StringWriter#sw#=#new#StringWriter#(#)#;#try#{#write#(#new#PrintWriter#(#sw#)#)#;#}#catch#(#IOException#e#)#{#return#null#;#}#return#sw#.#toString#(#)#;#}##Enumeration#getWarnings#(#)#{#Vector#warnings#=#new#Vector#(#)#;#Enumeration#warnEnum#=#mainSection#.#getWarnings#(#)#;#while#(#warnEnum#.#hasMoreElements#(#)#)#{#warnings#.#addElement#(#warnEnum#.#nextElement#(#)#)#;#}#// create a vector and add in the warnings for all the sections#Enumeration#e#=#sections#.#elements#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#Section#section#=#(#Section#)#e#.#nextElement#(#)#;#Enumeration#e2#=#section#.#getWarnings#(#)#;#while#(#e2#.#hasMoreElements#(#)#)#{#warnings#.#addElement#(#e2#.#nextElement#(#)#)#;#}#}#return#warnings#.#elements#(#)#;#}##int#hashCode#(#)#{#int#hashCode#=#0#;#if#(#manifestVersion#!=#null#)#{#hashCode#+=#manifestVersion#.#hashCode#(#)#;#}#hashCode#+=#mainSection#.#hashCode#(#)#;#hashCode#+=#sections#.#hashCode#(#)#;#return#hashCode#;#}##boolean#equals#(#Object#rhs#)#{#if#(#rhs#==#null#||#rhs#.#getClass#(#)#!=#getClass#(#)#)#{#return#false#;#}#if#(#rhs#==#this#)#{#return#true#;#}#Manifest#rhsManifest#=#(#Manifest#)#rhs#;#if#(#manifestVersion#==#null#)#{#if#(#rhsManifest#.#manifestVersion#!=#null#)#{#return#false#;#}#}#else#if#(#!#manifestVersion#.#equals#(#rhsManifest#.#manifestVersion#)#)#{#return#false#;#}#if#(#!#mainSection#.#equals#(#rhsManifest#.#mainSection#)#)#{#return#false#;#}#return#sections#.#equals#(#rhsManifest#.#sections#)#;#}##String#getManifestVersion#(#)#{#return#manifestVersion#;#}##Section#getMainSection#(#)#{#return#mainSection#;#}##Section#getSection#(#String#name#)#{#return#(#Section#)#sections#.#get#(#name#)#;#}##Enumeration#getSectionNames#(#)#{#return#sectionIndex#.#elements#(#)#;#}##