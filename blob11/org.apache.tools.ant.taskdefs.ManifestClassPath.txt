void#execute#(#)#{#if#(#name#==#null#)#{#throw#new#BuildException#(#"Missing 'property' attribute!"#)#;#}#if#(#dir#==#null#)#{#throw#new#BuildException#(#"Missing 'jarfile' attribute!"#)#;#}#if#(#getProject#(#)#.#getProperty#(#name#)#!=#null#)#{#throw#new#BuildException#(#"Property '"#+#name#+#"' already set!"#)#;#}#if#(#path#==#null#)#{#throw#new#BuildException#(#"Missing nested <classpath>!"#)#;#}#StringBuffer#tooLongSb#=#new#StringBuffer#(#)#;#for#(#int#i#=#0#;#i#<#maxParentLevels#+#1#;#i#++#)#{#tooLongSb#.#append#(#"../"#)#;#}#final#String#tooLongPrefix#=#tooLongSb#.#toString#(#)#;#// Normalize the reference directory (containing the jar)#final#FileUtils#fileUtils#=#FileUtils#.#getFileUtils#(#)#;#dir#=#fileUtils#.#normalize#(#dir#.#getAbsolutePath#(#)#)#;#String#[#]#elements#=#path#.#list#(#)#;#StringBuffer#buffer#=#new#StringBuffer#(#)#;#StringBuffer#element#=#new#StringBuffer#(#)#;#for#(#int#i#=#0#;#i#<#elements#.#length#;#++#i#)#{#// Normalize the current file#File#pathEntry#=#new#File#(#elements#[#i#]#)#;#String#fullPath#=#pathEntry#.#getAbsolutePath#(#)#;#pathEntry#=#fileUtils#.#normalize#(#fullPath#)#;#String#relPath#=#null#;#String#canonicalPath#=#null#;#try#{#relPath#=#FileUtils#.#getRelativePath#(#dir#,#pathEntry#)#;#canonicalPath#=#pathEntry#.#getCanonicalPath#(#)#;#// getRelativePath always uses '/' as separator, adapt#if#(#File#.#separatorChar#!=#'/'#)#{#canonicalPath#=#canonicalPath#.#replace#(#File#.#separatorChar#,#'/'#)#;#}#}#catch#(#Exception#e#)#{#throw#new#BuildException#(#"error trying to get the relative path"#+#" from "#+#dir#+#" to "#+#fullPath#,#e#)#;#}#// No match, so bail out!#if#(#relPath#.#equals#(#canonicalPath#)#||#relPath#.#startsWith#(#tooLongPrefix#)#)#{#throw#new#BuildException#(#"No suitable relative path from "#+#dir#+#" to "#+#fullPath#)#;#}#if#(#pathEntry#.#isDirectory#(#)#&&#!#relPath#.#endsWith#(#"/"#)#)#{#relPath#=#relPath#+#'/'#;#}#try#{#relPath#=#Locator#.#encodeURI#(#relPath#)#;#}#catch#(#UnsupportedEncodingException#exc#)#{#throw#new#BuildException#(#exc#)#;#}#// Manifest's ClassPath: attribute always uses forward#// slashes '/', and is space-separated. Ant will properly#// format it on 72 columns with proper line continuation#buffer#.#append#(#relPath#)#;#buffer#.#append#(#' '#)#;#}#// Finally assign the property with the manifest classpath#getProject#(#)#.#setNewProperty#(#name#,#buffer#.#toString#(#)#.#trim#(#)#)#;#}##void#setProperty#(#String#name#)#{#this#.#name#=#name#;#}##void#setJarFile#(#File#jarfile#)#{#File#parent#=#jarfile#.#getParentFile#(#)#;#if#(#!#parent#.#isDirectory#(#)#)#{#throw#new#BuildException#(#"Jar's directory not found: "#+#parent#)#;#}#this#.#dir#=#parent#;#}##void#setMaxParentLevels#(#int#levels#)#{#if#(#levels#<#0#)#{#throw#new#BuildException#(#"maxParentLevels must not be a negative"#+#" number"#)#;#}#this#.#maxParentLevels#=#levels#;#}##void#addClassPath#(#Path#path#)#{#this#.#path#=#path#;#}##