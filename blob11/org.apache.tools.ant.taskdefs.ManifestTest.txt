void#setUp#(#)#{#configureProject#(#"src/etc/testcases/taskdefs/manifest.xml"#)#;#}##void#tearDown#(#)#{#executeTarget#(#"clean"#)#;#}##void#test1#(#)#throws#ManifestException#,#IOException#{#executeTarget#(#"test1"#)#;#Manifest#manifest#=#getManifest#(#EXPANDED_MANIFEST#)#;#String#version#=#manifest#.#getManifestVersion#(#)#;#assertEquals#(#"Manifest was not created with correct version - "#,#"1.0"#,#version#)#;#}##void#test2#(#)#throws#ManifestException#,#IOException#{#executeTarget#(#"test2"#)#;#Manifest#manifest#=#getManifest#(#EXPANDED_MANIFEST#)#;#String#version#=#manifest#.#getManifestVersion#(#)#;#assertEquals#(#"Manifest was not created with correct version - "#,#"2.0"#,#version#)#;#}##void#test3#(#)#{#expectBuildExceptionContaining#(#"test3"#,#"Manifest is invalid - no colon on header line"#,#"Invalid Manifest"#)#;#}##void#test4#(#)#{#expectBuildExceptionContaining#(#"test4"#,#"Manifest is invalid - section starts with continuation line"#,#"Invalid Manifest"#)#;#}##void#test5#(#)#{#executeTarget#(#"test5"#)#;#String#output#=#getLog#(#)#;#boolean#hasWarning#=#output#.#indexOf#(#"Manifest warning: \"Name\" attributes should not occur in the main section"#)#!=#-#1#;#assertTrue#(#"Expected warning about Name in main section"#,#hasWarning#)#;#}##void#test6#(#)#{#expectBuildExceptionContaining#(#"test6"#,#"Manifest is invalid - section starts with incorrect attribute"#,#"Invalid Manifest"#)#;#String#output#=#getLog#(#)#;#boolean#hasWarning#=#output#.#indexOf#(#"Manifest sections should start with a \"Name\" attribute"#)#!=#-#1#;#assertTrue#(#"Expected warning about section not starting with Name: attribute"#,#hasWarning#)#;#}##void#test7#(#)#{#executeTarget#(#"test7"#)#;#boolean#hasWarning#=#getLog#(#)#.#indexOf#(#Manifest#.#ERROR_FROM_FORBIDDEN#)#!=#-#1#;#assertTrue#(#"Expected warning about From: attribute"#,#hasWarning#)#;#}##void#test8#(#)#throws#IOException#,#ManifestException#{#executeTarget#(#"test8"#)#;#Manifest#manifest#=#getManifest#(#EXPANDED_MANIFEST#)#;#Manifest#.#Section#mainSection#=#manifest#.#getMainSection#(#)#;#String#classpath#=#mainSection#.#getAttributeValue#(#"class-path"#)#;#assertEquals#(#"Class-Path attribute was not set correctly - "#,#"fubar"#,#classpath#)#;#Manifest#.#Section#testSection#=#manifest#.#getSection#(#"Test"#)#;#String#testAttr#=#testSection#.#getAttributeValue#(#"TestAttr"#)#;#assertEquals#(#"TestAttr attribute was not set correctly - "#,#"Test"#,#testAttr#)#;#}##void#test9#(#)#{#expectBuildExceptionContaining#(#"test9"#,#"Construction is invalid - Name attribute should not be used"#,#"Specify the section name using the \"name\" attribute of the <section> element"#)#;#}##void#test10#(#)#{#expectBuildExceptionContaining#(#"test10"#,#"Attribute has no name"#,#"Attributes must have name and value"#)#;#}##void#test11#(#)#{#expectBuildExceptionContaining#(#"test11"#,#"Attribute has no value"#,#"Attributes must have name and value"#)#;#}##void#test12#(#)#{#expectBuildExceptionContaining#(#"test12"#,#"Section with no name"#,#"Sections must have a name"#)#;#}##void#test13#(#)#{#expectBuildExceptionContaining#(#"test13"#,#"Duplicate Attribute"#,#"The attribute \"Test\" may not occur more than once in the same section"#)#;#}##void#test14#(#)#throws#IOException#,#ManifestException#{#executeTarget#(#"test14"#)#;#Manifest#manifest#=#getManifest#(#EXPANDED_MANIFEST#)#;#Manifest#.#Section#mainSection#=#manifest#.#getMainSection#(#)#;#String#classpath#=#mainSection#.#getAttributeValue#(#"class-path"#)#;#assertEquals#(#"Class-Path attribute was not set correctly - "#,#"Test1 Test2 Test3 Test4"#,#classpath#)#;#}##void#testLongLine#(#)#throws#IOException#,#ManifestException#{#Project#p#=#getProject#(#)#;#p#.#setUserProperty#(#"test.longline"#,#LONG_LINE#)#;#p#.#setUserProperty#(#"test.long68name"#,#LONG_68_NAME#)#;#p#.#setUserProperty#(#"test.long70name"#,#LONG_70_NAME#)#;#p#.#setUserProperty#(#"test.notlongname"#,#NOT_LONG_NAME#)#;#p#.#setUserProperty#(#"test.value"#,#VALUE#)#;#executeTarget#(#"testLongLine"#)#;#Manifest#manifest#=#getManifest#(#EXPANDED_MANIFEST#)#;#Manifest#.#Section#mainSection#=#manifest#.#getMainSection#(#)#;#String#classpath#=#mainSection#.#getAttributeValue#(#"class-path"#)#;#assertEquals#(#"Class-Path attribute was not set correctly - "#,#LONG_LINE#,#classpath#)#;#String#value#=#mainSection#.#getAttributeValue#(#LONG_68_NAME#)#;#assertEquals#(#"LONG_68_NAME_VALUE_MISMATCH"#,#VALUE#,#value#)#;#value#=#mainSection#.#getAttributeValue#(#LONG_70_NAME#)#;#assertEquals#(#"LONG_70_NAME_VALUE_MISMATCH"#,#VALUE#,#value#)#;#value#=#mainSection#.#getAttributeValue#(#NOT_LONG_NAME#)#;#assertEquals#(#"NOT_LONG_NAME_VALUE_MISMATCH"#,#VALUE#,#value#)#;#BufferedReader#in#=#new#BufferedReader#(#new#FileReader#(#EXPANDED_MANIFEST#)#)#;#Set#set#=#new#HashSet#(#)#;#String#read#=#in#.#readLine#(#)#;#while#(#read#!=#null#)#{#set#.#add#(#read#)#;#read#=#in#.#readLine#(#)#;#}#assertTrue#(#"Manifest file should have contained string "#,#set#.#remove#(#" NOT_LONG"#)#)#;#assertTrue#(#"Manifest file should have contained string "#,#set#.#remove#(#" NG"#)#)#;#assertTrue#(#"Manifest file should have contained string "#,#set#.#remove#(#LONG_70_NAME#+#": "#)#)#;#assertTrue#(#"Manifest file should have contained string "#,#set#.#remove#(#NOT_LONG_NAME#+#": NOT_LO"#)#)#;#}##void#testOrder1#(#)#throws#IOException#,#ManifestException#{#executeTarget#(#"testOrder1"#)#;#Manifest#manifest#=#getManifest#(#EXPANDED_MANIFEST#)#;#Enumeration#e#=#manifest#.#getSectionNames#(#)#;#String#section1#=#(#String#)#e#.#nextElement#(#)#;#String#section2#=#(#String#)#e#.#nextElement#(#)#;#assertEquals#(#"First section name unexpected"#,#"Test1"#,#section1#)#;#assertEquals#(#"Second section name unexpected"#,#"Test2"#,#section2#)#;#Manifest#.#Section#section#=#manifest#.#getSection#(#"Test1"#)#;#e#=#section#.#getAttributeKeys#(#)#;#String#attr1Key#=#(#String#)#e#.#nextElement#(#)#;#String#attr2Key#=#(#String#)#e#.#nextElement#(#)#;#String#attr1#=#section#.#getAttribute#(#attr1Key#)#.#getName#(#)#;#String#attr2#=#section#.#getAttribute#(#attr2Key#)#.#getName#(#)#;#assertEquals#(#"First attribute name unexpected"#,#"TestAttr1"#,#attr1#)#;#assertEquals#(#"Second attribute name unexpected"#,#"TestAttr2"#,#attr2#)#;#}##void#testOrder2#(#)#throws#IOException#,#ManifestException#{#executeTarget#(#"testOrder2"#)#;#Manifest#manifest#=#getManifest#(#EXPANDED_MANIFEST#)#;#Enumeration#e#=#manifest#.#getSectionNames#(#)#;#String#section1#=#(#String#)#e#.#nextElement#(#)#;#String#section2#=#(#String#)#e#.#nextElement#(#)#;#assertEquals#(#"First section name unexpected"#,#"Test2"#,#section1#)#;#assertEquals#(#"Second section name unexpected"#,#"Test1"#,#section2#)#;#Manifest#.#Section#section#=#manifest#.#getSection#(#"Test1"#)#;#e#=#section#.#getAttributeKeys#(#)#;#String#attr1Key#=#(#String#)#e#.#nextElement#(#)#;#String#attr2Key#=#(#String#)#e#.#nextElement#(#)#;#String#attr1#=#section#.#getAttribute#(#attr1Key#)#.#getName#(#)#;#String#attr2#=#section#.#getAttribute#(#attr2Key#)#.#getName#(#)#;#assertEquals#(#"First attribute name unexpected"#,#"TestAttr2"#,#attr1#)#;#assertEquals#(#"Second attribute name unexpected"#,#"TestAttr1"#,#attr2#)#;#}##void#testNoFile#(#)#{#expectBuildException#(#"testNoFile"#,#"file is required"#)#;#}##void#testReplace#(#)#throws#IOException#,#ManifestException#{#executeTarget#(#"testReplace"#)#;#Manifest#mf#=#getManifest#(#"src/etc/testcases/taskdefs/mftest.mf"#)#;#assertNotNull#(#mf#)#;#assertEquals#(#Manifest#.#getDefaultManifest#(#)#,#mf#)#;#}##void#testUpdate#(#)#throws#IOException#,#ManifestException#{#executeTarget#(#"testUpdate"#)#;#Manifest#mf#=#getManifest#(#"src/etc/testcases/taskdefs/mftest.mf"#)#;#assertNotNull#(#mf#)#;#assertTrue#(#!#Manifest#.#getDefaultManifest#(#)#.#equals#(#mf#)#)#;#String#mfAsString#=#mf#.#toString#(#)#;#assertNotNull#(#mfAsString#)#;#assertTrue#(#mfAsString#.#startsWith#(#"Manifest-Version: 2.0"#)#)#;#assertTrue#(#mfAsString#.#indexOf#(#"Foo: Bar"#)#>#-#1#)#;#mf#=#getManifest#(#"src/etc/testcases/taskdefs/mftest2.mf"#)#;#assertNotNull#(#mf#)#;#mfAsString#=#mf#.#toString#(#)#;#assertNotNull#(#mfAsString#)#;#assertEquals#(#-#1#,#mfAsString#.#indexOf#(#"Foo: Bar"#)#)#;#assertTrue#(#mfAsString#.#indexOf#(#"Foo: Baz"#)#>#-#1#)#;#}##void#testFrom#(#)#{#expectLogContaining#(#"testFrom"#,#Manifest#.#ERROR_FROM_FORBIDDEN#)#;#}##void#testIllegalName#(#)#{#expectBuildException#(#"testIllegalName"#,#"Manifest attribute names must not contain ' '"#)#;#}##void#testIllegalNameInSection#(#)#{#expectBuildException#(#"testIllegalNameInSection"#,#"Manifest attribute names must not contain ' '"#)#;#}##void#testIllegalNameBegin#(#)#{#expectBuildException#(#"testIllegalNameInSection"#,#"Manifest attribute names must not start with '-' at the begin."#)#;#}##void#testIllegalName2#(#)#{#expectBuildException#(#"testIllegalName"#,#"Manifest attribute names must not contain '.'"#)#;#}##void#testIllegalName3#(#)#{#expectBuildException#(#"testIllegalName"#,#"Manifest attribute names must not contain '*'"#)#;#}##Manifest#getManifest#(#String#filename#)#throws#IOException#,#ManifestException#{#FileReader#r#=#new#FileReader#(#new#File#(#System#.#getProperty#(#"root"#)#,#filename#)#)#;#try#{#return#new#Manifest#(#r#)#;#}#finally#{#r#.#close#(#)#;#}#}##