void#setUp#(#)#{#configureProject#(#"src/etc/testcases/taskdefs/replace.xml"#)#;#}##void#test1#(#)#{#expectBuildException#(#"test1"#,#"required argument not specified"#)#;#}##void#test2#(#)#{#expectBuildException#(#"test2"#,#"required argument not specified"#)#;#}##void#test3#(#)#{#expectBuildException#(#"test3"#,#"required argument not specified"#)#;#}##void#test4#(#)#{#expectBuildException#(#"test4"#,#"empty token not allowed"#)#;#}##void#test5#(#)#{#executeTarget#(#"test5"#)#;#}##void#test6#(#)#{#expectBuildException#(#"test6"#,#"required argument not specified"#)#;#}##void#test7#(#)#{#expectBuildException#(#"test7"#,#"empty token not allowed"#)#;#}##void#test8#(#)#{#executeTarget#(#"test8"#)#;#}##void#test9#(#)#throws#IOException#{#executeTarget#(#"test9"#)#;#String#tmpdir#=#project#.#getProperty#(#"tmp.dir"#)#;#assertEqualContent#(#new#File#(#tmpdir#,#"result.txt"#)#,#new#File#(#tmpdir#,#"output.txt"#)#)#;#}##void#testNoPreserveLastModified#(#)#throws#Exception#{#executeTarget#(#"lastModifiedSetup"#)#;#String#tmpdir#=#project#.#getProperty#(#"tmp.dir"#)#;#long#ts1#=#new#File#(#tmpdir#,#"test.txt"#)#.#lastModified#(#)#;#Thread#.#sleep#(#3000#)#;#executeTarget#(#"testNoPreserve"#)#;#assertTrue#(#ts1#<#new#File#(#tmpdir#,#"test.txt"#)#.#lastModified#(#)#)#;#}##void#testPreserveLastModified#(#)#throws#Exception#{#executeTarget#(#"lastModifiedSetup"#)#;#String#tmpdir#=#project#.#getProperty#(#"tmp.dir"#)#;#long#ts1#=#new#File#(#tmpdir#,#"test.txt"#)#.#lastModified#(#)#;#Thread#.#sleep#(#3000#)#;#executeTarget#(#"testPreserve"#)#;#assertTrue#(#ts1#==#new#File#(#tmpdir#,#"test.txt"#)#.#lastModified#(#)#)#;#}##void#tearDown#(#)#{#executeTarget#(#"cleanup"#)#;#}##void#assertEqualContent#(#File#expect#,#File#result#)#throws#AssertionFailedError#,#IOException#{#if#(#!#result#.#exists#(#)#)#{#fail#(#"Expected file "#+#result#+#" doesn\'t exist"#)#;#}#InputStream#inExpect#=#null#;#InputStream#inResult#=#null#;#try#{#inExpect#=#new#BufferedInputStream#(#new#FileInputStream#(#expect#)#)#;#inResult#=#new#BufferedInputStream#(#new#FileInputStream#(#result#)#)#;#int#expectedByte#=#inExpect#.#read#(#)#;#while#(#expectedByte#!=#-#1#)#{#assertEquals#(#expectedByte#,#inResult#.#read#(#)#)#;#expectedByte#=#inExpect#.#read#(#)#;#}#assertEquals#(#"End of file"#,#-#1#,#inResult#.#read#(#)#)#;#}#finally#{#if#(#inResult#!=#null#)#{#inResult#.#close#(#)#;#}#if#(#inExpect#!=#null#)#{#inExpect#.#close#(#)#;#}#}#}##