void#setMillis#(#long#millis#)#{#this#.#millis#=#millis#;#}##void#setDatetime#(#String#dateTime#)#{#this#.#dateTime#=#dateTime#;#}##void#setPattern#(#final#String#pattern#)#{#dfFactory#=#new#Touch#.#DateFormatFactory#(#)#{#public#DateFormat#getPrimaryFormat#(#)#{#return#new#SimpleDateFormat#(#pattern#)#;#}#public#DateFormat#getFallbackFormat#(#)#{#return#null#;#}#}#;#}##DateFormat#getPrimaryFormat#(#)#{#return#new#SimpleDateFormat#(#pattern#)#;#}##DateFormat#getFallbackFormat#(#)#{#return#null#;#}##void#add#(#Resource#r#)#{#if#(#resource#!=#null#)#{#throw#new#BuildException#(#"only one resource can be tested"#)#;#}#resource#=#r#;#}##void#setMode#(#CompareMode#mode#)#{#this#.#mode#=#mode#;#}##void#validate#(#)#throws#BuildException#{#if#(#millis#>=#0#&&#dateTime#!=#null#)#{#throw#new#BuildException#(#"Only one of dateTime and millis can be"#+#" set"#)#;#}#if#(#millis#<#0#&&#dateTime#==#null#)#{#throw#new#BuildException#(#"millis or dateTime is required"#)#;#}#if#(#resource#==#null#)#{#throw#new#BuildException#(#"resource is required"#)#;#}#}##long#getMillis#(#)#throws#BuildException#{#if#(#millis#>=#0#)#{#return#millis#;#}#if#(#"now"#.#equalsIgnoreCase#(#dateTime#)#)#{#return#System#.#currentTimeMillis#(#)#;#}#DateFormat#df#=#dfFactory#.#getPrimaryFormat#(#)#;#ParseException#pe#=#null#;#try#{#return#df#.#parse#(#dateTime#)#.#getTime#(#)#;#}#catch#(#ParseException#peOne#)#{#df#=#dfFactory#.#getFallbackFormat#(#)#;#if#(#df#==#null#)#{#pe#=#peOne#;#}#else#{#try#{#return#df#.#parse#(#dateTime#)#.#getTime#(#)#;#}#catch#(#ParseException#peTwo#)#{#pe#=#peTwo#;#}#}#}#if#(#pe#!=#null#)#{#throw#new#BuildException#(#pe#.#getMessage#(#)#,#pe#,#getLocation#(#)#)#;#}#/* NOTREACHED */#return#0#;#}##boolean#eval#(#)#throws#BuildException#{#validate#(#)#;#long#expected#=#getMillis#(#)#;#long#actual#=#resource#.#getLastModified#(#)#;#log#(#"expected timestamp: "#+#expected#+#" ("#+#new#Date#(#expected#)#+#")"#+#", actual timestamp: "#+#actual#+#" ("#+#new#Date#(#actual#)#+#")"#,#Project#.#MSG_VERBOSE#)#;#if#(#CompareMode#.#EQUALS_TEXT#.#equals#(#mode#.#getValue#(#)#)#)#{#return#expected#==#actual#;#}#if#(#CompareMode#.#BEFORE_TEXT#.#equals#(#mode#.#getValue#(#)#)#)#{#return#expected#>#actual#;#}#if#(#CompareMode#.#NOT_BEFORE_TEXT#.#equals#(#mode#.#getValue#(#)#)#)#{#return#expected#<=#actual#;#}#if#(#CompareMode#.#AFTER_TEXT#.#equals#(#mode#.#getValue#(#)#)#)#{#return#expected#<#actual#;#}#if#(#CompareMode#.#NOT_AFTER_TEXT#.#equals#(#mode#.#getValue#(#)#)#)#{#return#expected#>=#actual#;#}#throw#new#BuildException#(#"Unknown mode "#+#mode#.#getValue#(#)#)#;#}##String#[#]#getValues#(#)#{#return#new#String#[#]#{#EQUALS_TEXT#,#BEFORE_TEXT#,#AFTER_TEXT#,#NOT_BEFORE_TEXT#,#NOT_AFTER_TEXT#,#}#;#}##