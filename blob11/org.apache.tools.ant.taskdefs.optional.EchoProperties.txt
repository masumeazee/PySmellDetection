void#setSrcfile#(#File#file#)#{#inFile#=#file#;#}##void#setDestfile#(#File#destfile#)#{#this#.#destfile#=#destfile#;#}##void#setFailOnError#(#boolean#failonerror#)#{#this#.#failonerror#=#failonerror#;#}##void#setPrefix#(#String#prefix#)#{#if#(#prefix#!=#null#&&#prefix#.#length#(#)#!=#0#)#{#this#.#prefix#=#prefix#;#PropertySet#ps#=#new#PropertySet#(#)#;#ps#.#setProject#(#getProject#(#)#)#;#ps#.#appendPrefix#(#prefix#)#;#addPropertyset#(#ps#)#;#}#}##void#setRegex#(#String#regex#)#{#if#(#regex#!=#null#&&#regex#.#length#(#)#!=#0#)#{#this#.#regex#=#regex#;#PropertySet#ps#=#new#PropertySet#(#)#;#ps#.#setProject#(#getProject#(#)#)#;#ps#.#appendRegex#(#regex#)#;#addPropertyset#(#ps#)#;#}#}##void#addPropertyset#(#PropertySet#ps#)#{#propertySets#.#addElement#(#ps#)#;#}##void#setFormat#(#FormatAttribute#ea#)#{#format#=#ea#.#getValue#(#)#;#}##String#[#]#getValues#(#)#{#return#formats#;#}##void#execute#(#)#throws#BuildException#{#if#(#prefix#!=#null#&&#regex#!=#null#)#{#throw#new#BuildException#(#"Please specify either prefix"#+#" or regex, but not both"#,#getLocation#(#)#)#;#}#//copy the properties file#Hashtable#allProps#=#new#Hashtable#(#)#;#/* load properties from file if specified, otherwise
        use Ant's properties */#if#(#inFile#==#null#&&#propertySets#.#size#(#)#==#0#)#{#// add ant properties#allProps#.#putAll#(#getProject#(#)#.#getProperties#(#)#)#;#}#else#if#(#inFile#!=#null#)#{#if#(#inFile#.#exists#(#)#&&#inFile#.#isDirectory#(#)#)#{#String#message#=#"srcfile is a directory!"#;#if#(#failonerror#)#{#throw#new#BuildException#(#message#,#getLocation#(#)#)#;#}#else#{#log#(#message#,#Project#.#MSG_ERR#)#;#}#return#;#}#if#(#inFile#.#exists#(#)#&&#!#inFile#.#canRead#(#)#)#{#String#message#=#"Can not read from the specified srcfile!"#;#if#(#failonerror#)#{#throw#new#BuildException#(#message#,#getLocation#(#)#)#;#}#else#{#log#(#message#,#Project#.#MSG_ERR#)#;#}#return#;#}#FileInputStream#in#=#null#;#try#{#in#=#new#FileInputStream#(#inFile#)#;#Properties#props#=#new#Properties#(#)#;#props#.#load#(#in#)#;#allProps#.#putAll#(#props#)#;#}#catch#(#FileNotFoundException#fnfe#)#{#String#message#=#"Could not find file "#+#inFile#.#getAbsolutePath#(#)#;#if#(#failonerror#)#{#throw#new#BuildException#(#message#,#fnfe#,#getLocation#(#)#)#;#}#else#{#log#(#message#,#Project#.#MSG_WARN#)#;#}#return#;#}#catch#(#IOException#ioe#)#{#String#message#=#"Could not read file "#+#inFile#.#getAbsolutePath#(#)#;#if#(#failonerror#)#{#throw#new#BuildException#(#message#,#ioe#,#getLocation#(#)#)#;#}#else#{#log#(#message#,#Project#.#MSG_WARN#)#;#}#return#;#}#finally#{#FileUtils#.#close#(#in#)#;#}#}#Enumeration#e#=#propertySets#.#elements#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#PropertySet#ps#=#(#PropertySet#)#e#.#nextElement#(#)#;#allProps#.#putAll#(#ps#.#getProperties#(#)#)#;#}#OutputStream#os#=#null#;#try#{#if#(#destfile#==#null#)#{#os#=#new#ByteArrayOutputStream#(#)#;#saveProperties#(#allProps#,#os#)#;#log#(#os#.#toString#(#)#,#Project#.#MSG_INFO#)#;#}#else#{#if#(#destfile#.#exists#(#)#&&#destfile#.#isDirectory#(#)#)#{#String#message#=#"destfile is a directory!"#;#if#(#failonerror#)#{#throw#new#BuildException#(#message#,#getLocation#(#)#)#;#}#else#{#log#(#message#,#Project#.#MSG_ERR#)#;#}#return#;#}#if#(#destfile#.#exists#(#)#&&#!#destfile#.#canWrite#(#)#)#{#String#message#=#"Can not write to the specified destfile!"#;#if#(#failonerror#)#{#throw#new#BuildException#(#message#,#getLocation#(#)#)#;#}#else#{#log#(#message#,#Project#.#MSG_ERR#)#;#}#return#;#}#os#=#new#FileOutputStream#(#this#.#destfile#)#;#saveProperties#(#allProps#,#os#)#;#}#}#catch#(#IOException#ioe#)#{#if#(#failonerror#)#{#throw#new#BuildException#(#ioe#,#getLocation#(#)#)#;#}#else#{#log#(#ioe#.#getMessage#(#)#,#Project#.#MSG_INFO#)#;#}#}#finally#{#if#(#os#!=#null#)#{#try#{#os#.#close#(#)#;#}#catch#(#IOException#ex#)#{#//ignore#}#}#}#}##void#saveProperties#(#Hashtable#allProps#,#OutputStream#os#)#throws#IOException#,#BuildException#{#final#List#keyList#=#new#ArrayList#(#allProps#.#keySet#(#)#)#;#Collections#.#sort#(#keyList#)#;#Properties#props#=#new#Properties#(#)#{#private#static#final#long#serialVersionUID#=#5090936442309201654L#;#public#Enumeration#keys#(#)#{#return#CollectionUtils#.#asEnumeration#(#keyList#.#iterator#(#)#)#;#}#public#Set#entrySet#(#)#{#Set#result#=#super#.#entrySet#(#)#;#if#(#JavaEnvUtils#.#isKaffe#(#)#)#{#TreeSet#t#=#new#TreeSet#(#new#Comparator#(#)#{#public#int#compare#(#Object#o1#,#Object#o2#)#{#String#key1#=#(#String#)#(#(#Map#.#Entry#)#o1#)#.#getKey#(#)#;#String#key2#=#(#String#)#(#(#Map#.#Entry#)#o2#)#.#getKey#(#)#;#return#key1#.#compareTo#(#key2#)#;#}#}#)#;#t#.#addAll#(#result#)#;#result#=#t#;#}#return#result#;#}#}#;#for#(#int#i#=#0#;#i#<#keyList#.#size#(#)#;#i#++#)#{#String#name#=#keyList#.#get#(#i#)#.#toString#(#)#;#String#value#=#allProps#.#get#(#name#)#.#toString#(#)#;#props#.#setProperty#(#name#,#value#)#;#}#if#(#"text"#.#equals#(#format#)#)#{#jdkSaveProperties#(#props#,#os#,#"Ant properties"#)#;#}#else#if#(#"xml"#.#equals#(#format#)#)#{#xmlSaveProperties#(#props#,#os#)#;#}#}##Enumeration#keys#(#)#{#return#CollectionUtils#.#asEnumeration#(#keyList#.#iterator#(#)#)#;#}##Set#entrySet#(#)#{#Set#result#=#super#.#entrySet#(#)#;#if#(#JavaEnvUtils#.#isKaffe#(#)#)#{#TreeSet#t#=#new#TreeSet#(#new#Comparator#(#)#{#public#int#compare#(#Object#o1#,#Object#o2#)#{#String#key1#=#(#String#)#(#(#Map#.#Entry#)#o1#)#.#getKey#(#)#;#String#key2#=#(#String#)#(#(#Map#.#Entry#)#o2#)#.#getKey#(#)#;#return#key1#.#compareTo#(#key2#)#;#}#}#)#;#t#.#addAll#(#result#)#;#result#=#t#;#}#return#result#;#}##int#compare#(#Object#o1#,#Object#o2#)#{#String#key1#=#(#String#)#(#(#Map#.#Entry#)#o1#)#.#getKey#(#)#;#String#key2#=#(#String#)#(#(#Map#.#Entry#)#o2#)#.#getKey#(#)#;#return#key1#.#compareTo#(#key2#)#;#}##int#compareTo#(#Object#o#)#{#Tuple#that#=#(#Tuple#)#o#;#return#key#.#compareTo#(#that#.#key#)#;#}##List#sortProperties#(#Properties#props#)#{#//sort the list. Makes SCM and manual diffs easier.#List#sorted#=#new#ArrayList#(#props#.#size#(#)#)#;#Enumeration#e#=#props#.#propertyNames#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#String#name#=#(#String#)#e#.#nextElement#(#)#;#sorted#.#add#(#new#Tuple#(#name#,#props#.#getProperty#(#name#)#)#)#;#}#Collections#.#sort#(#sorted#)#;#return#sorted#;#}##void#xmlSaveProperties#(#Properties#props#,#OutputStream#os#)#throws#IOException#{#// create XML document#Document#doc#=#getDocumentBuilder#(#)#.#newDocument#(#)#;#Element#rootElement#=#doc#.#createElement#(#PROPERTIES#)#;#List#sorted#=#sortProperties#(#props#)#;#// output properties#Iterator#iten#=#sorted#.#iterator#(#)#;#while#(#iten#.#hasNext#(#)#)#{#Tuple#tuple#=#(#Tuple#)#iten#.#next#(#)#;#Element#propElement#=#doc#.#createElement#(#PROPERTY#)#;#propElement#.#setAttribute#(#ATTR_NAME#,#tuple#.#key#)#;#propElement#.#setAttribute#(#ATTR_VALUE#,#tuple#.#value#)#;#rootElement#.#appendChild#(#propElement#)#;#}#Writer#wri#=#null#;#try#{#wri#=#new#OutputStreamWriter#(#os#,#"UTF8"#)#;#wri#.#write#(#"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"#)#;#(#new#DOMElementWriter#(#)#)#.#write#(#rootElement#,#wri#,#0#,#"\t"#)#;#wri#.#flush#(#)#;#}#catch#(#IOException#ioe#)#{#throw#new#BuildException#(#"Unable to write XML file"#,#ioe#)#;#}#finally#{#FileUtils#.#close#(#wri#)#;#}#}##void#jdkSaveProperties#(#Properties#props#,#OutputStream#os#,#String#header#)#throws#IOException#{#try#{#props#.#store#(#os#,#header#)#;#}#catch#(#IOException#ioe#)#{#throw#new#BuildException#(#ioe#,#getLocation#(#)#)#;#}#finally#{#if#(#os#!=#null#)#{#try#{#os#.#close#(#)#;#}#catch#(#IOException#ioex#)#{#log#(#"Failed to close output stream"#)#;#}#}#}#}##DocumentBuilder#getDocumentBuilder#(#)#{#try#{#return#DocumentBuilderFactory#.#newInstance#(#)#.#newDocumentBuilder#(#)#;#}#catch#(#Exception#e#)#{#throw#new#ExceptionInInitializerError#(#e#)#;#}#}##