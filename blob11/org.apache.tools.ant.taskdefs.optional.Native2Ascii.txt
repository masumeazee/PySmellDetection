void#setReverse#(#boolean#reverse#)#{#this#.#reverse#=#reverse#;#}##boolean#getReverse#(#)#{#return#reverse#;#}##void#setEncoding#(#String#encoding#)#{#this#.#encoding#=#encoding#;#}##String#getEncoding#(#)#{#return#encoding#;#}##void#setSrc#(#File#srcDir#)#{#this#.#srcDir#=#srcDir#;#}##void#setDest#(#File#destDir#)#{#this#.#destDir#=#destDir#;#}##void#setExt#(#String#ext#)#{#this#.#extension#=#ext#;#}##void#setImplementation#(#String#impl#)#{#if#(#"default"#.#equals#(#impl#)#)#{#facade#.#setImplementation#(#Native2AsciiAdapterFactory#.#getDefault#(#)#)#;#}#else#{#facade#.#setImplementation#(#impl#)#;#}#}##Mapper#createMapper#(#)#throws#BuildException#{#if#(#mapper#!=#null#)#{#throw#new#BuildException#(#"Cannot define more than one mapper"#,#getLocation#(#)#)#;#}#mapper#=#new#Mapper#(#getProject#(#)#)#;#return#mapper#;#}##void#add#(#FileNameMapper#fileNameMapper#)#{#createMapper#(#)#.#add#(#fileNameMapper#)#;#}##ImplementationSpecificArgument#createArg#(#)#{#ImplementationSpecificArgument#arg#=#new#ImplementationSpecificArgument#(#)#;#facade#.#addImplementationArgument#(#arg#)#;#return#arg#;#}##Path#createImplementationClasspath#(#)#{#return#facade#.#getImplementationClasspath#(#getProject#(#)#)#;#}##void#add#(#Native2AsciiAdapter#adapter#)#{#if#(#nestedAdapter#!=#null#)#{#throw#new#BuildException#(#"Can't have more than one native2ascii"#+#" adapter"#)#;#}#nestedAdapter#=#adapter#;#}##void#execute#(#)#throws#BuildException#{#DirectoryScanner#scanner#=#null#;#// Scanner to find our inputs#String#[#]#files#;#// list of files to process#// default srcDir to basedir#if#(#srcDir#==#null#)#{#srcDir#=#getProject#(#)#.#resolveFile#(#"."#)#;#}#// Require destDir#if#(#destDir#==#null#)#{#throw#new#BuildException#(#"The dest attribute must be set."#)#;#}#// if src and dest dirs are the same, require the extension#// to be set, so we don't stomp every file.  One could still#// include a file with the same extension, but ....#if#(#srcDir#.#equals#(#destDir#)#&&#extension#==#null#&&#mapper#==#null#)#{#throw#new#BuildException#(#"The ext attribute or a mapper must be set if"#+#" src and dest dirs are the same."#)#;#}#FileNameMapper#m#=#null#;#if#(#mapper#==#null#)#{#if#(#extension#==#null#)#{#m#=#new#IdentityMapper#(#)#;#}#else#{#m#=#new#ExtMapper#(#)#;#}#}#else#{#m#=#mapper#.#getImplementation#(#)#;#}#scanner#=#getDirectoryScanner#(#srcDir#)#;#files#=#scanner#.#getIncludedFiles#(#)#;#SourceFileScanner#sfs#=#new#SourceFileScanner#(#this#)#;#files#=#sfs#.#restrict#(#files#,#srcDir#,#destDir#,#m#)#;#int#count#=#files#.#length#;#if#(#count#==#0#)#{#return#;#}#String#message#=#"Converting "#+#count#+#" file"#+#(#count#!=#1#?#"s"#:#""#)#+#" from "#;#log#(#message#+#srcDir#+#" to "#+#destDir#)#;#for#(#int#i#=#0#;#i#<#files#.#length#;#i#++#)#{#convert#(#files#[#i#]#,#m#.#mapFileName#(#files#[#i#]#)#[#0#]#)#;#}#}##void#convert#(#String#srcName#,#String#destName#)#throws#BuildException#{#File#srcFile#;#// File to convert#File#destFile#;#// where to put the results#// Build the full file names#srcFile#=#new#File#(#srcDir#,#srcName#)#;#destFile#=#new#File#(#destDir#,#destName#)#;#// Make sure we're not about to clobber something#if#(#srcFile#.#equals#(#destFile#)#)#{#throw#new#BuildException#(#"file "#+#srcFile#+#" would overwrite its self"#)#;#}#// Make intermediate directories if needed#// XXX JDK 1.1 doesn't have File.getParentFile,#String#parentName#=#destFile#.#getParent#(#)#;#if#(#parentName#!=#null#)#{#File#parentFile#=#new#File#(#parentName#)#;#if#(#(#!#parentFile#.#exists#(#)#)#&&#(#!#parentFile#.#mkdirs#(#)#)#)#{#throw#new#BuildException#(#"cannot create parent directory "#+#parentName#)#;#}#}#log#(#"converting "#+#srcName#,#Project#.#MSG_VERBOSE#)#;#Native2AsciiAdapter#ad#=#nestedAdapter#!=#null#?#nestedAdapter#:#Native2AsciiAdapterFactory#.#getAdapter#(#facade#.#getImplementation#(#)#,#this#,#createImplementationClasspath#(#)#)#;#if#(#!#ad#.#convert#(#this#,#srcFile#,#destFile#)#)#{#throw#new#BuildException#(#"conversion failed"#)#;#}#}##String#[#]#getCurrentArgs#(#)#{#return#facade#.#getArgs#(#)#;#}##void#setFrom#(#String#s#)#{#}##void#setTo#(#String#s#)#{#}##String#[#]#mapFileName#(#String#fileName#)#{#int#lastDot#=#fileName#.#lastIndexOf#(#'.'#)#;#if#(#lastDot#>=#0#)#{#return#new#String#[#]#{#fileName#.#substring#(#0#,#lastDot#)#+#extension#}#;#}#else#{#return#new#String#[#]#{#fileName#+#extension#}#;#}#}##