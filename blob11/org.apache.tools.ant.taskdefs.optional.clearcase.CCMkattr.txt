void#execute#(#)#throws#BuildException#{#Commandline#commandLine#=#new#Commandline#(#)#;#Project#aProj#=#getProject#(#)#;#int#result#=#0#;#// Check for required attributes#if#(#getTypeName#(#)#==#null#)#{#throw#new#BuildException#(#"Required attribute TypeName not specified"#)#;#}#if#(#getTypeValue#(#)#==#null#)#{#throw#new#BuildException#(#"Required attribute TypeValue not specified"#)#;#}#// Default the viewpath to basedir if it is not specified#if#(#getViewPath#(#)#==#null#)#{#setViewPath#(#aProj#.#getBaseDir#(#)#.#getPath#(#)#)#;#}#// build the command line from what we got. the format is#// cleartool mkattr [options...] [viewpath ...]#// as specified in the CLEARTOOL help#commandLine#.#setExecutable#(#getClearToolCommand#(#)#)#;#commandLine#.#createArgument#(#)#.#setValue#(#COMMAND_MKATTR#)#;#checkOptions#(#commandLine#)#;#if#(#!#getFailOnErr#(#)#)#{#getProject#(#)#.#log#(#"Ignoring any errors that occur for: "#+#getViewPathBasename#(#)#,#Project#.#MSG_VERBOSE#)#;#}#// For debugging#// System.out.println(commandLine.toString());#result#=#run#(#commandLine#)#;#if#(#Execute#.#isFailure#(#result#)#&&#getFailOnErr#(#)#)#{#String#msg#=#"Failed executing: "#+#commandLine#.#toString#(#)#;#throw#new#BuildException#(#msg#,#getLocation#(#)#)#;#}#}##void#checkOptions#(#Commandline#cmd#)#{#if#(#getReplace#(#)#)#{#// -replace#cmd#.#createArgument#(#)#.#setValue#(#FLAG_REPLACE#)#;#}#if#(#getRecurse#(#)#)#{#// -recurse#cmd#.#createArgument#(#)#.#setValue#(#FLAG_RECURSE#)#;#}#if#(#getVersion#(#)#!=#null#)#{#// -version#getVersionCommand#(#cmd#)#;#}#if#(#getComment#(#)#!=#null#)#{#// -c#getCommentCommand#(#cmd#)#;#}#else#{#if#(#getCommentFile#(#)#!=#null#)#{#// -cfile#getCommentFileCommand#(#cmd#)#;#}#else#{#cmd#.#createArgument#(#)#.#setValue#(#FLAG_NOCOMMENT#)#;#}#}#if#(#getTypeName#(#)#!=#null#)#{#// type#getTypeCommand#(#cmd#)#;#}#if#(#getTypeValue#(#)#!=#null#)#{#// type value#getTypeValueCommand#(#cmd#)#;#}#// viewpath#cmd#.#createArgument#(#)#.#setValue#(#getViewPath#(#)#)#;#}##void#setReplace#(#boolean#replace#)#{#mReplace#=#replace#;#}##boolean#getReplace#(#)#{#return#mReplace#;#}##void#setRecurse#(#boolean#recurse#)#{#mRecurse#=#recurse#;#}##boolean#getRecurse#(#)#{#return#mRecurse#;#}##void#setVersion#(#String#version#)#{#mVersion#=#version#;#}##String#getVersion#(#)#{#return#mVersion#;#}##void#setComment#(#String#comment#)#{#mComment#=#comment#;#}##String#getComment#(#)#{#return#mComment#;#}##void#setCommentFile#(#String#cfile#)#{#mCfile#=#cfile#;#}##String#getCommentFile#(#)#{#return#mCfile#;#}##void#setTypeName#(#String#tn#)#{#mTypeName#=#tn#;#}##String#getTypeName#(#)#{#return#mTypeName#;#}##void#setTypeValue#(#String#tv#)#{#mTypeValue#=#tv#;#}##String#getTypeValue#(#)#{#return#mTypeValue#;#}##void#getVersionCommand#(#Commandline#cmd#)#{#if#(#getVersion#(#)#!=#null#)#{#/* Had to make two separate commands here because if a space is
               inserted between the flag and the value, it is treated as a
               Windows filename with a space and it is enclosed in double
               quotes ("). This breaks clearcase.
            */#cmd#.#createArgument#(#)#.#setValue#(#FLAG_VERSION#)#;#cmd#.#createArgument#(#)#.#setValue#(#getVersion#(#)#)#;#}#}##void#getCommentCommand#(#Commandline#cmd#)#{#if#(#getComment#(#)#!=#null#)#{#/* Had to make two separate commands here because if a space is
               inserted between the flag and the value, it is treated as a
               Windows filename with a space and it is enclosed in double
               quotes ("). This breaks clearcase.
            */#cmd#.#createArgument#(#)#.#setValue#(#FLAG_COMMENT#)#;#cmd#.#createArgument#(#)#.#setValue#(#getComment#(#)#)#;#}#}##void#getCommentFileCommand#(#Commandline#cmd#)#{#if#(#getCommentFile#(#)#!=#null#)#{#/* Had to make two separate commands here because if a space is
               inserted between the flag and the value, it is treated as a
               Windows filename with a space and it is enclosed in double
               quotes ("). This breaks clearcase.
            */#cmd#.#createArgument#(#)#.#setValue#(#FLAG_COMMENTFILE#)#;#cmd#.#createArgument#(#)#.#setValue#(#getCommentFile#(#)#)#;#}#}##void#getTypeCommand#(#Commandline#cmd#)#{#String#typenm#=#getTypeName#(#)#;#if#(#typenm#!=#null#)#{#cmd#.#createArgument#(#)#.#setValue#(#typenm#)#;#}#}##void#getTypeValueCommand#(#Commandline#cmd#)#{#String#typevl#=#getTypeValue#(#)#;#if#(#typevl#!=#null#)#{#if#(#Os#.#isFamily#(#"windows"#)#)#{#typevl#=#"\\\""#+#typevl#+#"\\\""#;#// Windows quoting of the value#}#else#{#typevl#=#"\""#+#typevl#+#"\""#;#}#cmd#.#createArgument#(#)#.#setValue#(#typevl#)#;#}#}##