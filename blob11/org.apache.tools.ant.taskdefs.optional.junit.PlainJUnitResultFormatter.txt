void#setOutput#(#OutputStream#out#)#{#this#.#out#=#out#;#}##void#setSystemOutput#(#String#out#)#{#systemOutput#=#out#;#}##void#setSystemError#(#String#err#)#{#systemError#=#err#;#}##void#startTestSuite#(#JUnitTest#suite#)#throws#BuildException#{#if#(#out#==#null#)#{#return#;#// Quick return - no output do nothing.#}#StringBuffer#sb#=#new#StringBuffer#(#"Testsuite: "#)#;#sb#.#append#(#suite#.#getName#(#)#)#;#sb#.#append#(#StringUtils#.#LINE_SEP#)#;#try#{#out#.#write#(#sb#.#toString#(#)#.#getBytes#(#)#)#;#out#.#flush#(#)#;#}#catch#(#IOException#ex#)#{#throw#new#BuildException#(#"Unable to write output"#,#ex#)#;#}#}##void#endTestSuite#(#JUnitTest#suite#)#throws#BuildException#{#StringBuffer#sb#=#new#StringBuffer#(#"Tests run: "#)#;#sb#.#append#(#suite#.#runCount#(#)#)#;#sb#.#append#(#", Failures: "#)#;#sb#.#append#(#suite#.#failureCount#(#)#)#;#sb#.#append#(#", Errors: "#)#;#sb#.#append#(#suite#.#errorCount#(#)#)#;#sb#.#append#(#", Time elapsed: "#)#;#sb#.#append#(#nf#.#format#(#suite#.#getRunTime#(#)#/#ONE_SECOND#)#)#;#sb#.#append#(#" sec"#)#;#sb#.#append#(#StringUtils#.#LINE_SEP#)#;#// append the err and output streams to the log#if#(#systemOutput#!=#null#&&#systemOutput#.#length#(#)#>#0#)#{#sb#.#append#(#"------------- Standard Output ---------------"#)#.#append#(#StringUtils#.#LINE_SEP#)#.#append#(#systemOutput#)#.#append#(#"------------- ---------------- ---------------"#)#.#append#(#StringUtils#.#LINE_SEP#)#;#}#if#(#systemError#!=#null#&&#systemError#.#length#(#)#>#0#)#{#sb#.#append#(#"------------- Standard Error -----------------"#)#.#append#(#StringUtils#.#LINE_SEP#)#.#append#(#systemError#)#.#append#(#"------------- ---------------- ---------------"#)#.#append#(#StringUtils#.#LINE_SEP#)#;#}#sb#.#append#(#StringUtils#.#LINE_SEP#)#;#if#(#out#!=#null#)#{#try#{#out#.#write#(#sb#.#toString#(#)#.#getBytes#(#)#)#;#wri#.#close#(#)#;#out#.#write#(#inner#.#toString#(#)#.#getBytes#(#)#)#;#out#.#flush#(#)#;#}#catch#(#IOException#ioex#)#{#throw#new#BuildException#(#"Unable to write output"#,#ioex#)#;#}#finally#{#if#(#out#!=#System#.#out#&&#out#!=#System#.#err#)#{#FileUtils#.#close#(#out#)#;#}#}#}#}##void#startTest#(#Test#t#)#{#testStarts#.#put#(#t#,#new#Long#(#System#.#currentTimeMillis#(#)#)#)#;#failed#.#put#(#t#,#Boolean#.#FALSE#)#;#}##void#endTest#(#Test#test#)#{#if#(#Boolean#.#TRUE#.#equals#(#failed#.#get#(#test#)#)#)#{#return#;#}#synchronized#(#wri#)#{#try#{#wri#.#write#(#"Testcase: "#+#JUnitVersionHelper#.#getTestCaseName#(#test#)#)#;#Long#l#=#(#Long#)#testStarts#.#get#(#test#)#;#double#seconds#=#0#;#// can be null if an error occurred in setUp#if#(#l#!=#null#)#{#seconds#=#(#System#.#currentTimeMillis#(#)#-#l#.#longValue#(#)#)#/#ONE_SECOND#;#}#wri#.#write#(#" took "#+#nf#.#format#(#seconds#)#+#" sec"#)#;#wri#.#newLine#(#)#;#}#catch#(#IOException#ex#)#{#throw#new#BuildException#(#ex#)#;#}#}#}##void#addFailure#(#Test#test#,#Throwable#t#)#{#formatError#(#"\tFAILED"#,#test#,#t#)#;#}##void#addFailure#(#Test#test#,#AssertionFailedError#t#)#{#addFailure#(#test#,#(#Throwable#)#t#)#;#}##void#addError#(#Test#test#,#Throwable#t#)#{#formatError#(#"\tCaused an ERROR"#,#test#,#t#)#;#}##void#formatError#(#String#type#,#Test#test#,#Throwable#t#)#{#synchronized#(#wri#)#{#if#(#test#!=#null#)#{#endTest#(#test#)#;#failed#.#put#(#test#,#Boolean#.#TRUE#)#;#}#try#{#wri#.#write#(#type#)#;#wri#.#newLine#(#)#;#wri#.#write#(#String#.#valueOf#(#t#.#getMessage#(#)#)#)#;#wri#.#newLine#(#)#;#String#strace#=#JUnitTestRunner#.#getFilteredTrace#(#t#)#;#wri#.#write#(#strace#)#;#wri#.#newLine#(#)#;#}#catch#(#IOException#ex#)#{#throw#new#BuildException#(#ex#)#;#}#}#}##