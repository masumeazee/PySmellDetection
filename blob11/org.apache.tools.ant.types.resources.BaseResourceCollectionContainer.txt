void#setCache#(#boolean#b#)#{#cache#=#b#;#}##boolean#isCache#(#)#{#return#cache#;#}##void#clear#(#)#throws#BuildException#{#if#(#isReference#(#)#)#{#throw#noChildrenAllowed#(#)#;#}#rc#.#clear#(#)#;#FailFast#.#invalidate#(#this#)#;#coll#=#null#;#setChecked#(#false#)#;#}##void#add#(#ResourceCollection#c#)#throws#BuildException#{#if#(#isReference#(#)#)#{#throw#noChildrenAllowed#(#)#;#}#if#(#c#==#null#)#{#return#;#}#if#(#Project#.#getProject#(#c#)#==#null#)#{#Project#p#=#getProject#(#)#;#if#(#p#!=#null#)#{#p#.#setProjectReference#(#c#)#;#}#}#rc#.#add#(#c#)#;#FailFast#.#invalidate#(#this#)#;#coll#=#null#;#setChecked#(#false#)#;#}##void#addAll#(#Collection#c#)#throws#BuildException#{#if#(#isReference#(#)#)#{#throw#noChildrenAllowed#(#)#;#}#try#{#for#(#Iterator#i#=#c#.#iterator#(#)#;#i#.#hasNext#(#)#;#)#{#add#(#(#ResourceCollection#)#i#.#next#(#)#)#;#}#}#catch#(#ClassCastException#e#)#{#throw#new#BuildException#(#e#)#;#}#}##Iterator#iterator#(#)#{#if#(#isReference#(#)#)#{#return#(#(#BaseResourceCollectionContainer#)#getCheckedRef#(#)#)#.#iterator#(#)#;#}#dieOnCircularReference#(#)#;#return#new#FailFast#(#this#,#cacheCollection#(#)#.#iterator#(#)#)#;#}##int#size#(#)#{#if#(#isReference#(#)#)#{#return#(#(#BaseResourceCollectionContainer#)#getCheckedRef#(#)#)#.#size#(#)#;#}#dieOnCircularReference#(#)#;#return#cacheCollection#(#)#.#size#(#)#;#}##boolean#isFilesystemOnly#(#)#{#if#(#isReference#(#)#)#{#return#(#(#BaseResourceCollectionContainer#)#getCheckedRef#(#)#)#.#isFilesystemOnly#(#)#;#}#dieOnCircularReference#(#)#;#//first the easy way, if all children are filesystem-only, return true:#boolean#goEarly#=#true#;#for#(#Iterator#i#=#rc#.#iterator#(#)#;#goEarly#&&#i#.#hasNext#(#)#;#)#{#goEarly#=#(#(#ResourceCollection#)#i#.#next#(#)#)#.#isFilesystemOnly#(#)#;#}#if#(#goEarly#)#{#return#true#;#}#/* now check each Resource in case the child only
           lets through files from any children IT may have: */#for#(#Iterator#i#=#cacheCollection#(#)#.#iterator#(#)#;#i#.#hasNext#(#)#;#)#{#Resource#r#=#(#Resource#)#i#.#next#(#)#;#if#(#r#.#as#(#FileProvider#.#class#)#==#null#)#{#return#false#;#}#}#return#true#;#}##void#dieOnCircularReference#(#Stack#stk#,#Project#p#)#throws#BuildException#{#if#(#isChecked#(#)#)#{#return#;#}#if#(#isReference#(#)#)#{#super#.#dieOnCircularReference#(#stk#,#p#)#;#}#else#{#for#(#Iterator#i#=#rc#.#iterator#(#)#;#i#.#hasNext#(#)#;#)#{#Object#o#=#i#.#next#(#)#;#if#(#o#instanceof#DataType#)#{#pushAndInvokeCircularReferenceCheck#(#(#DataType#)#o#,#stk#,#p#)#;#}#}#setChecked#(#true#)#;#}#}##List#getResourceCollections#(#)#{#dieOnCircularReference#(#)#;#return#Collections#.#unmodifiableList#(#rc#)#;#}##Collection#getCollection#(#)#;##Object#clone#(#)#{#try#{#BaseResourceCollectionContainer#c#=#(#BaseResourceCollectionContainer#)#super#.#clone#(#)#;#c#.#rc#=#new#ArrayList#(#rc#)#;#c#.#coll#=#null#;#return#c#;#}#catch#(#CloneNotSupportedException#e#)#{#throw#new#BuildException#(#e#)#;#}#}##String#toString#(#)#{#if#(#isReference#(#)#)#{#return#getCheckedRef#(#)#.#toString#(#)#;#}#if#(#cacheCollection#(#)#.#size#(#)#==#0#)#{#return#""#;#}#StringBuffer#sb#=#new#StringBuffer#(#)#;#for#(#Iterator#i#=#coll#.#iterator#(#)#;#i#.#hasNext#(#)#;#)#{#if#(#sb#.#length#(#)#>#0#)#{#sb#.#append#(#File#.#pathSeparatorChar#)#;#}#sb#.#append#(#i#.#next#(#)#)#;#}#return#sb#.#toString#(#)#;#}##Collection#cacheCollection#(#)#{#if#(#coll#==#null#||#!#isCache#(#)#)#{#coll#=#getCollection#(#)#;#}#return#coll#;#}##