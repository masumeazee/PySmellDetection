FileUtils#newFileUtils#(#)#{#return#new#FileUtils#(#)#;#}##FileUtils#getFileUtils#(#)#{#return#PRIMARY_INSTANCE#;#}##URL#getFileURL#(#File#file#)#throws#MalformedURLException#{#return#new#URL#(#toURI#(#file#.#getAbsolutePath#(#)#)#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#)#throws#IOException#{#copyFile#(#new#File#(#sourceFile#)#,#new#File#(#destFile#)#,#null#,#false#,#false#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#,#FilterSetCollection#filters#)#throws#IOException#{#copyFile#(#new#File#(#sourceFile#)#,#new#File#(#destFile#)#,#filters#,#false#,#false#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#,#FilterSetCollection#filters#,#boolean#overwrite#)#throws#IOException#{#copyFile#(#new#File#(#sourceFile#)#,#new#File#(#destFile#)#,#filters#,#overwrite#,#false#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#,#FilterSetCollection#filters#,#boolean#overwrite#,#boolean#preserveLastModified#)#throws#IOException#{#copyFile#(#new#File#(#sourceFile#)#,#new#File#(#destFile#)#,#filters#,#overwrite#,#preserveLastModified#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#,#FilterSetCollection#filters#,#boolean#overwrite#,#boolean#preserveLastModified#,#String#encoding#)#throws#IOException#{#copyFile#(#new#File#(#sourceFile#)#,#new#File#(#destFile#)#,#filters#,#overwrite#,#preserveLastModified#,#encoding#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#,#FilterSetCollection#filters#,#Vector#filterChains#,#boolean#overwrite#,#boolean#preserveLastModified#,#String#encoding#,#Project#project#)#throws#IOException#{#copyFile#(#new#File#(#sourceFile#)#,#new#File#(#destFile#)#,#filters#,#filterChains#,#overwrite#,#preserveLastModified#,#encoding#,#project#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#,#FilterSetCollection#filters#,#Vector#filterChains#,#boolean#overwrite#,#boolean#preserveLastModified#,#String#inputEncoding#,#String#outputEncoding#,#Project#project#)#throws#IOException#{#copyFile#(#new#File#(#sourceFile#)#,#new#File#(#destFile#)#,#filters#,#filterChains#,#overwrite#,#preserveLastModified#,#inputEncoding#,#outputEncoding#,#project#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#)#throws#IOException#{#copyFile#(#sourceFile#,#destFile#,#null#,#false#,#false#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#,#FilterSetCollection#filters#)#throws#IOException#{#copyFile#(#sourceFile#,#destFile#,#filters#,#false#,#false#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#,#FilterSetCollection#filters#,#boolean#overwrite#)#throws#IOException#{#copyFile#(#sourceFile#,#destFile#,#filters#,#overwrite#,#false#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#,#FilterSetCollection#filters#,#boolean#overwrite#,#boolean#preserveLastModified#)#throws#IOException#{#copyFile#(#sourceFile#,#destFile#,#filters#,#overwrite#,#preserveLastModified#,#null#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#,#FilterSetCollection#filters#,#boolean#overwrite#,#boolean#preserveLastModified#,#String#encoding#)#throws#IOException#{#copyFile#(#sourceFile#,#destFile#,#filters#,#null#,#overwrite#,#preserveLastModified#,#encoding#,#null#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#,#FilterSetCollection#filters#,#Vector#filterChains#,#boolean#overwrite#,#boolean#preserveLastModified#,#String#encoding#,#Project#project#)#throws#IOException#{#copyFile#(#sourceFile#,#destFile#,#filters#,#filterChains#,#overwrite#,#preserveLastModified#,#encoding#,#encoding#,#project#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#,#FilterSetCollection#filters#,#Vector#filterChains#,#boolean#overwrite#,#boolean#preserveLastModified#,#String#inputEncoding#,#String#outputEncoding#,#Project#project#)#throws#IOException#{#copyFile#(#sourceFile#,#destFile#,#filters#,#filterChains#,#overwrite#,#preserveLastModified#,#false#,#inputEncoding#,#outputEncoding#,#project#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#,#FilterSetCollection#filters#,#Vector#filterChains#,#boolean#overwrite#,#boolean#preserveLastModified#,#boolean#append#,#String#inputEncoding#,#String#outputEncoding#,#Project#project#)#throws#IOException#{#ResourceUtils#.#copyResource#(#new#FileResource#(#sourceFile#)#,#new#FileResource#(#destFile#)#,#filters#,#filterChains#,#overwrite#,#preserveLastModified#,#append#,#inputEncoding#,#outputEncoding#,#project#)#;#}##void#setFileLastModified#(#File#file#,#long#time#)#{#ResourceUtils#.#setLastModified#(#new#FileResource#(#file#)#,#time#)#;#}##File#resolveFile#(#File#file#,#String#filename#)#{#if#(#!#isAbsolutePath#(#filename#)#)#{#char#sep#=#File#.#separatorChar#;#filename#=#filename#.#replace#(#'/'#,#sep#)#.#replace#(#'\\'#,#sep#)#;#if#(#isContextRelativePath#(#filename#)#)#{#file#=#null#;#// on cygwin, our current directory can be a UNC;#// assume user.dir is absolute or all hell breaks loose...#String#udir#=#System#.#getProperty#(#"user.dir"#)#;#if#(#filename#.#charAt#(#0#)#==#sep#&&#udir#.#charAt#(#0#)#==#sep#)#{#filename#=#dissect#(#udir#)#[#0#]#+#filename#.#substring#(#1#)#;#}#}#filename#=#new#File#(#file#,#filename#)#.#getAbsolutePath#(#)#;#}#return#normalize#(#filename#)#;#}##boolean#isContextRelativePath#(#String#filename#)#{#if#(#!#(#ON_DOS#||#ON_NETWARE#)#||#filename#.#length#(#)#==#0#)#{#return#false#;#}#char#sep#=#File#.#separatorChar#;#filename#=#filename#.#replace#(#'/'#,#sep#)#.#replace#(#'\\'#,#sep#)#;#char#c#=#filename#.#charAt#(#0#)#;#int#len#=#filename#.#length#(#)#;#return#(#c#==#sep#&&#(#len#==#1#||#filename#.#charAt#(#1#)#!=#sep#)#)#||#(#Character#.#isLetter#(#c#)#&&#len#>#1#&&#filename#.#indexOf#(#':'#)#==#1#&&#(#len#==#2#||#filename#.#charAt#(#2#)#!=#sep#)#)#;#}##boolean#isAbsolutePath#(#String#filename#)#{#int#len#=#filename#.#length#(#)#;#if#(#len#==#0#)#{#return#false#;#}#char#sep#=#File#.#separatorChar#;#filename#=#filename#.#replace#(#'/'#,#sep#)#.#replace#(#'\\'#,#sep#)#;#char#c#=#filename#.#charAt#(#0#)#;#if#(#!#(#ON_DOS#||#ON_NETWARE#)#)#{#return#(#c#==#sep#)#;#}#if#(#c#==#sep#)#{#// CheckStyle:MagicNumber OFF#if#(#!#(#ON_DOS#&&#len#>#4#&&#filename#.#charAt#(#1#)#==#sep#)#)#{#return#false#;#}#// CheckStyle:MagicNumber ON#int#nextsep#=#filename#.#indexOf#(#sep#,#2#)#;#return#nextsep#>#2#&&#nextsep#+#1#<#len#;#}#int#colon#=#filename#.#indexOf#(#':'#)#;#return#(#Character#.#isLetter#(#c#)#&&#colon#==#1#&&#filename#.#length#(#)#>#2#&&#filename#.#charAt#(#2#)#==#sep#)#||#(#ON_NETWARE#&&#colon#>#0#)#;#}##String#translatePath#(#String#toProcess#)#{#if#(#toProcess#==#null#||#toProcess#.#length#(#)#==#0#)#{#return#""#;#}#StringBuffer#path#=#new#StringBuffer#(#toProcess#.#length#(#)#+#EXPAND_SPACE#)#;#PathTokenizer#tokenizer#=#new#PathTokenizer#(#toProcess#)#;#while#(#tokenizer#.#hasMoreTokens#(#)#)#{#String#pathComponent#=#tokenizer#.#nextToken#(#)#;#pathComponent#=#pathComponent#.#replace#(#'/'#,#File#.#separatorChar#)#;#pathComponent#=#pathComponent#.#replace#(#'\\'#,#File#.#separatorChar#)#;#if#(#path#.#length#(#)#!=#0#)#{#path#.#append#(#File#.#pathSeparatorChar#)#;#}#path#.#append#(#pathComponent#)#;#}#return#path#.#toString#(#)#;#}##File#normalize#(#final#String#path#)#{#Stack#s#=#new#Stack#(#)#;#String#[#]#dissect#=#dissect#(#path#)#;#s#.#push#(#dissect#[#0#]#)#;#StringTokenizer#tok#=#new#StringTokenizer#(#dissect#[#1#]#,#File#.#separator#)#;#while#(#tok#.#hasMoreTokens#(#)#)#{#String#thisToken#=#tok#.#nextToken#(#)#;#if#(#"."#.#equals#(#thisToken#)#)#{#continue#;#}#if#(#".."#.#equals#(#thisToken#)#)#{#if#(#s#.#size#(#)#<#2#)#{#// Cannot resolve it, so skip it.#return#new#File#(#path#)#;#}#s#.#pop#(#)#;#}#else#{#// plain component#s#.#push#(#thisToken#)#;#}#}#StringBuffer#sb#=#new#StringBuffer#(#)#;#for#(#int#i#=#0#;#i#<#s#.#size#(#)#;#i#++#)#{#if#(#i#>#1#)#{#// not before the filesystem root and not after it, since root#// already contains one#sb#.#append#(#File#.#separatorChar#)#;#}#sb#.#append#(#s#.#elementAt#(#i#)#)#;#}#return#new#File#(#sb#.#toString#(#)#)#;#}##String#[#]#dissect#(#String#path#)#{#char#sep#=#File#.#separatorChar#;#path#=#path#.#replace#(#'/'#,#sep#)#.#replace#(#'\\'#,#sep#)#;#// make sure we are dealing with an absolute path#if#(#!#isAbsolutePath#(#path#)#)#{#throw#new#BuildException#(#path#+#" is not an absolute path"#)#;#}#String#root#=#null#;#int#colon#=#path#.#indexOf#(#':'#)#;#if#(#colon#>#0#&&#(#ON_DOS#||#ON_NETWARE#)#)#{#int#next#=#colon#+#1#;#root#=#path#.#substring#(#0#,#next#)#;#char#[#]#ca#=#path#.#toCharArray#(#)#;#root#+=#sep#;#//remove the initial separator; the root has it.#next#=#(#ca#[#next#]#==#sep#)#?#next#+#1#:#next#;#StringBuffer#sbPath#=#new#StringBuffer#(#)#;#// Eliminate consecutive slashes after the drive spec:#for#(#int#i#=#next#;#i#<#ca#.#length#;#i#++#)#{#if#(#ca#[#i#]#!=#sep#||#ca#[#i#-#1#]#!=#sep#)#{#sbPath#.#append#(#ca#[#i#]#)#;#}#}#path#=#sbPath#.#toString#(#)#;#}#else#if#(#path#.#length#(#)#>#1#&&#path#.#charAt#(#1#)#==#sep#)#{#// UNC drive#int#nextsep#=#path#.#indexOf#(#sep#,#2#)#;#nextsep#=#path#.#indexOf#(#sep#,#nextsep#+#1#)#;#root#=#(#nextsep#>#2#)#?#path#.#substring#(#0#,#nextsep#+#1#)#:#path#;#path#=#path#.#substring#(#root#.#length#(#)#)#;#}#else#{#root#=#File#.#separator#;#path#=#path#.#substring#(#1#)#;#}#return#new#String#[#]#{#root#,#path#}#;#}##String#toVMSPath#(#File#f#)#{#// format: "DEVICE:[DIR.SUBDIR]FILE"#String#osPath#;#String#path#=#normalize#(#f#.#getAbsolutePath#(#)#)#.#getPath#(#)#;#String#name#=#f#.#getName#(#)#;#boolean#isAbsolute#=#path#.#charAt#(#0#)#==#File#.#separatorChar#;#// treat directories specified using .DIR syntax as files#// CheckStyle:MagicNumber OFF#boolean#isDirectory#=#f#.#isDirectory#(#)#&&#!#name#.#regionMatches#(#true#,#name#.#length#(#)#-#4#,#".DIR"#,#0#,#4#)#;#// CheckStyle:MagicNumber ON#String#device#=#null#;#StringBuffer#directory#=#null#;#String#file#=#null#;#int#index#=#0#;#if#(#isAbsolute#)#{#index#=#path#.#indexOf#(#File#.#separatorChar#,#1#)#;#if#(#index#==#-#1#)#{#return#path#.#substring#(#1#)#+#":[000000]"#;#}#device#=#path#.#substring#(#1#,#index#++#)#;#}#if#(#isDirectory#)#{#directory#=#new#StringBuffer#(#path#.#substring#(#index#)#.#replace#(#File#.#separatorChar#,#'.'#)#)#;#}#else#{#int#dirEnd#=#path#.#lastIndexOf#(#File#.#separatorChar#,#path#.#length#(#)#)#;#if#(#dirEnd#==#-#1#||#dirEnd#<#index#)#{#file#=#path#.#substring#(#index#)#;#}#else#{#directory#=#new#StringBuffer#(#path#.#substring#(#index#,#dirEnd#)#.#replace#(#File#.#separatorChar#,#'.'#)#)#;#index#=#dirEnd#+#1#;#if#(#path#.#length#(#)#>#index#)#{#file#=#path#.#substring#(#index#)#;#}#}#}#if#(#!#isAbsolute#&&#directory#!=#null#)#{#directory#.#insert#(#0#,#'.'#)#;#}#osPath#=#(#(#device#!=#null#)#?#device#+#":"#:#""#)#+#(#(#directory#!=#null#)#?#"["#+#directory#+#"]"#:#""#)#+#(#(#file#!=#null#)#?#file#:#""#)#;#return#osPath#;#}##File#createTempFile#(#String#prefix#,#String#suffix#,#File#parentDir#)#{#return#createTempFile#(#prefix#,#suffix#,#parentDir#,#false#,#false#)#;#}##File#createTempFile#(#String#prefix#,#String#suffix#,#File#parentDir#,#boolean#deleteOnExit#,#boolean#createFile#)#{#File#result#=#null#;#String#parent#=#(#parentDir#==#null#)#?#System#.#getProperty#(#"java.io.tmpdir"#)#:#parentDir#.#getPath#(#)#;#if#(#createFile#)#{#try#{#result#=#File#.#createTempFile#(#prefix#,#suffix#,#new#File#(#parent#)#)#;#}#catch#(#IOException#e#)#{#throw#new#BuildException#(#"Could not create tempfile in "#+#parent#,#e#)#;#}#}#else#{#DecimalFormat#fmt#=#new#DecimalFormat#(#"#####"#)#;#synchronized#(#rand#)#{#do#{#result#=#new#File#(#parent#,#prefix#+#fmt#.#format#(#rand#.#nextInt#(#Integer#.#MAX_VALUE#)#)#+#suffix#)#;#}#while#(#result#.#exists#(#)#)#;#}#}#if#(#deleteOnExit#)#{#result#.#deleteOnExit#(#)#;#}#return#result#;#}##File#createTempFile#(#String#prefix#,#String#suffix#,#File#parentDir#,#boolean#deleteOnExit#)#{#return#createTempFile#(#prefix#,#suffix#,#parentDir#,#deleteOnExit#,#false#)#;#}##boolean#contentEquals#(#File#f1#,#File#f2#)#throws#IOException#{#return#contentEquals#(#f1#,#f2#,#false#)#;#}##boolean#contentEquals#(#File#f1#,#File#f2#,#boolean#textfile#)#throws#IOException#{#return#ResourceUtils#.#contentEquals#(#new#FileResource#(#f1#)#,#new#FileResource#(#f2#)#,#textfile#)#;#}##File#getParentFile#(#File#f#)#{#return#(#f#==#null#)#?#null#:#f#.#getParentFile#(#)#;#}##String#readFully#(#Reader#rdr#)#throws#IOException#{#return#readFully#(#rdr#,#BUF_SIZE#)#;#}##String#readFully#(#Reader#rdr#,#int#bufferSize#)#throws#IOException#{#if#(#bufferSize#<=#0#)#{#throw#new#IllegalArgumentException#(#"Buffer size must be greater "#+#"than 0"#)#;#}#final#char#[#]#buffer#=#new#char#[#bufferSize#]#;#int#bufferLength#=#0#;#StringBuffer#textBuffer#=#null#;#while#(#bufferLength#!=#-#1#)#{#bufferLength#=#rdr#.#read#(#buffer#)#;#if#(#bufferLength#>#0#)#{#textBuffer#=#(#textBuffer#==#null#)#?#new#StringBuffer#(#)#:#textBuffer#;#textBuffer#.#append#(#new#String#(#buffer#,#0#,#bufferLength#)#)#;#}#}#return#(#textBuffer#==#null#)#?#null#:#textBuffer#.#toString#(#)#;#}##String#safeReadFully#(#Reader#reader#)#throws#IOException#{#String#ret#=#readFully#(#reader#)#;#return#ret#==#null#?#""#:#ret#;#}##boolean#createNewFile#(#File#f#)#throws#IOException#{#return#f#.#createNewFile#(#)#;#}##boolean#createNewFile#(#File#f#,#boolean#mkdirs#)#throws#IOException#{#File#parent#=#f#.#getParentFile#(#)#;#if#(#mkdirs#&&#!#(#parent#.#exists#(#)#)#)#{#parent#.#mkdirs#(#)#;#}#return#f#.#createNewFile#(#)#;#}##boolean#isSymbolicLink#(#File#parent#,#String#name#)#throws#IOException#{#SymbolicLinkUtils#u#=#SymbolicLinkUtils#.#getSymbolicLinkUtils#(#)#;#if#(#parent#==#null#)#{#return#u#.#isSymbolicLink#(#name#)#;#}#return#u#.#isSymbolicLink#(#parent#,#name#)#;#}##String#removeLeadingPath#(#File#leading#,#File#path#)#{#String#l#=#normalize#(#leading#.#getAbsolutePath#(#)#)#.#getAbsolutePath#(#)#;#String#p#=#normalize#(#path#.#getAbsolutePath#(#)#)#.#getAbsolutePath#(#)#;#if#(#l#.#equals#(#p#)#)#{#return#""#;#}#// ensure that l ends with a /#// so we never think /foo was a parent directory of /foobar#if#(#!#l#.#endsWith#(#File#.#separator#)#)#{#l#+=#File#.#separator#;#}#return#(#p#.#startsWith#(#l#)#)#?#p#.#substring#(#l#.#length#(#)#)#:#p#;#}##boolean#isLeadingPath#(#File#leading#,#File#path#)#{#String#l#=#normalize#(#leading#.#getAbsolutePath#(#)#)#.#getAbsolutePath#(#)#;#String#p#=#normalize#(#path#.#getAbsolutePath#(#)#)#.#getAbsolutePath#(#)#;#if#(#l#.#equals#(#p#)#)#{#return#true#;#}#// ensure that l ends with a /#// so we never think /foo was a parent directory of /foobar#if#(#!#l#.#endsWith#(#File#.#separator#)#)#{#l#+=#File#.#separator#;#}#return#p#.#startsWith#(#l#)#;#}##String#toURI#(#String#path#)#{#return#new#File#(#path#)#.#getAbsoluteFile#(#)#.#toURI#(#)#.#toASCIIString#(#)#;#}##String#fromURI#(#String#uri#)#{#synchronized#(#cacheFromUriLock#)#{#if#(#uri#.#equals#(#cacheFromUriRequest#)#)#{#return#cacheFromUriResponse#;#}#String#path#=#Locator#.#fromURI#(#uri#)#;#String#ret#=#isAbsolutePath#(#path#)#?#normalize#(#path#)#.#getAbsolutePath#(#)#:#path#;#cacheFromUriRequest#=#uri#;#cacheFromUriResponse#=#ret#;#return#ret#;#}#}##boolean#fileNameEquals#(#File#f1#,#File#f2#)#{#return#normalize#(#f1#.#getAbsolutePath#(#)#)#.#getAbsolutePath#(#)#.#equals#(#normalize#(#f2#.#getAbsolutePath#(#)#)#.#getAbsolutePath#(#)#)#;#}##void#rename#(#File#from#,#File#to#)#throws#IOException#{#from#=#normalize#(#from#.#getAbsolutePath#(#)#)#.#getCanonicalFile#(#)#;#to#=#normalize#(#to#.#getAbsolutePath#(#)#)#;#if#(#!#from#.#exists#(#)#)#{#System#.#err#.#println#(#"Cannot rename nonexistent file "#+#from#)#;#return#;#}#if#(#from#.#equals#(#to#)#)#{#System#.#err#.#println#(#"Rename of "#+#from#+#" to "#+#to#+#" is a no-op."#)#;#return#;#}#if#(#to#.#exists#(#)#&&#!#(#from#.#equals#(#to#.#getCanonicalFile#(#)#)#||#tryHardToDelete#(#to#)#)#)#{#throw#new#IOException#(#"Failed to delete "#+#to#+#" while trying to rename "#+#from#)#;#}#File#parent#=#to#.#getParentFile#(#)#;#if#(#parent#!=#null#&&#!#parent#.#exists#(#)#&&#!#parent#.#mkdirs#(#)#)#{#throw#new#IOException#(#"Failed to create directory "#+#parent#+#" while trying to rename "#+#from#)#;#}#if#(#!#from#.#renameTo#(#to#)#)#{#copyFile#(#from#,#to#)#;#if#(#!#tryHardToDelete#(#from#)#)#{#throw#new#IOException#(#"Failed to delete "#+#from#+#" while trying to rename it."#)#;#}#}#}##long#getFileTimestampGranularity#(#)#{#if#(#ON_WIN9X#)#{#return#FAT_FILE_TIMESTAMP_GRANULARITY#;#}#if#(#ON_WINDOWS#)#{#return#NTFS_FILE_TIMESTAMP_GRANULARITY#;#}#if#(#ON_DOS#)#{#return#FAT_FILE_TIMESTAMP_GRANULARITY#;#}#return#UNIX_FILE_TIMESTAMP_GRANULARITY#;#}##boolean#hasErrorInCase#(#File#localFile#)#{#localFile#=#normalize#(#localFile#.#getAbsolutePath#(#)#)#;#if#(#!#localFile#.#exists#(#)#)#{#return#false#;#}#final#String#localFileName#=#localFile#.#getName#(#)#;#FilenameFilter#ff#=#new#FilenameFilter#(#)#{#public#boolean#accept#(#File#dir#,#String#name#)#{#return#name#.#equalsIgnoreCase#(#localFileName#)#&&#(#!#name#.#equals#(#localFileName#)#)#;#}#}#;#String#[#]#names#=#localFile#.#getParentFile#(#)#.#list#(#ff#)#;#return#names#!=#null#&&#names#.#length#==#1#;#}##boolean#accept#(#File#dir#,#String#name#)#{#return#name#.#equalsIgnoreCase#(#localFileName#)#&&#(#!#name#.#equals#(#localFileName#)#)#;#}##boolean#isUpToDate#(#File#source#,#File#dest#,#long#granularity#)#{#//do a check for the destination file existing#if#(#!#dest#.#exists#(#)#)#{#//if it does not, then the file is not up to date.#return#false#;#}#long#sourceTime#=#source#.#lastModified#(#)#;#long#destTime#=#dest#.#lastModified#(#)#;#return#isUpToDate#(#sourceTime#,#destTime#,#granularity#)#;#}##boolean#isUpToDate#(#File#source#,#File#dest#)#{#return#isUpToDate#(#source#,#dest#,#getFileTimestampGranularity#(#)#)#;#}##boolean#isUpToDate#(#long#sourceTime#,#long#destTime#,#long#granularity#)#{#return#destTime#!=#-#1#&&#destTime#>=#sourceTime#+#granularity#;#}##boolean#isUpToDate#(#long#sourceTime#,#long#destTime#)#{#return#isUpToDate#(#sourceTime#,#destTime#,#getFileTimestampGranularity#(#)#)#;#}##void#close#(#Writer#device#)#{#if#(#null#!=#device#)#{#try#{#device#.#close#(#)#;#}#catch#(#IOException#e#)#{#//ignore#}#}#}##void#close#(#Reader#device#)#{#if#(#null#!=#device#)#{#try#{#device#.#close#(#)#;#}#catch#(#IOException#e#)#{#//ignore#}#}#}##void#close#(#OutputStream#device#)#{#if#(#null#!=#device#)#{#try#{#device#.#close#(#)#;#}#catch#(#IOException#e#)#{#//ignore#}#}#}##void#close#(#InputStream#device#)#{#if#(#null#!=#device#)#{#try#{#device#.#close#(#)#;#}#catch#(#IOException#e#)#{#//ignore#}#}#}##void#close#(#Channel#device#)#{#if#(#null#!=#device#)#{#try#{#device#.#close#(#)#;#}#catch#(#IOException#e#)#{#//ignore#}#}#}##void#close#(#URLConnection#conn#)#{#if#(#conn#!=#null#)#{#try#{#if#(#conn#instanceof#JarURLConnection#)#{#JarURLConnection#juc#=#(#JarURLConnection#)#conn#;#JarFile#jf#=#juc#.#getJarFile#(#)#;#jf#.#close#(#)#;#jf#=#null#;#}#else#if#(#conn#instanceof#HttpURLConnection#)#{#(#(#HttpURLConnection#)#conn#)#.#disconnect#(#)#;#}#}#catch#(#IOException#exc#)#{#//ignore#}#}#}##void#delete#(#File#file#)#{#if#(#file#!=#null#)#{#file#.#delete#(#)#;#}#}##boolean#tryHardToDelete#(#File#f#)#{#if#(#!#f#.#delete#(#)#)#{#if#(#ON_WINDOWS#)#{#System#.#gc#(#)#;#}#try#{#Thread#.#sleep#(#DELETE_RETRY_SLEEP_MILLIS#)#;#}#catch#(#InterruptedException#ex#)#{#// Ignore Exception#}#return#f#.#delete#(#)#;#}#return#true#;#}##String#getRelativePath#(#File#fromFile#,#File#toFile#)#throws#Exception#{#String#fromPath#=#fromFile#.#getCanonicalPath#(#)#;#String#toPath#=#toFile#.#getCanonicalPath#(#)#;#// build the path stack info to compare#String#[#]#fromPathStack#=#getPathStack#(#fromPath#)#;#String#[#]#toPathStack#=#getPathStack#(#toPath#)#;#if#(#0#<#toPathStack#.#length#&&#0#<#fromPathStack#.#length#)#{#if#(#!#fromPathStack#[#0#]#.#equals#(#toPathStack#[#0#]#)#)#{#// not the same device (would be "" on Linux/Unix)#return#getPath#(#Arrays#.#asList#(#toPathStack#)#)#;#}#}#else#{#// no comparison possible#return#getPath#(#Arrays#.#asList#(#toPathStack#)#)#;#}#int#minLength#=#Math#.#min#(#fromPathStack#.#length#,#toPathStack#.#length#)#;#int#same#=#1#;#// Used outside the for loop#// get index of parts which are equal#for#(#;#same#<#minLength#&&#fromPathStack#[#same#]#.#equals#(#toPathStack#[#same#]#)#;#same#++#)#{#// Do nothing#}#List#relativePathStack#=#new#ArrayList#(#)#;#// if "from" part is longer, fill it up with ".."#// to reach path which is equal to both paths#for#(#int#i#=#same#;#i#<#fromPathStack#.#length#;#i#++#)#{#relativePathStack#.#add#(#".."#)#;#}#// fill it up path with parts which were not equal#for#(#int#i#=#same#;#i#<#toPathStack#.#length#;#i#++#)#{#relativePathStack#.#add#(#toPathStack#[#i#]#)#;#}#return#getPath#(#relativePathStack#)#;#}##String#[#]#getPathStack#(#String#path#)#{#String#normalizedPath#=#path#.#replace#(#File#.#separatorChar#,#'/'#)#;#return#normalizedPath#.#split#(#"/"#)#;#}##String#getPath#(#List#pathStack#)#{#// can safely use '/' because Windows understands '/' as separator#return#getPath#(#pathStack#,#'/'#)#;#}##String#getPath#(#final#List#pathStack#,#final#char#separatorChar#)#{#final#StringBuffer#buffer#=#new#StringBuffer#(#)#;#final#Iterator#iter#=#pathStack#.#iterator#(#)#;#if#(#iter#.#hasNext#(#)#)#{#buffer#.#append#(#iter#.#next#(#)#)#;#}#while#(#iter#.#hasNext#(#)#)#{#buffer#.#append#(#separatorChar#)#;#buffer#.#append#(#iter#.#next#(#)#)#;#}#return#buffer#.#toString#(#)#;#}##String#getDefaultEncoding#(#)#{#InputStreamReader#is#=#new#InputStreamReader#(#new#InputStream#(#)#{#public#int#read#(#)#{#return#-#1#;#}#}#)#;#try#{#return#is#.#getEncoding#(#)#;#}#finally#{#close#(#is#)#;#}#}##int#read#(#)#{#return#-#1#;#}##