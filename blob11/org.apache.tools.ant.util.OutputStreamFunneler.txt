void#flush#(#)#throws#IOException#{#synchronized#(#OutputStreamFunneler#.#this#)#{#dieIfClosed#(#)#;#out#.#flush#(#)#;#}#}##void#write#(#int#b#)#throws#IOException#{#synchronized#(#OutputStreamFunneler#.#this#)#{#dieIfClosed#(#)#;#out#.#write#(#b#)#;#}#}##void#write#(#byte#[#]#b#)#throws#IOException#{#synchronized#(#OutputStreamFunneler#.#this#)#{#dieIfClosed#(#)#;#out#.#write#(#b#)#;#}#}##void#write#(#byte#[#]#b#,#int#off#,#int#len#)#throws#IOException#{#synchronized#(#OutputStreamFunneler#.#this#)#{#dieIfClosed#(#)#;#out#.#write#(#b#,#off#,#len#)#;#}#}##void#close#(#)#throws#IOException#{#release#(#this#)#;#}##void#setTimeout#(#long#timeoutMillis#)#{#this#.#timeoutMillis#=#timeoutMillis#;#}##OutputStream#getFunnelInstance#(#)#throws#IOException#{#dieIfClosed#(#)#;#try#{#return#new#Funnel#(#)#;#}#finally#{#notifyAll#(#)#;#}#}##void#release#(#Funnel#funnel#)#throws#IOException#{#//ignore release of an already-closed funnel#if#(#!#funnel#.#closed#)#{#try#{#if#(#timeoutMillis#>#0#)#{#try#{#wait#(#timeoutMillis#)#;#}#catch#(#InterruptedException#eyeEx#)#{#//ignore#}#}#if#(#--#count#==#0#)#{#close#(#)#;#}#}#finally#{#funnel#.#closed#=#true#;#}#}#}##void#close#(#)#throws#IOException#{#try#{#dieIfClosed#(#)#;#out#.#close#(#)#;#}#finally#{#closed#=#true#;#}#}##void#dieIfClosed#(#)#throws#IOException#{#if#(#closed#)#{#throw#new#IOException#(#"The funneled OutputStream has been closed."#)#;#}#}##