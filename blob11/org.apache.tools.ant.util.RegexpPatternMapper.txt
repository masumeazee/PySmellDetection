void#setHandleDirSep#(#boolean#handleDirSep#)#{#this#.#handleDirSep#=#handleDirSep#;#}##void#setCaseSensitive#(#boolean#caseSensitive#)#{#if#(#!#caseSensitive#)#{#regexpOptions#=#RegexpMatcher#.#MATCH_CASE_INSENSITIVE#;#}#else#{#regexpOptions#=#0#;#}#}##void#setFrom#(#String#from#)#throws#BuildException#{#if#(#from#!=#null#)#{#try#{#reg#.#setPattern#(#from#)#;#}#catch#(#NoClassDefFoundError#e#)#{#// depending on the implementation the actual RE won't#// get instantiated in the constructor.#throw#new#BuildException#(#"Cannot load regular expression matcher"#,#e#)#;#}#}#else#{#throw#new#BuildException#(#"this mapper requires a 'from' attribute"#)#;#}#}##void#setTo#(#String#to#)#{#if#(#to#!=#null#)#{#this#.#to#=#to#.#toCharArray#(#)#;#}#else#{#throw#new#BuildException#(#"this mapper requires a 'to' attribute"#)#;#}#}##String#[#]#mapFileName#(#String#sourceFileName#)#{#if#(#handleDirSep#)#{#if#(#sourceFileName#.#indexOf#(#"\\"#)#!=#-#1#)#{#sourceFileName#=#sourceFileName#.#replace#(#'\\'#,#'/'#)#;#}#}#if#(#reg#==#null#||#to#==#null#||#!#reg#.#matches#(#sourceFileName#,#regexpOptions#)#)#{#return#null#;#}#return#new#String#[#]#{#replaceReferences#(#sourceFileName#)#}#;#}##String#replaceReferences#(#String#source#)#{#Vector#v#=#reg#.#getGroups#(#source#,#regexpOptions#)#;#result#.#setLength#(#0#)#;#for#(#int#i#=#0#;#i#<#to#.#length#;#i#++#)#{#if#(#to#[#i#]#==#'\\'#)#{#if#(#++#i#<#to#.#length#)#{#int#value#=#Character#.#digit#(#to#[#i#]#,#DECIMAL#)#;#if#(#value#>#-#1#)#{#result#.#append#(#(#String#)#v#.#elementAt#(#value#)#)#;#}#else#{#result#.#append#(#to#[#i#]#)#;#}#}#else#{#// XXX - should throw an exception instead?#result#.#append#(#'\\'#)#;#}#}#else#{#result#.#append#(#to#[#i#]#)#;#}#}#return#result#.#substring#(#0#)#;#}##