Resource#[#]#selectOutOfDateSources#(#ProjectComponent#logTo#,#Resource#[#]#source#,#FileNameMapper#mapper#,#ResourceFactory#targets#)#{#return#selectOutOfDateSources#(#logTo#,#source#,#mapper#,#targets#,#FILE_UTILS#.#getFileTimestampGranularity#(#)#)#;#}##Resource#[#]#selectOutOfDateSources#(#ProjectComponent#logTo#,#Resource#[#]#source#,#FileNameMapper#mapper#,#ResourceFactory#targets#,#long#granularity#)#{#Union#u#=#new#Union#(#)#;#u#.#addAll#(#Arrays#.#asList#(#source#)#)#;#ResourceCollection#rc#=#selectOutOfDateSources#(#logTo#,#u#,#mapper#,#targets#,#granularity#)#;#return#rc#.#size#(#)#==#0#?#new#Resource#[#0#]#:#(#(#Union#)#rc#)#.#listResources#(#)#;#}##ResourceCollection#selectOutOfDateSources#(#ProjectComponent#logTo#,#ResourceCollection#source#,#FileNameMapper#mapper#,#ResourceFactory#targets#,#final#long#granularity#)#{#logFuture#(#logTo#,#source#,#granularity#)#;#ResourceSelectorProvider#p#=#new#ResourceSelectorProvider#(#)#{#public#ResourceSelector#getTargetSelectorForSource#(#final#Resource#sr#)#{#return#new#ResourceSelector#(#)#{#public#boolean#isSelected#(#Resource#target#)#{#/* Extra I/O, probably wasted:
                               if (target.isDirectory()) {
                               return false;
                               }
                            */#return#SelectorUtils#.#isOutOfDate#(#sr#,#target#,#granularity#)#;#}#}#;#}#}#;#return#selectSources#(#logTo#,#source#,#mapper#,#targets#,#p#)#;#}##ResourceSelector#getTargetSelectorForSource#(#final#Resource#sr#)#{#return#new#ResourceSelector#(#)#{#public#boolean#isSelected#(#Resource#target#)#{#/* Extra I/O, probably wasted:
                               if (target.isDirectory()) {
                               return false;
                               }
                            */#return#SelectorUtils#.#isOutOfDate#(#sr#,#target#,#granularity#)#;#}#}#;#}##boolean#isSelected#(#Resource#target#)#{#/* Extra I/O, probably wasted:
                               if (target.isDirectory()) {
                               return false;
                               }
                            */#return#SelectorUtils#.#isOutOfDate#(#sr#,#target#,#granularity#)#;#}##ResourceCollection#selectSources#(#ProjectComponent#logTo#,#ResourceCollection#source#,#FileNameMapper#mapper#,#ResourceFactory#targets#,#ResourceSelectorProvider#selector#)#{#if#(#source#.#size#(#)#==#0#)#{#logTo#.#log#(#"No sources found."#,#Project#.#MSG_VERBOSE#)#;#return#Resources#.#NONE#;#}#source#=#Union#.#getInstance#(#source#)#;#Union#result#=#new#Union#(#)#;#for#(#Iterator#iter#=#source#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#final#Resource#sr#=#(#Resource#)#iter#.#next#(#)#;#String#srName#=#sr#.#getName#(#)#;#srName#=#srName#==#null#?#srName#:#srName#.#replace#(#'/'#,#File#.#separatorChar#)#;#String#[#]#targetnames#=#null#;#try#{#targetnames#=#mapper#.#mapFileName#(#srName#)#;#}#catch#(#Exception#e#)#{#logTo#.#log#(#"Caught "#+#e#+#" mapping resource "#+#sr#,#Project#.#MSG_VERBOSE#)#;#}#if#(#targetnames#==#null#||#targetnames#.#length#==#0#)#{#logTo#.#log#(#sr#+#" skipped - don\'t know how to handle it"#,#Project#.#MSG_VERBOSE#)#;#continue#;#}#for#(#int#i#=#0#;#i#<#targetnames#.#length#;#i#++#)#{#if#(#targetnames#[#i#]#==#null#)#{#targetnames#[#i#]#=#"(no name)"#;#}#}#Union#targetColl#=#new#Union#(#)#;#for#(#int#i#=#0#;#i#<#targetnames#.#length#;#i#++#)#{#targetColl#.#add#(#targets#.#getResource#(#targetnames#[#i#]#.#replace#(#File#.#separatorChar#,#'/'#)#)#)#;#}#//find the out-of-date targets:#Restrict#r#=#new#Restrict#(#)#;#r#.#add#(#selector#.#getTargetSelectorForSource#(#sr#)#)#;#r#.#add#(#targetColl#)#;#if#(#r#.#size#(#)#>#0#)#{#result#.#add#(#sr#)#;#Resource#t#=#(#Resource#)#(#r#.#iterator#(#)#.#next#(#)#)#;#logTo#.#log#(#sr#.#getName#(#)#+#" added as "#+#t#.#getName#(#)#+#(#t#.#isExists#(#)#?#" is outdated."#:#" doesn\'t exist."#)#,#Project#.#MSG_VERBOSE#)#;#continue#;#}#//log uptodateness of all targets:#logTo#.#log#(#sr#.#getName#(#)#+#" omitted as "#+#targetColl#.#toString#(#)#+#(#targetColl#.#size#(#)#==#1#?#" is"#:#" are "#)#+#" up to date."#,#Project#.#MSG_VERBOSE#)#;#}#return#result#;#}##void#copyResource#(#Resource#source#,#Resource#dest#)#throws#IOException#{#copyResource#(#source#,#dest#,#null#)#;#}##void#copyResource#(#Resource#source#,#Resource#dest#,#Project#project#)#throws#IOException#{#copyResource#(#source#,#dest#,#null#,#null#,#false#,#false#,#null#,#null#,#project#)#;#}##void#copyResource#(#Resource#source#,#Resource#dest#,#FilterSetCollection#filters#,#Vector#filterChains#,#boolean#overwrite#,#boolean#preserveLastModified#,#String#inputEncoding#,#String#outputEncoding#,#Project#project#)#throws#IOException#{#copyResource#(#source#,#dest#,#filters#,#filterChains#,#overwrite#,#preserveLastModified#,#false#,#inputEncoding#,#outputEncoding#,#project#)#;#}##void#copyResource#(#Resource#source#,#Resource#dest#,#FilterSetCollection#filters#,#Vector#filterChains#,#boolean#overwrite#,#boolean#preserveLastModified#,#boolean#append#,#String#inputEncoding#,#String#outputEncoding#,#Project#project#)#throws#IOException#{#if#(#!#(#overwrite#||#SelectorUtils#.#isOutOfDate#(#source#,#dest#,#FileUtils#.#getFileUtils#(#)#.#getFileTimestampGranularity#(#)#)#)#)#{#return#;#}#final#boolean#filterSetsAvailable#=#(#filters#!=#null#&&#filters#.#hasFilters#(#)#)#;#final#boolean#filterChainsAvailable#=#(#filterChains#!=#null#&&#filterChains#.#size#(#)#>#0#)#;#if#(#filterSetsAvailable#)#{#BufferedReader#in#=#null#;#BufferedWriter#out#=#null#;#try#{#InputStreamReader#isr#=#null#;#if#(#inputEncoding#==#null#)#{#isr#=#new#InputStreamReader#(#source#.#getInputStream#(#)#)#;#}#else#{#isr#=#new#InputStreamReader#(#source#.#getInputStream#(#)#,#inputEncoding#)#;#}#in#=#new#BufferedReader#(#isr#)#;#OutputStream#os#=#getOutputStream#(#dest#,#append#,#project#)#;#OutputStreamWriter#osw#;#if#(#outputEncoding#==#null#)#{#osw#=#new#OutputStreamWriter#(#os#)#;#}#else#{#osw#=#new#OutputStreamWriter#(#os#,#outputEncoding#)#;#}#out#=#new#BufferedWriter#(#osw#)#;#if#(#filterChainsAvailable#)#{#ChainReaderHelper#crh#=#new#ChainReaderHelper#(#)#;#crh#.#setBufferSize#(#FileUtils#.#BUF_SIZE#)#;#crh#.#setPrimaryReader#(#in#)#;#crh#.#setFilterChains#(#filterChains#)#;#crh#.#setProject#(#project#)#;#Reader#rdr#=#crh#.#getAssembledReader#(#)#;#in#=#new#BufferedReader#(#rdr#)#;#}#LineTokenizer#lineTokenizer#=#new#LineTokenizer#(#)#;#lineTokenizer#.#setIncludeDelims#(#true#)#;#String#newline#=#null#;#String#line#=#lineTokenizer#.#getToken#(#in#)#;#while#(#line#!=#null#)#{#if#(#line#.#length#(#)#==#0#)#{#// this should not happen, because the lines are#// returned with the end of line delimiter#out#.#newLine#(#)#;#}#else#{#newline#=#filters#.#replaceTokens#(#line#)#;#out#.#write#(#newline#)#;#}#line#=#lineTokenizer#.#getToken#(#in#)#;#}#}#finally#{#FileUtils#.#close#(#out#)#;#FileUtils#.#close#(#in#)#;#}#}#else#if#(#filterChainsAvailable#||#(#inputEncoding#!=#null#&&#!#inputEncoding#.#equals#(#outputEncoding#)#)#||#(#inputEncoding#==#null#&&#outputEncoding#!=#null#)#)#{#BufferedReader#in#=#null#;#BufferedWriter#out#=#null#;#try#{#InputStreamReader#isr#=#null#;#if#(#inputEncoding#==#null#)#{#isr#=#new#InputStreamReader#(#source#.#getInputStream#(#)#)#;#}#else#{#isr#=#new#InputStreamReader#(#source#.#getInputStream#(#)#,#inputEncoding#)#;#}#in#=#new#BufferedReader#(#isr#)#;#OutputStream#os#=#getOutputStream#(#dest#,#append#,#project#)#;#OutputStreamWriter#osw#;#if#(#outputEncoding#==#null#)#{#osw#=#new#OutputStreamWriter#(#os#)#;#}#else#{#osw#=#new#OutputStreamWriter#(#os#,#outputEncoding#)#;#}#out#=#new#BufferedWriter#(#osw#)#;#if#(#filterChainsAvailable#)#{#ChainReaderHelper#crh#=#new#ChainReaderHelper#(#)#;#crh#.#setBufferSize#(#FileUtils#.#BUF_SIZE#)#;#crh#.#setPrimaryReader#(#in#)#;#crh#.#setFilterChains#(#filterChains#)#;#crh#.#setProject#(#project#)#;#Reader#rdr#=#crh#.#getAssembledReader#(#)#;#in#=#new#BufferedReader#(#rdr#)#;#}#char#[#]#buffer#=#new#char#[#FileUtils#.#BUF_SIZE#]#;#while#(#true#)#{#int#nRead#=#in#.#read#(#buffer#,#0#,#buffer#.#length#)#;#if#(#nRead#==#-#1#)#{#break#;#}#out#.#write#(#buffer#,#0#,#nRead#)#;#}#}#finally#{#FileUtils#.#close#(#out#)#;#FileUtils#.#close#(#in#)#;#}#}#else#if#(#source#.#as#(#FileProvider#.#class#)#!=#null#&&#dest#.#as#(#FileProvider#.#class#)#!=#null#)#{#File#sourceFile#=#(#(#FileProvider#)#source#.#as#(#FileProvider#.#class#)#)#.#getFile#(#)#;#File#destFile#=#(#(#FileProvider#)#dest#.#as#(#FileProvider#.#class#)#)#.#getFile#(#)#;#File#parent#=#destFile#.#getParentFile#(#)#;#if#(#parent#!=#null#&&#!#parent#.#isDirectory#(#)#&&#!#destFile#.#getParentFile#(#)#.#mkdirs#(#)#)#{#throw#new#IOException#(#"failed to create the parent directory"#+#" for "#+#destFile#)#;#}#FileInputStream#in#=#null#;#FileOutputStream#out#=#null#;#FileChannel#srcChannel#=#null#;#FileChannel#destChannel#=#null#;#try#{#in#=#new#FileInputStream#(#sourceFile#)#;#out#=#new#FileOutputStream#(#destFile#)#;#srcChannel#=#in#.#getChannel#(#)#;#destChannel#=#out#.#getChannel#(#)#;#long#position#=#0#;#long#count#=#srcChannel#.#size#(#)#;#while#(#position#<#count#)#{#position#+=#srcChannel#.#transferTo#(#position#,#FileUtils#.#BUF_SIZE#,#destChannel#)#;#}#}#finally#{#FileUtils#.#close#(#srcChannel#)#;#FileUtils#.#close#(#destChannel#)#;#FileUtils#.#close#(#out#)#;#FileUtils#.#close#(#in#)#;#}#}#else#{#InputStream#in#=#null#;#OutputStream#out#=#null#;#try#{#in#=#source#.#getInputStream#(#)#;#out#=#getOutputStream#(#dest#,#append#,#project#)#;#byte#[#]#buffer#=#new#byte#[#FileUtils#.#BUF_SIZE#]#;#int#count#=#0#;#do#{#out#.#write#(#buffer#,#0#,#count#)#;#count#=#in#.#read#(#buffer#,#0#,#buffer#.#length#)#;#}#while#(#count#!=#-#1#)#;#}#finally#{#FileUtils#.#close#(#out#)#;#FileUtils#.#close#(#in#)#;#}#}#if#(#preserveLastModified#)#{#Touchable#t#=#(#Touchable#)#dest#.#as#(#Touchable#.#class#)#;#if#(#t#!=#null#)#{#setLastModified#(#t#,#source#.#getLastModified#(#)#)#;#}#}#}##void#setLastModified#(#Touchable#t#,#long#time#)#{#t#.#touch#(#(#time#<#0#)#?#System#.#currentTimeMillis#(#)#:#time#)#;#}##boolean#contentEquals#(#Resource#r1#,#Resource#r2#,#boolean#text#)#throws#IOException#{#if#(#r1#.#isExists#(#)#!=#r2#.#isExists#(#)#)#{#return#false#;#}#if#(#!#r1#.#isExists#(#)#)#{#// two not existing files are equal#return#true#;#}#// should the following two be switched?  If r1 and r2 refer to the same file,#// isn't their content equal regardless of whether that file is a directory?#if#(#r1#.#isDirectory#(#)#||#r2#.#isDirectory#(#)#)#{#// don't want to compare directory contents for now#return#false#;#}#if#(#r1#.#equals#(#r2#)#)#{#return#true#;#}#if#(#!#text#)#{#long#s1#=#r1#.#getSize#(#)#;#long#s2#=#r2#.#getSize#(#)#;#if#(#s1#!=#Resource#.#UNKNOWN_SIZE#&&#s2#!=#Resource#.#UNKNOWN_SIZE#&&#s1#!=#s2#)#{#return#false#;#}#}#return#compareContent#(#r1#,#r2#,#text#)#==#0#;#}##int#compareContent#(#Resource#r1#,#Resource#r2#,#boolean#text#)#throws#IOException#{#if#(#r1#.#equals#(#r2#)#)#{#return#0#;#}#boolean#e1#=#r1#.#isExists#(#)#;#boolean#e2#=#r2#.#isExists#(#)#;#if#(#!#(#e1#||#e2#)#)#{#return#0#;#}#if#(#e1#!=#e2#)#{#return#e1#?#1#:#-#1#;#}#boolean#d1#=#r1#.#isDirectory#(#)#;#boolean#d2#=#r2#.#isDirectory#(#)#;#if#(#d1#&&#d2#)#{#return#0#;#}#if#(#d1#||#d2#)#{#return#d1#?#-#1#:#1#;#}#return#text#?#textCompare#(#r1#,#r2#)#:#binaryCompare#(#r1#,#r2#)#;#}##FileResource#asFileResource#(#FileProvider#fileProvider#)#{#if#(#fileProvider#instanceof#FileResource#||#fileProvider#==#null#)#{#return#(#FileResource#)#fileProvider#;#}#FileResource#result#=#new#FileResource#(#fileProvider#.#getFile#(#)#)#;#result#.#setProject#(#Project#.#getProject#(#fileProvider#)#)#;#return#result#;#}##int#binaryCompare#(#Resource#r1#,#Resource#r2#)#throws#IOException#{#InputStream#in1#=#null#;#InputStream#in2#=#null#;#try#{#in1#=#new#BufferedInputStream#(#r1#.#getInputStream#(#)#)#;#in2#=#new#BufferedInputStream#(#r2#.#getInputStream#(#)#)#;#for#(#int#b1#=#in1#.#read#(#)#;#b1#!=#-#1#;#b1#=#in1#.#read#(#)#)#{#int#b2#=#in2#.#read#(#)#;#if#(#b1#!=#b2#)#{#return#b1#>#b2#?#1#:#-#1#;#}#}#return#in2#.#read#(#)#==#-#1#?#0#:#-#1#;#}#finally#{#FileUtils#.#close#(#in1#)#;#FileUtils#.#close#(#in2#)#;#}#}##int#textCompare#(#Resource#r1#,#Resource#r2#)#throws#IOException#{#BufferedReader#in1#=#null#;#BufferedReader#in2#=#null#;#try#{#in1#=#new#BufferedReader#(#new#InputStreamReader#(#r1#.#getInputStream#(#)#)#)#;#in2#=#new#BufferedReader#(#new#InputStreamReader#(#r2#.#getInputStream#(#)#)#)#;#String#expected#=#in1#.#readLine#(#)#;#while#(#expected#!=#null#)#{#String#actual#=#in2#.#readLine#(#)#;#if#(#!#expected#.#equals#(#actual#)#)#{#return#expected#.#compareTo#(#actual#)#;#}#expected#=#in1#.#readLine#(#)#;#}#return#in2#.#readLine#(#)#==#null#?#0#:#-#1#;#}#finally#{#FileUtils#.#close#(#in1#)#;#FileUtils#.#close#(#in2#)#;#}#}##void#logFuture#(#ProjectComponent#logTo#,#ResourceCollection#rc#,#long#granularity#)#{#long#now#=#System#.#currentTimeMillis#(#)#+#granularity#;#Date#sel#=#new#Date#(#)#;#sel#.#setMillis#(#now#)#;#sel#.#setWhen#(#TimeComparison#.#AFTER#)#;#Restrict#future#=#new#Restrict#(#)#;#future#.#add#(#sel#)#;#future#.#add#(#rc#)#;#for#(#Iterator#iter#=#future#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#logTo#.#log#(#"Warning: "#+#(#(#Resource#)#iter#.#next#(#)#)#.#getName#(#)#+#" modified in the future."#,#Project#.#MSG_WARN#)#;#}#}##OutputStream#getOutputStream#(#Resource#resource#,#boolean#append#,#Project#project#)#throws#IOException#{#if#(#append#)#{#Appendable#a#=#(#Appendable#)#resource#.#as#(#Appendable#.#class#)#;#if#(#a#!=#null#)#{#return#a#.#getAppendOutputStream#(#)#;#}#project#.#log#(#"Appendable OutputStream not available for non-appendable resource "#+#resource#+#"; using plain OutputStream"#,#Project#.#MSG_VERBOSE#)#;#}#return#resource#.#getOutputStream#(#)#;#}##