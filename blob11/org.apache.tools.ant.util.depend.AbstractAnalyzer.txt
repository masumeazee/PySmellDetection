void#setClosure#(#boolean#closure#)#{#this#.#closure#=#closure#;#}##Enumeration#getFileDependencies#(#)#{#if#(#!#supportsFileDependencies#(#)#)#{#throw#new#RuntimeException#(#"File dependencies are not supported "#+#"by this analyzer"#)#;#}#if#(#!#determined#)#{#determineDependencies#(#fileDependencies#,#classDependencies#)#;#}#return#fileDependencies#.#elements#(#)#;#}##Enumeration#getClassDependencies#(#)#{#if#(#!#determined#)#{#determineDependencies#(#fileDependencies#,#classDependencies#)#;#}#return#classDependencies#.#elements#(#)#;#}##File#getClassContainer#(#String#classname#)#throws#IOException#{#String#classLocation#=#classname#.#replace#(#'.'#,#'/'#)#+#".class"#;#// we look through the classpath elements. If the element is a dir#// we look for the file. IF it is a zip, we look for the zip entry#return#getResourceContainer#(#classLocation#,#classPath#.#list#(#)#)#;#}##File#getSourceContainer#(#String#classname#)#throws#IOException#{#String#sourceLocation#=#classname#.#replace#(#'.'#,#'/'#)#+#".java"#;#// we look through the source path elements. If the element is a dir#// we look for the file. If it is a zip, we look for the zip entry.#// This isn't normal for source paths but we get it for free#return#getResourceContainer#(#sourceLocation#,#sourcePath#.#list#(#)#)#;#}##void#addSourcePath#(#Path#sourcePath#)#{#if#(#sourcePath#==#null#)#{#return#;#}#this#.#sourcePath#.#append#(#sourcePath#)#;#this#.#sourcePath#.#setProject#(#sourcePath#.#getProject#(#)#)#;#}##void#addClassPath#(#Path#classPath#)#{#if#(#classPath#==#null#)#{#return#;#}#this#.#classPath#.#append#(#classPath#)#;#this#.#classPath#.#setProject#(#classPath#.#getProject#(#)#)#;#}##void#addRootClass#(#String#className#)#{#if#(#className#==#null#)#{#return#;#}#if#(#!#rootClasses#.#contains#(#className#)#)#{#rootClasses#.#addElement#(#className#)#;#}#}##void#config#(#String#name#,#Object#info#)#{#// do nothing by default#}##void#reset#(#)#{#rootClasses#.#removeAllElements#(#)#;#determined#=#false#;#fileDependencies#=#new#Vector#(#)#;#classDependencies#=#new#Vector#(#)#;#}##Enumeration#getRootClasses#(#)#{#return#rootClasses#.#elements#(#)#;#}##boolean#isClosureRequired#(#)#{#return#closure#;#}##void#determineDependencies#(#Vector#files#,#Vector#classes#)#;##boolean#supportsFileDependencies#(#)#;##File#getResourceContainer#(#String#resourceLocation#,#String#[#]#paths#)#throws#IOException#{#for#(#int#i#=#0#;#i#<#paths#.#length#;#++#i#)#{#File#element#=#new#File#(#paths#[#i#]#)#;#if#(#!#element#.#exists#(#)#)#{#continue#;#}#if#(#element#.#isDirectory#(#)#)#{#File#resource#=#new#File#(#element#,#resourceLocation#)#;#if#(#resource#.#exists#(#)#)#{#return#resource#;#}#}#else#{#// must be a zip of some sort#ZipFile#zipFile#=#null#;#try#{#zipFile#=#new#ZipFile#(#element#)#;#if#(#zipFile#.#getEntry#(#resourceLocation#)#!=#null#)#{#return#element#;#}#}#finally#{#if#(#zipFile#!=#null#)#{#zipFile#.#close#(#)#;#}#}#}#}#return#null#;#}##