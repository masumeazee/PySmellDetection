void#setPattern#(#String#pattern#)#{#this#.#pattern#=#pattern#;#}##String#getPattern#(#)#{#return#this#.#pattern#;#}##Pattern#getCompiledPattern#(#int#options#)#throws#BuildException#{#try#{#// compute the compiler options based on the input options first#Pattern#p#=#compiler#.#compile#(#pattern#,#getCompilerOptions#(#options#)#)#;#return#p#;#}#catch#(#Exception#e#)#{#throw#new#BuildException#(#e#)#;#}#}##boolean#matches#(#String#argument#)#throws#BuildException#{#return#matches#(#argument#,#MATCH_DEFAULT#)#;#}##boolean#matches#(#String#input#,#int#options#)#throws#BuildException#{#Pattern#p#=#getCompiledPattern#(#options#)#;#return#matcher#.#contains#(#input#,#p#)#;#}##Vector#getGroups#(#String#argument#)#throws#BuildException#{#return#getGroups#(#argument#,#MATCH_DEFAULT#)#;#}##Vector#getGroups#(#String#input#,#int#options#)#throws#BuildException#{#if#(#!#matches#(#input#,#options#)#)#{#return#null#;#}#Vector#v#=#new#Vector#(#)#;#MatchResult#mr#=#matcher#.#getMatch#(#)#;#int#cnt#=#mr#.#groups#(#)#;#for#(#int#i#=#0#;#i#<#cnt#;#i#++#)#{#String#match#=#mr#.#group#(#i#)#;#// treat non-matching groups as empty matches#if#(#match#==#null#)#{#match#=#""#;#}#v#.#addElement#(#match#)#;#}#return#v#;#}##int#getCompilerOptions#(#int#options#)#{#int#cOptions#=#Perl5Compiler#.#DEFAULT_MASK#;#if#(#RegexpUtil#.#hasFlag#(#options#,#MATCH_CASE_INSENSITIVE#)#)#{#cOptions#|=#Perl5Compiler#.#CASE_INSENSITIVE_MASK#;#}#if#(#RegexpUtil#.#hasFlag#(#options#,#MATCH_MULTILINE#)#)#{#cOptions#|=#Perl5Compiler#.#MULTILINE_MASK#;#}#if#(#RegexpUtil#.#hasFlag#(#options#,#MATCH_SINGLELINE#)#)#{#cOptions#|=#Perl5Compiler#.#SINGLELINE_MASK#;#}#return#cOptions#;#}##