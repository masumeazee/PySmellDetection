void#setDebug#(#boolean#debug#)#{#this#.#debug#=#debug#;#buffer#.#setDebug#(#debug#)#;#}##void#close#(#)#throws#IOException#{#buffer#.#close#(#)#;#}##int#getRecordSize#(#)#{#return#buffer#.#getRecordSize#(#)#;#}##int#available#(#)#throws#IOException#{#if#(#entrySize#-#entryOffset#>#Integer#.#MAX_VALUE#)#{#return#Integer#.#MAX_VALUE#;#}#return#(#int#)#(#entrySize#-#entryOffset#)#;#}##long#skip#(#long#numToSkip#)#throws#IOException#{#// REVIEW#// This is horribly inefficient, but it ensures that we#// properly skip over bytes via the TarBuffer...#//#byte#[#]#skipBuf#=#new#byte#[#BUFFER_SIZE#]#;#long#skip#=#numToSkip#;#while#(#skip#>#0#)#{#int#realSkip#=#(#int#)#(#skip#>#skipBuf#.#length#?#skipBuf#.#length#:#skip#)#;#int#numRead#=#read#(#skipBuf#,#0#,#realSkip#)#;#if#(#numRead#==#-#1#)#{#break#;#}#skip#-=#numRead#;#}#return#(#numToSkip#-#skip#)#;#}##boolean#markSupported#(#)#{#return#false#;#}##void#mark#(#int#markLimit#)#{#}##void#reset#(#)#{#}##TarEntry#getNextEntry#(#)#throws#IOException#{#if#(#hasHitEOF#)#{#return#null#;#}#if#(#currEntry#!=#null#)#{#long#numToSkip#=#entrySize#-#entryOffset#;#if#(#debug#)#{#System#.#err#.#println#(#"TarInputStream: SKIP currENTRY '"#+#currEntry#.#getName#(#)#+#"' SZ "#+#entrySize#+#" OFF "#+#entryOffset#+#"  skipping "#+#numToSkip#+#" bytes"#)#;#}#while#(#numToSkip#>#0#)#{#long#skipped#=#skip#(#numToSkip#)#;#if#(#skipped#<=#0#)#{#throw#new#RuntimeException#(#"failed to skip current tar"#+#" entry"#)#;#}#numToSkip#-=#skipped#;#}#readBuf#=#null#;#}#byte#[#]#headerBuf#=#buffer#.#readRecord#(#)#;#if#(#headerBuf#==#null#)#{#if#(#debug#)#{#System#.#err#.#println#(#"READ NULL RECORD"#)#;#}#hasHitEOF#=#true#;#}#else#if#(#buffer#.#isEOFRecord#(#headerBuf#)#)#{#if#(#debug#)#{#System#.#err#.#println#(#"READ EOF RECORD"#)#;#}#hasHitEOF#=#true#;#}#if#(#hasHitEOF#)#{#currEntry#=#null#;#}#else#{#currEntry#=#new#TarEntry#(#headerBuf#)#;#if#(#debug#)#{#System#.#err#.#println#(#"TarInputStream: SET CURRENTRY '"#+#currEntry#.#getName#(#)#+#"' size = "#+#currEntry#.#getSize#(#)#)#;#}#entryOffset#=#0#;#entrySize#=#currEntry#.#getSize#(#)#;#}#if#(#currEntry#!=#null#&&#currEntry#.#isGNULongNameEntry#(#)#)#{#// read in the name#StringBuffer#longName#=#new#StringBuffer#(#)#;#byte#[#]#buf#=#new#byte#[#SMALL_BUFFER_SIZE#]#;#int#length#=#0#;#while#(#(#length#=#read#(#buf#)#)#>=#0#)#{#longName#.#append#(#new#String#(#buf#,#0#,#length#)#)#;#}#getNextEntry#(#)#;#if#(#currEntry#==#null#)#{#// Bugzilla: 40334#// Malformed tar file - long entry name not followed by entry#return#null#;#}#// remove trailing null terminator#if#(#longName#.#length#(#)#>#0#&&#longName#.#charAt#(#longName#.#length#(#)#-#1#)#==#0#)#{#longName#.#deleteCharAt#(#longName#.#length#(#)#-#1#)#;#}#currEntry#.#setName#(#longName#.#toString#(#)#)#;#}#return#currEntry#;#}##int#read#(#)#throws#IOException#{#int#num#=#read#(#oneBuf#,#0#,#1#)#;#return#num#==#-#1#?#-#1#:#(#(#int#)#oneBuf#[#0#]#)#&#BYTE_MASK#;#}##int#read#(#byte#[#]#buf#,#int#offset#,#int#numToRead#)#throws#IOException#{#int#totalRead#=#0#;#if#(#entryOffset#>=#entrySize#)#{#return#-#1#;#}#if#(#(#numToRead#+#entryOffset#)#>#entrySize#)#{#numToRead#=#(#int#)#(#entrySize#-#entryOffset#)#;#}#if#(#readBuf#!=#null#)#{#int#sz#=#(#numToRead#>#readBuf#.#length#)#?#readBuf#.#length#:#numToRead#;#System#.#arraycopy#(#readBuf#,#0#,#buf#,#offset#,#sz#)#;#if#(#sz#>=#readBuf#.#length#)#{#readBuf#=#null#;#}#else#{#int#newLen#=#readBuf#.#length#-#sz#;#byte#[#]#newBuf#=#new#byte#[#newLen#]#;#System#.#arraycopy#(#readBuf#,#sz#,#newBuf#,#0#,#newLen#)#;#readBuf#=#newBuf#;#}#totalRead#+=#sz#;#numToRead#-=#sz#;#offset#+=#sz#;#}#while#(#numToRead#>#0#)#{#byte#[#]#rec#=#buffer#.#readRecord#(#)#;#if#(#rec#==#null#)#{#// Unexpected EOF!#throw#new#IOException#(#"unexpected EOF with "#+#numToRead#+#" bytes unread"#)#;#}#int#sz#=#numToRead#;#int#recLen#=#rec#.#length#;#if#(#recLen#>#sz#)#{#System#.#arraycopy#(#rec#,#0#,#buf#,#offset#,#sz#)#;#readBuf#=#new#byte#[#recLen#-#sz#]#;#System#.#arraycopy#(#rec#,#sz#,#readBuf#,#0#,#recLen#-#sz#)#;#}#else#{#sz#=#recLen#;#System#.#arraycopy#(#rec#,#0#,#buf#,#offset#,#recLen#)#;#}#totalRead#+=#sz#;#numToRead#-=#sz#;#offset#+=#sz#;#}#entryOffset#+=#totalRead#;#return#totalRead#;#}##void#copyEntryContents#(#OutputStream#out#)#throws#IOException#{#byte#[#]#buf#=#new#byte#[#LARGE_BUFFER_SIZE#]#;#while#(#true#)#{#int#numRead#=#read#(#buf#,#0#,#buf#.#length#)#;#if#(#numRead#==#-#1#)#{#break#;#}#out#.#write#(#buf#,#0#,#numRead#)#;#}#}##