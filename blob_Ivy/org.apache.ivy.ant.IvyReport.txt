File#getTodir#(#)#{#return#todir#;#}##void#setTodir#(#File#todir#)#{#this#.#todir#=#todir#;#}##void#setCache#(#File#cache#)#{#cacheAttributeNotSupported#(#)#;#}##String#getConf#(#)#{#return#conf#;#}##void#setConf#(#String#conf#)#{#this#.#conf#=#conf#;#}##String#getModule#(#)#{#return#module#;#}##void#setModule#(#String#module#)#{#this#.#module#=#module#;#}##String#getOrganisation#(#)#{#return#organisation#;#}##void#setOrganisation#(#String#organisation#)#{#this#.#organisation#=#organisation#;#}##boolean#isGraph#(#)#{#return#graph#;#}##void#setGraph#(#boolean#graph#)#{#this#.#graph#=#graph#;#}##File#getXslfile#(#)#{#return#xslFile#;#}##void#setXslfile#(#File#xslFile#)#{#this#.#xslFile#=#xslFile#;#}##String#getOutputpattern#(#)#{#return#outputpattern#;#}##void#setOutputpattern#(#String#outputpattern#)#{#this#.#outputpattern#=#outputpattern#;#}##String#getResolveId#(#)#{#return#resolveId#;#}##void#setResolveId#(#String#resolveId#)#{#this#.#resolveId#=#resolveId#;#}##void#doExecute#(#)#throws#BuildException#{#Ivy#ivy#=#getIvyInstance#(#)#;#IvySettings#settings#=#ivy#.#getSettings#(#)#;#conf#=#getProperty#(#conf#,#settings#,#"ivy.resolved.configurations"#,#resolveId#)#;#if#(#"*"#.#equals#(#conf#)#)#{#conf#=#getProperty#(#settings#,#"ivy.resolved.configurations"#,#resolveId#)#;#}#if#(#conf#==#null#)#{#throw#new#BuildException#(#"no conf provided for ivy report task: "#+#"It can either be set explicitely via the attribute 'conf' or"#+#"via 'ivy.resolved.configurations' property or a prior call to <resolve/>"#)#;#}#if#(#todir#==#null#)#{#String#t#=#getProperty#(#settings#,#"ivy.report.todir"#)#;#if#(#t#!=#null#)#{#todir#=#getProject#(#)#.#resolveFile#(#t#)#;#}#}#if#(#todir#!=#null#&&#todir#.#exists#(#)#)#{#todir#.#mkdirs#(#)#;#}#outputpattern#=#getProperty#(#outputpattern#,#settings#,#"ivy.report.output.pattern"#)#;#if#(#outputpattern#==#null#)#{#outputpattern#=#"[organisation]-[module]-[conf].[ext]"#;#}#if#(#todir#!=#null#&&#todir#.#exists#(#)#&&#!#todir#.#isDirectory#(#)#)#{#throw#new#BuildException#(#"destination directory should be a directory !"#)#;#}#if#(#resolveId#==#null#)#{#organisation#=#getProperty#(#organisation#,#settings#,#"ivy.organisation"#,#resolveId#)#;#module#=#getProperty#(#module#,#settings#,#"ivy.module"#,#resolveId#)#;#if#(#organisation#==#null#)#{#throw#new#BuildException#(#"no organisation provided for ivy report task: "#+#"It can either be set explicitely via the attribute 'organisation' or "#+#"via 'ivy.organisation' property or a prior call to <resolve/>"#)#;#}#if#(#module#==#null#)#{#throw#new#BuildException#(#"no module name provided for ivy report task: "#+#"It can either be set explicitely via the attribute 'module' or "#+#"via 'ivy.module' property or a prior call to <resolve/>"#)#;#}#resolveId#=#ResolveOptions#.#getDefaultResolveId#(#new#ModuleId#(#organisation#,#module#)#)#;#}#try#{#String#[#]#confs#=#splitConfs#(#conf#)#;#if#(#xsl#)#{#genreport#(#confs#)#;#}#if#(#xml#)#{#genxml#(#confs#)#;#}#if#(#graph#)#{#genStyled#(#confs#,#getStylePath#(#"ivy-report-graph.xsl"#)#,#"graphml"#)#;#}#if#(#dot#)#{#genStyled#(#confs#,#getStylePath#(#"ivy-report-dot.xsl"#)#,#"dot"#)#;#}#}#catch#(#IOException#e#)#{#throw#new#BuildException#(#"impossible to generate report: "#+#e#,#e#)#;#}#}##void#genxml#(#String#[#]#confs#)#throws#IOException#{#ResolutionCacheManager#cacheMgr#=#getIvyInstance#(#)#.#getResolutionCacheManager#(#)#;#for#(#int#i#=#0#;#i#<#confs#.#length#;#i#++#)#{#File#xml#=#cacheMgr#.#getConfigurationResolveReportInCache#(#resolveId#,#confs#[#i#]#)#;#File#out#;#if#(#todir#!=#null#)#{#out#=#new#File#(#todir#,#getOutputPattern#(#confs#[#i#]#,#"xml"#)#)#;#}#else#{#out#=#getProject#(#)#.#resolveFile#(#getOutputPattern#(#confs#[#i#]#,#"xml"#)#)#;#}#FileUtil#.#copy#(#xml#,#out#,#null#)#;#}#}##void#genreport#(#String#[#]#confs#)#throws#IOException#{#genStyled#(#confs#,#getReportStylePath#(#)#,#xslext#)#;#// copy the css if required#if#(#xslFile#==#null#)#{#File#css#;#if#(#todir#!=#null#)#{#css#=#new#File#(#todir#,#"ivy-report.css"#)#;#}#else#{#css#=#getProject#(#)#.#resolveFile#(#"ivy-report.css"#)#;#}#if#(#!#css#.#exists#(#)#)#{#Message#.#debug#(#"copying report css to "#+#css#.#getAbsolutePath#(#)#)#;#FileUtil#.#copy#(#XmlReportOutputter#.#class#.#getResourceAsStream#(#"ivy-report.css"#)#,#css#,#null#)#;#}#}#}##File#getReportStylePath#(#)#throws#IOException#{#if#(#xslFile#!=#null#)#{#return#xslFile#;#}#// style should be a file (and not an url)#// so we have to copy it from classpath to cache#ResolutionCacheManager#cacheMgr#=#getIvyInstance#(#)#.#getResolutionCacheManager#(#)#;#File#style#=#new#File#(#cacheMgr#.#getResolutionCacheRoot#(#)#,#"ivy-report.xsl"#)#;#FileUtil#.#copy#(#XmlReportOutputter#.#class#.#getResourceAsStream#(#"ivy-report.xsl"#)#,#style#,#null#)#;#return#style#;#}##String#getOutputPattern#(#String#conf#,#String#ext#)#{#if#(#mRevId#==#null#)#{#ResolutionCacheManager#cacheMgr#=#getIvyInstance#(#)#.#getResolutionCacheManager#(#)#;#XmlReportParser#parser#=#new#XmlReportParser#(#)#;#File#reportFile#=#cacheMgr#.#getConfigurationResolveReportInCache#(#resolveId#,#conf#)#;#try#{#parser#.#parse#(#reportFile#)#;#}#catch#(#ParseException#e#)#{#throw#new#BuildException#(#"Error occurred while parsing reportfile '"#+#reportFile#.#getAbsolutePath#(#)#+#"'"#,#e#)#;#}#// get the resolve module#mRevId#=#parser#.#getResolvedModule#(#)#;#}#return#IvyPatternHelper#.#substitute#(#outputpattern#,#mRevId#.#getOrganisation#(#)#,#mRevId#.#getName#(#)#,#mRevId#.#getRevision#(#)#,#""#,#""#,#ext#,#conf#,#mRevId#.#getAttributes#(#)#,#null#)#;#}##void#genStyled#(#String#[#]#confs#,#File#style#,#String#ext#)#throws#IOException#{#ResolutionCacheManager#cacheMgr#=#getIvyInstance#(#)#.#getResolutionCacheManager#(#)#;#// process the report with xslt to generate dot file#File#out#;#if#(#todir#!=#null#)#{#out#=#todir#;#}#else#{#out#=#getProject#(#)#.#getBaseDir#(#)#;#}#InputStream#xsltStream#=#null#;#try#{#// create stream to stylesheet#xsltStream#=#new#BufferedInputStream#(#new#FileInputStream#(#style#)#)#;#Source#xsltSource#=#new#StreamSource#(#xsltStream#,#JAXPUtils#.#getSystemId#(#style#)#)#;#// create transformer#TransformerFactory#tFactory#=#TransformerFactory#.#newInstance#(#)#;#Transformer#transformer#=#tFactory#.#newTransformer#(#xsltSource#)#;#// add standard parameters#transformer#.#setParameter#(#"confs"#,#conf#)#;#transformer#.#setParameter#(#"extension"#,#xslext#)#;#// add the provided XSLT parameters#for#(#Iterator#it#=#params#.#iterator#(#)#;#it#.#hasNext#(#)#;#)#{#XSLTProcess#.#Param#param#=#(#XSLTProcess#.#Param#)#it#.#next#(#)#;#transformer#.#setParameter#(#param#.#getName#(#)#,#param#.#getExpression#(#)#)#;#}#// create the report#for#(#int#i#=#0#;#i#<#confs#.#length#;#i#++#)#{#File#reportFile#=#cacheMgr#.#getConfigurationResolveReportInCache#(#resolveId#,#confs#[#i#]#)#;#File#outFile#=#new#File#(#out#,#getOutputPattern#(#confs#[#i#]#,#ext#)#)#;#log#(#"Processing "#+#reportFile#+#" to "#+#outFile#)#;#// make sure the output directory exist#File#outFileDir#=#outFile#.#getParentFile#(#)#;#if#(#!#outFileDir#.#exists#(#)#)#{#if#(#!#outFileDir#.#mkdirs#(#)#)#{#throw#new#BuildException#(#"Unable to create directory: "#+#outFileDir#.#getAbsolutePath#(#)#)#;#}#}#InputStream#inStream#=#null#;#OutputStream#outStream#=#null#;#try#{#inStream#=#new#BufferedInputStream#(#new#FileInputStream#(#reportFile#)#)#;#outStream#=#new#BufferedOutputStream#(#new#FileOutputStream#(#outFile#)#)#;#StreamResult#res#=#new#StreamResult#(#outStream#)#;#Source#src#=#new#StreamSource#(#inStream#,#JAXPUtils#.#getSystemId#(#style#)#)#;#transformer#.#transform#(#src#,#res#)#;#}#catch#(#TransformerException#e#)#{#throw#new#BuildException#(#e#)#;#}#finally#{#if#(#inStream#!=#null#)#{#try#{#inStream#.#close#(#)#;#}#catch#(#IOException#e#)#{#// ignore#}#}#if#(#outStream#!=#null#)#{#try#{#outStream#.#close#(#)#;#}#catch#(#IOException#e#)#{#// ignore#}#}#}#}#}#catch#(#TransformerConfigurationException#e#)#{#throw#new#BuildException#(#e#)#;#}#finally#{#if#(#xsltStream#!=#null#)#{#try#{#xsltStream#.#close#(#)#;#}#catch#(#IOException#e#)#{#// ignore#}#}#}#}##File#getStylePath#(#String#styleResourceName#)#throws#IOException#{#// style should be a file (and not an url)#// so we have to copy it from classpath to cache#ResolutionCacheManager#cacheMgr#=#getIvyInstance#(#)#.#getResolutionCacheManager#(#)#;#File#style#=#new#File#(#cacheMgr#.#getResolutionCacheRoot#(#)#,#styleResourceName#)#;#FileUtil#.#copy#(#XmlReportOutputter#.#class#.#getResourceAsStream#(#styleResourceName#)#,#style#,#null#)#;#return#style#;#}##boolean#isXml#(#)#{#return#xml#;#}##void#setXml#(#boolean#xml#)#{#this#.#xml#=#xml#;#}##boolean#isXsl#(#)#{#return#xsl#;#}##void#setXsl#(#boolean#xsl#)#{#this#.#xsl#=#xsl#;#}##String#getXslext#(#)#{#return#xslext#;#}##void#setXslext#(#String#xslext#)#{#this#.#xslext#=#xslext#;#}##XSLTProcess#.#Param#createParam#(#)#{#XSLTProcess#.#Param#result#=#new#XSLTProcess#.#Param#(#)#;#params#.#add#(#result#)#;#return#result#;#}##boolean#isDot#(#)#{#return#dot#;#}##void#setDot#(#boolean#dot#)#{#this#.#dot#=#dot#;#}##