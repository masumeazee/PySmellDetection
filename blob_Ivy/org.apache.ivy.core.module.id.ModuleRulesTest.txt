void#setUp#(#)#throws#Exception#{#rules#=#new#ModuleRules#(#)#;#rule#=#new#Object#[#10#]#;#for#(#int#i#=#0#;#i#<#rule#.#length#;#i#++#)#{#rule#[#i#]#=#"RULE_"#+#i#;#}#}##void#testGetRule#(#)#throws#Exception#{#// fixture#rules#.#defineRule#(#mapMatcher#(#)#.#organization#(#"apache"#)#.#build#(#)#,#rule#[#0#]#)#;#rules#.#defineRule#(#mapMatcher#(#)#.#organization#(#"other"#)#.#build#(#)#,#rule#[#1#]#)#;#// test#assertRule#(#rule#[#0#]#,#"apache#module1;1.5"#)#;#assertRule#(#rule#[#0#]#,#"apache#module2;3.0"#)#;#assertRule#(#rule#[#1#]#,#"other#module2;1.5"#)#;#assertRule#(#null#,#"unknown#module1;1.5"#)#;#}##void#testGetRuleWithFilter#(#)#throws#Exception#{#// fixture#rules#.#defineRule#(#mapMatcher#(#)#.#organization#(#"apache"#)#.#build#(#)#,#rule#[#0#]#)#;#rules#.#defineRule#(#mapMatcher#(#)#.#module#(#"module1"#)#.#build#(#)#,#rule#[#1#]#)#;#rules#.#defineRule#(#mapMatcher#(#)#.#module#(#"module2"#)#.#build#(#)#,#rule#[#2#]#)#;#// test#assertRule#(#rule#[#0#]#,#"apache#module1;1.5"#,#acceptAll#(#)#)#;#assertRule#(#rule#[#1#]#,#"apache#module1;1.5"#,#acceptSecond#(#)#)#;#assertModuleIdRule#(#rule#[#1#]#,#"apache#module1"#,#acceptSecond#(#)#)#;#assertRule#(#null#,#"apache#module1;1.5"#,#acceptNone#(#)#)#;#assertRule#(#rule#[#2#]#,#"apache#module2;1.5"#,#acceptSecond#(#)#)#;#assertRule#(#null#,#"unknown#module4;1.5"#,#acceptAll#(#)#)#;#}##Filter#acceptNone#(#)#{#return#new#Filter#(#)#{#public#boolean#accept#(#Object#o#)#{#return#false#;#}#public#String#toString#(#)#{#return#"AcceptNone"#;#}#}#;#}##boolean#accept#(#Object#o#)#{#return#false#;#}##String#toString#(#)#{#return#"AcceptNone"#;#}##Filter#acceptSecond#(#)#{#return#new#Filter#(#)#{#private#int#cpt#;#public#boolean#accept#(#Object#o#)#{#return#++#cpt#==#2#;#}#public#String#toString#(#)#{#return#"AcceptSecond"#;#}#}#;#}##boolean#accept#(#Object#o#)#{#return#++#cpt#==#2#;#}##String#toString#(#)#{#return#"AcceptSecond"#;#}##Filter#acceptAll#(#)#{#return#NoFilter#.#INSTANCE#;#}##void#assertRule#(#Object#rule#,#String#mrid#)#{#Object#ruleFound#=#rules#.#getRule#(#ModuleRevisionId#.#parse#(#mrid#)#)#;#assertEquals#(#"unexcepted rule for "#+#mrid#,#rule#,#ruleFound#)#;#}##void#assertRule#(#Object#rule#,#String#mrid#,#Filter#filter#)#{#Object#ruleFound#=#rules#.#getRule#(#ModuleRevisionId#.#parse#(#mrid#)#,#filter#)#;#assertEquals#(#"unexcepted rule for "#+#mrid#+#" filtered by "#+#filter#,#rule#,#ruleFound#)#;#}##void#assertModuleIdRule#(#Object#rule#,#String#mid#,#Filter#filter#)#{#Object#ruleFound#=#rules#.#getRule#(#ModuleId#.#parse#(#mid#)#,#filter#)#;#assertEquals#(#"unexcepted rule for "#+#mid#+#" filtered by "#+#filter#,#rule#,#ruleFound#)#;#}##MridMatcherBuilder#mapMatcher#(#)#{#return#new#MridMatcherBuilder#(#)#;#}##MridMatcherBuilder#organization#(#String#org#)#{#attributes#.#put#(#IvyPatternHelper#.#ORGANISATION_KEY#,#org#)#;#return#this#;#}##MridMatcherBuilder#module#(#String#mod#)#{#attributes#.#put#(#IvyPatternHelper#.#MODULE_KEY#,#mod#)#;#return#this#;#}##MapMatcher#build#(#)#{#return#new#MapMatcher#(#attributes#,#matcher#)#;#}##