void#load#(#)#{#long#startingMemoryUse#=#0#;#if#(#settings#.#dumpMemoryUsage#(#)#)#{#startingMemoryUse#=#MemoryUtil#.#getUsedMemory#(#)#;#}#long#startTime#=#System#.#currentTimeMillis#(#)#;#Message#.#rawinfo#(#"searching modules... "#)#;#ModuleRevisionId#[#]#mrids#=#searchModules#(#)#;#Message#.#info#(#"loading repository metadata..."#)#;#for#(#int#i#=#0#;#i#<#mrids#.#length#;#i#++#)#{#try#{#loadModuleRevision#(#mrids#[#i#]#)#;#}#catch#(#Exception#e#)#{#errors#.#put#(#mrids#[#i#]#,#e#.#getMessage#(#)#)#;#}#}#long#endTime#=#System#.#currentTimeMillis#(#)#;#Message#.#info#(#"\nrepository loaded: "#+#modules#.#size#(#)#+#" modules; "#+#revisions#.#size#(#)#+#" revisions; "#+#(#settings#.#dumpMemoryUsage#(#)#?#(#MemoryUtil#.#getUsedMemory#(#)#-#startingMemoryUse#)#/#KILO#+#"kB; "#:#""#)#+#(#endTime#-#startTime#)#/#THOUSAND#+#"s"#)#;#loaded#=#true#;#}##void#analyze#(#)#{#ensureLoaded#(#)#;#Message#.#info#(#"\nanalyzing dependencies..."#)#;#for#(#Iterator#iterator#=#revisions#.#values#(#)#.#iterator#(#)#;#iterator#.#hasNext#(#)#;#)#{#ModuleDescriptor#md#=#(#ModuleDescriptor#)#iterator#.#next#(#)#;#DependencyDescriptor#[#]#dds#=#md#.#getDependencies#(#)#;#for#(#int#i#=#0#;#i#<#dds#.#length#;#i#++#)#{#ModuleRevisionId#dep#=#getDependency#(#dds#[#i#]#)#;#if#(#dep#==#null#)#{#Message#.#warn#(#"inconsistent repository: declared dependency not found: "#+#dds#[#i#]#)#;#}#else#{#getDependers#(#dep#)#.#add#(#md#.#getModuleRevisionId#(#)#)#;#}#}#Message#.#progress#(#)#;#}#analyzed#=#true#;#}##int#getRevisionsNumber#(#)#{#ensureLoaded#(#)#;#return#revisions#.#size#(#)#;#}##int#getModuleIdsNumber#(#)#{#ensureLoaded#(#)#;#return#modules#.#size#(#)#;#}##Collection#getOrphans#(#)#{#ensureAnalyzed#(#)#;#Collection#orphans#=#new#HashSet#(#revisions#.#keySet#(#)#)#;#orphans#.#removeAll#(#dependers#.#keySet#(#)#)#;#return#orphans#;#}##ModuleRevisionId#[#]#searchModules#(#)#{#ModuleRevisionId#[#]#mrids#=#searchEngine#.#listModules#(#ModuleRevisionId#.#newInstance#(#PatternMatcher#.#ANY_EXPRESSION#,#PatternMatcher#.#ANY_EXPRESSION#,#PatternMatcher#.#ANY_EXPRESSION#,#PatternMatcher#.#ANY_EXPRESSION#)#,#RegexpPatternMatcher#.#INSTANCE#)#;#return#mrids#;#}##ModuleRevisionId#getDependency#(#DependencyDescriptor#dd#)#{#ModuleRevisionId#askedMrid#=#dd#.#getDependencyRevisionId#(#)#;#VersionMatcher#vmatcher#=#settings#.#getVersionMatcher#(#)#;#if#(#vmatcher#.#isDynamic#(#askedMrid#)#)#{#ModuleRevisionId#mrid#=#(#ModuleRevisionId#)#cache#.#get#(#askedMrid#)#;#if#(#mrid#==#null#)#{#Collection#revs#=#getAllRevisions#(#askedMrid#)#;#for#(#Iterator#iterator#=#revs#.#iterator#(#)#;#iterator#.#hasNext#(#)#;#)#{#ModuleDescriptor#md#=#(#ModuleDescriptor#)#iterator#.#next#(#)#;#if#(#vmatcher#.#needModuleDescriptor#(#askedMrid#,#md#.#getResolvedModuleRevisionId#(#)#)#)#{#if#(#vmatcher#.#accept#(#askedMrid#,#md#)#)#{#mrid#=#md#.#getResolvedModuleRevisionId#(#)#;#break#;#}#}#else#{#if#(#vmatcher#.#accept#(#askedMrid#,#md#.#getResolvedModuleRevisionId#(#)#)#)#{#mrid#=#md#.#getResolvedModuleRevisionId#(#)#;#break#;#}#}#}#if#(#mrid#==#null#)#{#return#null#;#}#else#{#cache#.#put#(#askedMrid#,#mrid#)#;#}#}#return#mrid#;#}#else#{#return#askedMrid#;#}#}##Collection#getDependers#(#ModuleRevisionId#id#)#{#Collection#depders#=#(#Collection#)#dependers#.#get#(#id#)#;#if#(#depders#==#null#)#{#depders#=#new#ArrayList#(#)#;#dependers#.#put#(#id#,#depders#)#;#}#return#depders#;#}##void#loadModuleRevision#(#ModuleRevisionId#mrid#)#throws#Exception#{#ResolvedModuleRevision#module#=#settings#.#getResolver#(#mrid#)#.#getDependency#(#new#DefaultDependencyDescriptor#(#mrid#,#false#)#,#newResolveData#(#)#)#;#if#(#module#==#null#)#{#Message#.#warn#(#"module not found while listed: "#+#mrid#)#;#}#else#{#revisions#.#put#(#module#.#getId#(#)#,#module#.#getDescriptor#(#)#)#;#getAllRevisions#(#module#.#getId#(#)#)#.#add#(#module#.#getDescriptor#(#)#)#;#}#Message#.#progress#(#)#;#}##Collection#getAllRevisions#(#ModuleRevisionId#id#)#{#Collection#revisions#=#(#Collection#)#modules#.#get#(#id#.#getModuleId#(#)#)#;#if#(#revisions#==#null#)#{#revisions#=#new#TreeSet#(#new#Comparator#(#)#{#public#int#compare#(#Object#o1#,#Object#o2#)#{#ModuleDescriptor#md1#=#(#ModuleDescriptor#)#o1#;#ModuleDescriptor#md2#=#(#ModuleDescriptor#)#o2#;#// we use reverse order compared to latest revision, to have latest revision#// first#return#settings#.#getDefaultLatestStrategy#(#)#.#sort#(#new#ArtifactInfo#[#]#{#md1#,#md2#}#)#.#get#(#0#)#.#equals#(#md1#)#?#1#:#-#1#;#}#}#)#;#modules#.#put#(#id#.#getModuleId#(#)#,#revisions#)#;#}#return#revisions#;#}##int#compare#(#Object#o1#,#Object#o2#)#{#ModuleDescriptor#md1#=#(#ModuleDescriptor#)#o1#;#ModuleDescriptor#md2#=#(#ModuleDescriptor#)#o2#;#// we use reverse order compared to latest revision, to have latest revision#// first#return#settings#.#getDefaultLatestStrategy#(#)#.#sort#(#new#ArtifactInfo#[#]#{#md1#,#md2#}#)#.#get#(#0#)#.#equals#(#md1#)#?#1#:#-#1#;#}##ResolveData#newResolveData#(#)#{#return#new#ResolveData#(#resolveEngine#,#new#ResolveOptions#(#)#)#;#}##void#ensureAnalyzed#(#)#{#if#(#!#analyzed#)#{#throw#new#IllegalStateException#(#"repository must have been analyzed to perform this method"#)#;#}#}##void#ensureLoaded#(#)#{#if#(#!#loaded#)#{#throw#new#IllegalStateException#(#"repository must have be loaded to perform this method"#)#;#}#}##