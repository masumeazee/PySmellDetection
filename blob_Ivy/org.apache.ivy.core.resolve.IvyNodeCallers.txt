void#addConfiguration#(#String#callerConf#,#String#[#]#dependencyConfs#)#{#updateConfs#(#callerConf#,#dependencyConfs#)#;#Configuration#conf#=#md#.#getConfiguration#(#callerConf#)#;#if#(#conf#!=#null#)#{#String#[#]#confExtends#=#conf#.#getExtends#(#)#;#if#(#confExtends#!=#null#)#{#for#(#int#i#=#0#;#i#<#confExtends#.#length#;#i#++#)#{#addConfiguration#(#confExtends#[#i#]#,#dependencyConfs#)#;#}#}#}#}##void#updateConfs#(#String#callerConf#,#String#[#]#dependencyConfs#)#{#String#[#]#prevDepConfs#=#(#String#[#]#)#confs#.#get#(#callerConf#)#;#if#(#prevDepConfs#!=#null#)#{#Set#newDepConfs#=#new#HashSet#(#Arrays#.#asList#(#prevDepConfs#)#)#;#newDepConfs#.#addAll#(#Arrays#.#asList#(#dependencyConfs#)#)#;#confs#.#put#(#callerConf#,#(#String#[#]#)#newDepConfs#.#toArray#(#new#String#[#newDepConfs#.#size#(#)#]#)#)#;#}#else#{#confs#.#put#(#callerConf#,#dependencyConfs#)#;#}#}##String#[#]#getCallerConfigurations#(#)#{#return#(#String#[#]#)#confs#.#keySet#(#)#.#toArray#(#new#String#[#confs#.#keySet#(#)#.#size#(#)#]#)#;#}##ModuleRevisionId#getModuleRevisionId#(#)#{#return#mrid#;#}##boolean#equals#(#Object#obj#)#{#if#(#!#(#obj#instanceof#Caller#)#)#{#return#false#;#}#Caller#other#=#(#Caller#)#obj#;#return#other#.#confs#.#equals#(#confs#)#&&#mrid#.#equals#(#other#.#mrid#)#;#}##int#hashCode#(#)#{#//CheckStyle:MagicNumber| OFF#int#hash#=#31#;#hash#=#hash#*#13#+#confs#.#hashCode#(#)#;#hash#=#hash#*#13#+#mrid#.#hashCode#(#)#;#//CheckStyle:MagicNumber| ON#return#hash#;#}##String#toString#(#)#{#return#mrid#.#toString#(#)#;#}##ModuleRevisionId#getAskedDependencyId#(#ResolveData#resolveData#)#{#return#dd#.#getDependencyRevisionId#(#)#;#}##ModuleDescriptor#getModuleDescriptor#(#)#{#return#md#;#}##boolean#canExclude#(#)#{#return#callerCanExclude#||#md#.#canExclude#(#)#||#dd#.#canExclude#(#)#;#}##DependencyDescriptor#getDependencyDescriptor#(#)#{#return#dd#;#}##void#setRealCaller#(#boolean#b#)#{#this#.#real#=#b#;#}##boolean#isRealCaller#(#)#{#return#real#;#}##void#addCaller#(#String#rootModuleConf#,#IvyNode#callerNode#,#String#callerConf#,#String#requestedConf#,#String#[#]#dependencyConfs#,#DependencyDescriptor#dd#)#{#ModuleDescriptor#md#=#callerNode#.#getDescriptor#(#)#;#ModuleRevisionId#mrid#=#callerNode#.#getResolvedId#(#)#;#if#(#mrid#.#getModuleId#(#)#.#equals#(#node#.#getId#(#)#.#getModuleId#(#)#)#)#{#throw#new#IllegalArgumentException#(#"a module is not authorized to depend on itself: "#+#node#.#getId#(#)#)#;#}#Map#callers#=#(#Map#)#callersByRootConf#.#get#(#rootModuleConf#)#;#if#(#callers#==#null#)#{#callers#=#new#HashMap#(#)#;#callersByRootConf#.#put#(#rootModuleConf#,#callers#)#;#}#Caller#caller#=#(#Caller#)#callers#.#get#(#mrid#)#;#if#(#caller#==#null#)#{#caller#=#new#Caller#(#md#,#mrid#,#dd#,#callerNode#.#canExclude#(#rootModuleConf#)#)#;#callers#.#put#(#mrid#,#caller#)#;#}#caller#.#addConfiguration#(#requestedConf#,#dependencyConfs#)#;#IvyNode#parent#=#callerNode#.#getRealNode#(#)#;#for#(#Iterator#iter#=#parent#.#getAllCallersModuleIds#(#)#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#ModuleId#mid#=#(#ModuleId#)#iter#.#next#(#)#;#allCallers#.#put#(#mid#,#parent#)#;#}#allCallers#.#put#(#mrid#.#getModuleId#(#)#,#callerNode#)#;#}##void#removeCaller#(#String#rootModuleConf#,#ModuleRevisionId#callerMrid#)#{#allCallers#.#remove#(#callerMrid#.#getModuleId#(#)#)#;#Map#callers#=#(#Map#)#callersByRootConf#.#get#(#rootModuleConf#)#;#if#(#callers#!=#null#)#{#callers#.#remove#(#callerMrid#)#;#}#}##Caller#[#]#getCallers#(#String#rootModuleConf#)#{#Map#callers#=#(#Map#)#callersByRootConf#.#get#(#rootModuleConf#)#;#if#(#callers#==#null#)#{#return#new#Caller#[#0#]#;#}#return#(#Caller#[#]#)#callers#.#values#(#)#.#toArray#(#new#Caller#[#callers#.#values#(#)#.#size#(#)#]#)#;#}##Caller#[#]#getAllCallers#(#)#{#Set#all#=#new#HashSet#(#)#;#for#(#Iterator#iter#=#callersByRootConf#.#values#(#)#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#Map#callers#=#(#Map#)#iter#.#next#(#)#;#all#.#addAll#(#callers#.#values#(#)#)#;#}#return#(#Caller#[#]#)#all#.#toArray#(#new#Caller#[#all#.#size#(#)#]#)#;#}##Caller#[#]#getAllRealCallers#(#)#{#Set#all#=#new#HashSet#(#)#;#for#(#Iterator#iter#=#callersByRootConf#.#values#(#)#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#Map#callers#=#(#Map#)#iter#.#next#(#)#;#for#(#Iterator#iterator#=#callers#.#values#(#)#.#iterator#(#)#;#iterator#.#hasNext#(#)#;#)#{#Caller#c#=#(#Caller#)#iterator#.#next#(#)#;#if#(#c#.#isRealCaller#(#)#)#{#all#.#add#(#c#)#;#}#}#}#return#(#Caller#[#]#)#all#.#toArray#(#new#Caller#[#all#.#size#(#)#]#)#;#}##Collection#getAllCallersModuleIds#(#)#{#return#allCallers#.#keySet#(#)#;#}##void#updateFrom#(#IvyNodeCallers#callers#,#String#rootModuleConf#,#boolean#real#)#{#Map#nodecallers#=#(#Map#)#callers#.#callersByRootConf#.#get#(#rootModuleConf#)#;#if#(#nodecallers#!=#null#)#{#Map#thiscallers#=#(#Map#)#callersByRootConf#.#get#(#rootModuleConf#)#;#if#(#thiscallers#==#null#)#{#thiscallers#=#new#HashMap#(#)#;#callersByRootConf#.#put#(#rootModuleConf#,#thiscallers#)#;#}#for#(#Iterator#iter#=#nodecallers#.#values#(#)#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#Caller#caller#=#(#Caller#)#iter#.#next#(#)#;#if#(#!#thiscallers#.#containsKey#(#caller#.#getModuleRevisionId#(#)#)#)#{#if#(#!#real#)#{#caller#.#setRealCaller#(#false#)#;#}#thiscallers#.#put#(#caller#.#getModuleRevisionId#(#)#,#caller#)#;#}#}#}#}##IvyNode#getDirectCallerFor#(#ModuleId#from#)#{#return#(#IvyNode#)#allCallers#.#get#(#from#)#;#}##boolean#doesCallersExclude#(#String#rootModuleConf#,#Artifact#artifact#)#{#return#doesCallersExclude#(#rootModuleConf#,#artifact#,#new#Stack#(#)#)#;#}##boolean#doesCallersExclude#(#String#rootModuleConf#,#Artifact#artifact#,#Stack#callersStack#)#{#if#(#callersStack#.#contains#(#node#.#getId#(#)#)#)#{#return#false#;#}#callersStack#.#push#(#node#.#getId#(#)#)#;#try#{#Caller#[#]#callers#=#getCallers#(#rootModuleConf#)#;#if#(#callers#.#length#==#0#)#{#return#false#;#}#for#(#int#i#=#0#;#i#<#callers#.#length#;#i#++#)#{#if#(#!#callers#[#i#]#.#canExclude#(#)#)#{#return#false#;#}#ModuleDescriptor#md#=#callers#[#i#]#.#getModuleDescriptor#(#)#;#if#(#!#doesExclude#(#md#,#rootModuleConf#,#callers#[#i#]#.#getCallerConfigurations#(#)#,#callers#[#i#]#.#getDependencyDescriptor#(#)#,#artifact#,#callersStack#)#)#{#return#false#;#}#}#return#true#;#}#finally#{#callersStack#.#pop#(#)#;#}#}##boolean#doesExclude#(#ModuleDescriptor#md#,#String#rootModuleConf#,#String#[#]#moduleConfs#,#DependencyDescriptor#dd#,#Artifact#artifact#,#Stack#callersStack#)#{#// artifact is excluded if it match any of the exclude pattern for this dependency...#if#(#dd#!=#null#)#{#if#(#dd#.#doesExclude#(#moduleConfs#,#artifact#.#getId#(#)#.#getArtifactId#(#)#)#)#{#return#true#;#}#}#if#(#md#.#doesExclude#(#moduleConfs#,#artifact#.#getId#(#)#.#getArtifactId#(#)#)#)#{#return#true#;#}#// ... or if it is excluded by all its callers#IvyNode#c#=#node#.#getData#(#)#.#getNode#(#md#.#getModuleRevisionId#(#)#)#;#if#(#c#!=#null#)#{#return#c#.#doesCallersExclude#(#rootModuleConf#,#artifact#,#callersStack#)#;#}#else#{#return#false#;#}#}##