ConfigurationResolveReport#getReport#(#)#{#return#report#;#}##IvyNode#getNode#(#ModuleRevisionId#mrid#)#{#VisitData#visitData#=#getVisitData#(#mrid#)#;#return#visitData#==#null#?#null#:#visitData#.#getNode#(#)#;#}##Collection#getNodes#(#)#{#Collection#nodes#=#new#ArrayList#(#)#;#for#(#Iterator#iter#=#visitData#.#values#(#)#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#VisitData#vdata#=#(#VisitData#)#iter#.#next#(#)#;#nodes#.#add#(#vdata#.#getNode#(#)#)#;#}#return#nodes#;#}##Collection#getNodeIds#(#)#{#return#visitData#.#keySet#(#)#;#}##VisitData#getVisitData#(#ModuleRevisionId#mrid#)#{#return#(#VisitData#)#visitData#.#get#(#mrid#)#;#}##VisitNode#getCurrentVisitNode#(#)#{#return#currentVisitNode#;#}##void#setCurrentVisitNode#(#VisitNode#currentVisitNode#)#{#this#.#currentVisitNode#=#currentVisitNode#;#}##void#register#(#VisitNode#node#)#{#register#(#node#.#getId#(#)#,#node#)#;#}##void#register#(#ModuleRevisionId#mrid#,#VisitNode#node#)#{#VisitData#visitData#=#getVisitData#(#mrid#)#;#if#(#visitData#==#null#)#{#visitData#=#new#VisitData#(#node#.#getNode#(#)#)#;#visitData#.#addVisitNode#(#node#)#;#this#.#visitData#.#put#(#mrid#,#visitData#)#;#}#else#{#visitData#.#setNode#(#node#.#getNode#(#)#)#;#visitData#.#addVisitNode#(#node#)#;#}#}##void#replaceNode#(#ModuleRevisionId#mrid#,#IvyNode#node#,#String#rootModuleConf#)#{#VisitData#visitData#=#getVisitData#(#mrid#)#;#if#(#visitData#==#null#)#{#throw#new#IllegalArgumentException#(#"impossible to replace node for id "#+#mrid#+#". No registered node found."#)#;#}#VisitData#keptVisitData#=#getVisitData#(#node#.#getId#(#)#)#;#if#(#keptVisitData#==#null#)#{#throw#new#IllegalArgumentException#(#"impossible to replace node with "#+#node#+#". No registered node found for "#+#node#.#getId#(#)#+#"."#)#;#}#// replace visit data in Map (discards old one)#this#.#visitData#.#put#(#mrid#,#keptVisitData#)#;#// update visit data with discarde visit nodes#keptVisitData#.#addVisitNodes#(#rootModuleConf#,#visitData#.#getVisitNodes#(#rootModuleConf#)#)#;#report#.#updateDependency#(#mrid#,#node#)#;#}##void#setReport#(#ConfigurationResolveReport#report#)#{#this#.#report#=#report#;#}##Date#getDate#(#)#{#return#options#.#getDate#(#)#;#}##boolean#isValidate#(#)#{#return#options#.#isValidate#(#)#;#}##boolean#isTransitive#(#)#{#return#options#.#isTransitive#(#)#;#}##ResolveOptions#getOptions#(#)#{#return#options#;#}##ResolveEngineSettings#getSettings#(#)#{#return#engine#.#getSettings#(#)#;#}##EventManager#getEventManager#(#)#{#return#engine#.#getEventManager#(#)#;#}##ResolveEngine#getEngine#(#)#{#return#engine#;#}##void#blacklist#(#IvyNode#node#)#{#for#(#Iterator#iter#=#visitData#.#entrySet#(#)#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#Entry#entry#=#(#Entry#)#iter#.#next#(#)#;#VisitData#vdata#=#(#VisitData#)#entry#.#getValue#(#)#;#if#(#vdata#.#getNode#(#)#==#node#&&#!#node#.#getResolvedId#(#)#.#equals#(#entry#.#getKey#(#)#)#)#{#// this visit data was associated with the blacklisted node, #// we discard this association#iter#.#remove#(#)#;#}#}#}##boolean#isBlacklisted#(#String#rootModuleConf#,#ModuleRevisionId#mrid#)#{#IvyNode#node#=#getNode#(#mrid#)#;#return#node#!=#null#&&#node#.#isBlacklisted#(#rootModuleConf#)#;#}##DependencyDescriptor#mediate#(#DependencyDescriptor#dd#)#{#VisitNode#current#=#getCurrentVisitNode#(#)#;#if#(#current#!=#null#)#{#// mediating dd through dependers stack#DependencyDescriptor#originalDD#=#dd#;#List#dependers#=#new#ArrayList#(#current#.#getPath#(#)#)#;#// the returned path contains the currently visited node, we are only interested in#// the dependers, so we remove the currently visted node from the end#dependers#.#remove#(#dependers#.#size#(#)#-#1#)#;#// we want to apply mediation going up in the dependers stack, not the opposite#Collections#.#reverse#(#dependers#)#;#for#(#Iterator#iterator#=#dependers#.#iterator#(#)#;#iterator#.#hasNext#(#)#;#)#{#VisitNode#n#=#(#VisitNode#)#iterator#.#next#(#)#;#ModuleDescriptor#md#=#n#.#getDescriptor#(#)#;#if#(#md#!=#null#)#{#dd#=#md#.#mediate#(#dd#)#;#}#}#if#(#originalDD#!=#dd#)#{#Message#.#verbose#(#"dependency descriptor has been mediated: "#+#originalDD#+#" => "#+#dd#)#;#}#}#return#getEngine#(#)#.#mediate#(#dd#,#getOptions#(#)#)#;#}##void#setCurrentResolvedModuleRevision#(#ResolvedModuleRevision#mr#)#{#this#.#currentResolvedModuleRevision#=#mr#;#}##ResolvedModuleRevision#getCurrentResolvedModuleRevision#(#)#{#return#currentResolvedModuleRevision#;#}##