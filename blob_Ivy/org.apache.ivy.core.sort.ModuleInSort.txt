boolean#isInLoop#(#)#{#return#isLoopIntermediateElement#;#}##boolean#isSorted#(#)#{#if#(#isSorted#)#{#Message#.#debug#(#"Module descriptor already sorted : "#+#module#.#getModuleRevisionId#(#)#.#toString#(#)#)#;#return#true#;#}#else#{#return#false#;#}#}##boolean#isProcessed#(#)#{#if#(#isSorted#||#isLoopIntermediateElement#)#{#Message#.#debug#(#"Module descriptor is processed : "#+#module#.#getModuleRevisionId#(#)#.#toString#(#)#)#;#return#true#;#}#else#{#return#false#;#}#}##void#setCaller#(#ModuleInSort#caller#)#{#this#.#caller#=#caller#;#}##void#endOfCall#(#)#{#caller#=#null#;#}##boolean#checkLoop#(#ModuleInSort#futurCaller#,#CircularDependencyStrategy#depStrategy#)#{#if#(#caller#!=#null#)#{#LinkedList#elemOfLoop#=#new#LinkedList#(#)#;#elemOfLoop#.#add#(#this#.#module#.#getModuleRevisionId#(#)#)#;#for#(#ModuleInSort#stackEl#=#futurCaller#;#stackEl#!=#this#;#stackEl#=#stackEl#.#caller#)#{#elemOfLoop#.#add#(#stackEl#.#module#.#getModuleRevisionId#(#)#)#;#stackEl#.#isLoopIntermediateElement#=#true#;#loopElements#.#add#(#stackEl#)#;#}#elemOfLoop#.#add#(#this#.#module#.#getModuleRevisionId#(#)#)#;#ModuleRevisionId#[#]#mrids#=#(#ModuleRevisionId#[#]#)#elemOfLoop#.#toArray#(#new#ModuleRevisionId#[#elemOfLoop#.#size#(#)#]#)#;#depStrategy#.#handleCircularDependency#(#mrids#)#;#return#true#;#}#else#{#return#false#;#}#}##void#addToSortedListIfRequired#(#List#sorted#)#{#if#(#!#isLoopIntermediateElement#)#{#addToSortList#(#sorted#)#;#}#}##void#addToSortList#(#List#sortedList#)#{#for#(#Iterator#it#=#loopElements#.#iterator#(#)#;#it#.#hasNext#(#)#;#)#{#ModuleInSort#moduleInLoop#=#(#ModuleInSort#)#it#.#next#(#)#;#moduleInLoop#.#addToSortList#(#sortedList#)#;#}#if#(#!#this#.#isSorted#(#)#)#{#sortedList#.#add#(#module#)#;#this#.#isSorted#=#true#;#}#}##String#toString#(#)#{#return#module#.#getModuleRevisionId#(#)#.#toString#(#)#;#}##DependencyDescriptor#[#]#getDependencies#(#)#{#return#module#.#getDependencies#(#)#;#}##void#logLoopWarning#(#List#loopElement#)#{#Message#.#warn#(#"circular dependency detected during sort: "#+#CircularDependencyHelper#.#formatMessageFromDescriptors#(#loopElement#)#)#;#}##boolean#match#(#DependencyDescriptor#descriptor#,#VersionMatcher#versionMatcher#)#{#ModuleDescriptor#md#=#module#;#return#md#.#getResolvedModuleRevisionId#(#)#.#getRevision#(#)#==#null#||#md#.#getResolvedModuleRevisionId#(#)#.#getRevision#(#)#.#equals#(#Ivy#.#getWorkingRevision#(#)#)#||#versionMatcher#.#accept#(#descriptor#.#getDependencyRevisionId#(#)#,#md#)#;#// Checking md.getResolvedModuleRevisionId().getRevision().equals(Ivy.getWorkingRevision()#// allow to consider any local non resolved ivy.xml#// as a valid module.#}##ModuleDescriptor#getSortedModuleDescriptor#(#)#{#return#module#;#}##