void#setUp#(#)#throws#Exception#{#FileUtil#.#forceDelete#(#new#File#(#"build/test/cache"#)#)#;#}##void#tearDown#(#)#throws#Exception#{#FileUtil#.#forceDelete#(#new#File#(#"build/test/cache"#)#)#;#}##void#testConcurrentResolve#(#)#throws#Exception#{#// we use different settings because Ivy do not support multi thread resolve with the same#// settings yet and this is not what this test is about: the focus of this test is running#// concurrent resolves in separate vms but using the same cache. We don't span the test on#// multiple vms, but using separate settings we should only run into shared cache related#// issues, and not multi thread related issues.#IvySettings#settings1#=#new#IvySettings#(#)#;#IvySettings#settings2#=#new#IvySettings#(#)#;#IvySettings#settings3#=#new#IvySettings#(#)#;#// run 3 concurrent resolves, one taking 100ms to download files, one 20ms and one 5ms#// the first one do 10 resolves, the second one 20 and the third 50#// note that the download time is useful only at the very beginning, then the cached file is used#ResolveThread#t1#=#asyncResolve#(#settings1#,#createSlowResolver#(#settings1#,#100#)#,#"org6#mod6.4;3"#,#10#)#;#ResolveThread#t2#=#asyncResolve#(#settings2#,#createSlowResolver#(#settings2#,#20#)#,#"org6#mod6.4;3"#,#20#)#;#ResolveThread#t3#=#asyncResolve#(#settings3#,#createSlowResolver#(#settings3#,#5#)#,#"org6#mod6.4;3"#,#50#)#;#t1#.#join#(#100000#)#;#t2#.#join#(#20000#)#;#t3#.#join#(#20000#)#;#assertEquals#(#10#,#t1#.#getCount#(#)#)#;#assertFound#(#"org6#mod6.4;3"#,#t1#.#getFinalResult#(#)#)#;#assertEquals#(#20#,#t2#.#getCount#(#)#)#;#assertFound#(#"org6#mod6.4;3"#,#t2#.#getFinalResult#(#)#)#;#assertEquals#(#50#,#t3#.#getCount#(#)#)#;#assertFound#(#"org6#mod6.4;3"#,#t3#.#getFinalResult#(#)#)#;#}##RepositoryCacheManager#newCacheManager#(#IvySettings#settings#)#{#DefaultRepositoryCacheManager#cacheManager#=#new#DefaultRepositoryCacheManager#(#"cache"#,#settings#,#new#File#(#"build/test/cache"#)#)#;#cacheManager#.#setLockStrategy#(#new#ArtifactLockStrategy#(#)#)#;#return#cacheManager#;#}##FileSystemResolver#createSlowResolver#(#IvySettings#settings#,#final#int#sleep#)#{#FileSystemResolver#resolver#=#new#FileSystemResolver#(#)#;#resolver#.#setRepositoryCacheManager#(#newCacheManager#(#settings#)#)#;#resolver#.#setRepository#(#new#FileRepository#(#)#{#private#RepositoryCopyProgressListener#progress#=#new#RepositoryCopyProgressListener#(#this#)#{#public#void#progress#(#CopyProgressEvent#evt#)#{#super#.#progress#(#evt#)#;#sleepSilently#(#sleep#)#;#// makes the file copy longer to test concurrency issues#}#}#;#protected#RepositoryCopyProgressListener#getProgressListener#(#)#{#return#progress#;#}#}#)#;#resolver#.#setName#(#"test"#)#;#resolver#.#setSettings#(#settings#)#;#resolver#.#addIvyPattern#(#settings#.#getBaseDir#(#)#+#"/test/repositories/1/[organisation]/[module]/[type]s/[artifact]-[revision].[ext]"#)#;#resolver#.#addArtifactPattern#(#settings#.#getBaseDir#(#)#+#"/test/repositories/1/[organisation]/[module]/[type]s/[artifact]-[revision].[ext]"#)#;#return#resolver#;#}##void#progress#(#CopyProgressEvent#evt#)#{#super#.#progress#(#evt#)#;#sleepSilently#(#sleep#)#;#// makes the file copy longer to test concurrency issues#}##RepositoryCopyProgressListener#getProgressListener#(#)#{#return#progress#;#}##ResolveThread#asyncResolve#(#IvySettings#settings#,#FileSystemResolver#resolver#,#String#module#,#int#loop#)#{#ResolveThread#thread#=#new#ResolveThread#(#settings#,#resolver#,#module#,#loop#)#;#thread#.#start#(#)#;#return#thread#;#}##void#assertFound#(#String#module#,#ResolvedModuleRevision#rmr#)#{#assertNotNull#(#rmr#)#;#assertEquals#(#module#,#rmr#.#getId#(#)#.#toString#(#)#)#;#}##ResolvedModuleRevision#resolveModule#(#IvySettings#settings#,#FileSystemResolver#resolver#,#String#module#)#throws#ParseException#{#return#resolver#.#getDependency#(#new#DefaultDependencyDescriptor#(#ModuleRevisionId#.#parse#(#module#)#,#false#)#,#new#ResolveData#(#new#ResolveEngine#(#settings#,#new#EventManager#(#)#,#new#SortEngine#(#settings#)#)#,#new#ResolveOptions#(#)#)#)#;#}##void#sleepSilently#(#int#timeout#)#{#try#{#Thread#.#sleep#(#timeout#)#;#}#catch#(#InterruptedException#e#)#{#}#}##ResolvedModuleRevision#getFinalResult#(#)#{#return#finalResult#;#}##int#getCount#(#)#{#return#count#;#}##void#run#(#)#{#ResolvedModuleRevision#rmr#=#null#;#for#(#int#i#=#0#;#i#<#loop#;#i#++#)#{#try#{#rmr#=#resolveModule#(#settings#,#resolver#,#module#)#;#if#(#rmr#==#null#)#{#throw#new#RuntimeException#(#"module not found: "#+#module#)#;#}#synchronized#(#this#)#{#//Message.info(this.toString() + " count = " + count);#count#++#;#}#}#catch#(#ParseException#e#)#{#Message#.#info#(#"parse exception "#+#e#)#;#}#catch#(#RuntimeException#e#)#{#Message#.#info#(#"exception "#+#e#)#;#e#.#printStackTrace#(#)#;#throw#e#;#}#catch#(#Error#e#)#{#Message#.#info#(#"exception "#+#e#)#;#e#.#printStackTrace#(#)#;#throw#e#;#}#}#synchronized#(#this#)#{#finalResult#=#rmr#;#}#}##