boolean#acquireLock#(#File#file#)#throws#InterruptedException#{#if#(#isDebugLocking#(#)#)#{#debugLocking#(#"acquiring lock on "#+#file#)#;#}#long#start#=#System#.#currentTimeMillis#(#)#;#do#{#synchronized#(#this#)#{#if#(#hasLock#(#file#)#)#{#int#holdLocks#=#incrementLock#(#file#)#;#if#(#isDebugLocking#(#)#)#{#debugLocking#(#"reentrant lock acquired on "#+#file#+#" in "#+#(#System#.#currentTimeMillis#(#)#-#start#)#+#"ms"#+#" - hold locks = "#+#holdLocks#)#;#}#return#true#;#}#if#(#locker#.#tryLock#(#file#)#)#{#if#(#isDebugLocking#(#)#)#{#debugLocking#(#"lock acquired on "#+#file#+#" in "#+#(#System#.#currentTimeMillis#(#)#-#start#)#+#"ms"#)#;#}#incrementLock#(#file#)#;#return#true#;#}#}#Thread#.#sleep#(#SLEEP_TIME#)#;#}#while#(#System#.#currentTimeMillis#(#)#-#start#<#timeout#)#;#return#false#;#}##void#releaseLock#(#File#file#)#{#synchronized#(#this#)#{#int#holdLocks#=#decrementLock#(#file#)#;#if#(#holdLocks#==#0#)#{#locker#.#unlock#(#file#)#;#if#(#isDebugLocking#(#)#)#{#debugLocking#(#"lock released on "#+#file#)#;#}#}#else#{#if#(#isDebugLocking#(#)#)#{#debugLocking#(#"reentrant lock released on "#+#file#+#" - hold locks = "#+#holdLocks#)#;#}#}#}#}##void#debugLocking#(#String#msg#)#{#Message#.#info#(#Thread#.#currentThread#(#)#+#" "#+#System#.#currentTimeMillis#(#)#+#" "#+#msg#)#;#}##boolean#hasLock#(#File#file#)#{#Integer#c#=#(#Integer#)#currentLockCounters#.#get#(#file#)#;#return#c#!=#null#&&#c#.#intValue#(#)#>#0#;#}##int#incrementLock#(#File#file#)#{#Integer#c#=#(#Integer#)#currentLockCounters#.#get#(#file#)#;#int#holdLocks#=#c#==#null#?#1#:#c#.#intValue#(#)#+#1#;#currentLockCounters#.#put#(#file#,#new#Integer#(#holdLocks#)#)#;#return#holdLocks#;#}##int#decrementLock#(#File#file#)#{#Integer#c#=#(#Integer#)#currentLockCounters#.#get#(#file#)#;#int#dc#=#c#==#null#?#0#:#c#.#intValue#(#)#-#1#;#currentLockCounters#.#put#(#file#,#new#Integer#(#dc#)#)#;#return#dc#;#}##boolean#tryLock#(#File#file#)#{#try#{#if#(#file#.#getParentFile#(#)#.#exists#(#)#||#file#.#getParentFile#(#)#.#mkdirs#(#)#)#{#if#(#file#.#createNewFile#(#)#)#{#return#true#;#}#else#{#if#(#debugLocking#)#{#debugLocking#(#"file creation failed "#+#file#)#;#}#}#}#}#catch#(#IOException#e#)#{#// ignored#Message#.#verbose#(#"file creation failed due to an exception: "#+#e#.#getMessage#(#)#+#" ("#+#file#+#")"#)#;#}#return#false#;#}##void#unlock#(#File#file#)#{#file#.#delete#(#)#;#}##boolean#tryLock#(#File#file#)#{#try#{#if#(#file#.#getParentFile#(#)#.#exists#(#)#||#file#.#getParentFile#(#)#.#mkdirs#(#)#)#{#RandomAccessFile#raf#=#new#RandomAccessFile#(#file#,#"rw"#)#;#FileChannel#channel#=#raf#.#getChannel#(#)#;#try#{#FileLock#l#=#channel#.#tryLock#(#)#;#if#(#l#!=#null#)#{#synchronized#(#this#)#{#locks#.#put#(#file#,#l#)#;#}#return#true#;#}#else#{#if#(#debugLocking#)#{#debugLocking#(#"failed to acquire lock on "#+#file#)#;#}#}#}#finally#{#raf#.#close#(#)#;#}#}#}#catch#(#IOException#e#)#{#// ignored#Message#.#verbose#(#"file lock failed due to an exception: "#+#e#.#getMessage#(#)#+#" ("#+#file#+#")"#)#;#}#return#false#;#}##void#unlock#(#File#file#)#{#synchronized#(#this#)#{#FileLock#l#=#(#FileLock#)#locks#.#get#(#file#)#;#if#(#l#==#null#)#{#throw#new#IllegalArgumentException#(#"file not previously locked: "#+#file#)#;#}#try#{#l#.#release#(#)#;#}#catch#(#IOException#e#)#{#Message#.#error#(#"problem while releasing lock on "#+#file#+#": "#+#e#.#getMessage#(#)#)#;#}#}#}##