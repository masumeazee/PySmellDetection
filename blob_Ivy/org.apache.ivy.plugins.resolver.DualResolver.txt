void#add#(#DependencyResolver#resolver#)#{#if#(#ivyResolver#==#null#)#{#ivyResolver#=#resolver#;#}#else#if#(#artifactResolver#==#null#)#{#artifactResolver#=#resolver#;#}#else#{#throw#new#IllegalStateException#(#"exactly two resolvers must be added: ivy(1) and artifact(2) one"#)#;#}#}##ResolvedModuleRevision#getDependency#(#DependencyDescriptor#dd#,#ResolveData#data#)#throws#ParseException#{#if#(#ivyResolver#==#null#||#artifactResolver#==#null#)#{#throw#new#IllegalStateException#(#"exactly two resolvers must be added: ivy(1) and artifact(2) one"#)#;#}#ResolvedModuleRevision#resolved#=#data#.#getCurrentResolvedModuleRevision#(#)#;#data#=#new#ResolveData#(#data#,#doValidate#(#data#)#)#;#final#ResolvedModuleRevision#mr#=#ivyResolver#.#getDependency#(#dd#,#data#)#;#if#(#mr#==#null#)#{#checkInterrupted#(#)#;#if#(#isAllownomd#(#)#)#{#Message#.#verbose#(#"ivy resolver didn't find "#+#dd#+#": trying with artifact resolver"#)#;#return#artifactResolver#.#getDependency#(#dd#,#data#)#;#}#else#{#return#null#;#}#}#else#{#if#(#mr#==#resolved#)#{#// nothing has actually been resolved here, we don't need to touch the returned rmr#return#mr#;#}#return#new#ResolvedModuleRevision#(#mr#.#getResolver#(#)#,#this#,#mr#.#getDescriptor#(#)#,#mr#.#getReport#(#)#,#mr#.#isForce#(#)#)#;#}#}##ResolvedResource#findIvyFileRef#(#DependencyDescriptor#dd#,#ResolveData#data#)#{#return#ivyResolver#.#findIvyFileRef#(#dd#,#data#)#;#}##void#reportFailure#(#)#{#ivyResolver#.#reportFailure#(#)#;#artifactResolver#.#reportFailure#(#)#;#}##void#reportFailure#(#Artifact#art#)#{#ivyResolver#.#reportFailure#(#art#)#;#artifactResolver#.#reportFailure#(#art#)#;#}##DownloadReport#download#(#Artifact#[#]#artifacts#,#DownloadOptions#options#)#{#return#artifactResolver#.#download#(#artifacts#,#options#)#;#}##DependencyResolver#getArtifactResolver#(#)#{#return#artifactResolver#;#}##void#setArtifactResolver#(#DependencyResolver#artifactResolver#)#{#this#.#artifactResolver#=#artifactResolver#;#}##DependencyResolver#getIvyResolver#(#)#{#return#ivyResolver#;#}##void#setIvyResolver#(#DependencyResolver#ivyResolver#)#{#this#.#ivyResolver#=#ivyResolver#;#}##void#publish#(#Artifact#artifact#,#File#src#,#boolean#overwrite#)#throws#IOException#{#if#(#"ivy"#.#equals#(#artifact#.#getType#(#)#)#)#{#ivyResolver#.#publish#(#artifact#,#src#,#overwrite#)#;#}#else#{#artifactResolver#.#publish#(#artifact#,#src#,#overwrite#)#;#}#}##void#abortPublishTransaction#(#)#throws#IOException#{#ivyResolver#.#abortPublishTransaction#(#)#;#artifactResolver#.#abortPublishTransaction#(#)#;#}##void#beginPublishTransaction#(#ModuleRevisionId#module#,#boolean#overwrite#)#throws#IOException#{#ivyResolver#.#beginPublishTransaction#(#module#,#overwrite#)#;#artifactResolver#.#beginPublishTransaction#(#module#,#overwrite#)#;#}##void#commitPublishTransaction#(#)#throws#IOException#{#ivyResolver#.#commitPublishTransaction#(#)#;#artifactResolver#.#commitPublishTransaction#(#)#;#}##void#dumpSettings#(#)#{#if#(#ivyResolver#==#null#||#artifactResolver#==#null#)#{#throw#new#IllegalStateException#(#"exactly two resolvers must be added: ivy(1) and artifact(2) one"#)#;#}#Message#.#verbose#(#"\t"#+#getName#(#)#+#" [dual "#+#ivyResolver#.#getName#(#)#+#" "#+#artifactResolver#.#getName#(#)#+#"]"#)#;#}##boolean#exists#(#Artifact#artifact#)#{#if#(#artifact#.#isMetadata#(#)#)#{#return#ivyResolver#.#exists#(#artifact#)#;#}#else#{#return#artifactResolver#.#exists#(#artifact#)#;#}#}##ArtifactOrigin#locate#(#Artifact#artifact#)#{#if#(#artifact#.#isMetadata#(#)#)#{#return#ivyResolver#.#locate#(#artifact#)#;#}#else#{#return#artifactResolver#.#locate#(#artifact#)#;#}#}##ArtifactDownloadReport#download#(#ArtifactOrigin#artifact#,#DownloadOptions#options#)#{#if#(#artifact#.#getArtifact#(#)#.#isMetadata#(#)#)#{#return#ivyResolver#.#download#(#artifact#,#options#)#;#}#else#{#return#artifactResolver#.#download#(#artifact#,#options#)#;#}#}##boolean#isAllownomd#(#)#{#return#allownomd#;#}##void#setAllownomd#(#boolean#allownomd#)#{#Message#.#deprecated#(#"allownomd is deprecated, please use descriptor=\""#+#(#allownomd#?#DESCRIPTOR_OPTIONAL#:#DESCRIPTOR_REQUIRED#)#+#"\" instead"#)#;#this#.#allownomd#=#allownomd#;#}##void#setDescriptor#(#String#descriptorRule#)#{#if#(#DESCRIPTOR_REQUIRED#.#equals#(#descriptorRule#)#)#{#allownomd#=#false#;#}#else#if#(#DESCRIPTOR_OPTIONAL#.#equals#(#descriptorRule#)#)#{#allownomd#=#true#;#}#else#{#throw#new#IllegalArgumentException#(#"unknown descriptor rule '"#+#descriptorRule#+#"'. Allowed rules are: "#+#Arrays#.#asList#(#new#String#[#]#{#DESCRIPTOR_REQUIRED#,#DESCRIPTOR_OPTIONAL#}#)#)#;#}#}##