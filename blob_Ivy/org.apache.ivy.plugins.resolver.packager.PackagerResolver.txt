void#run#(#)#{#clearCache#(#)#;#}##void#clearCache#(#)#{#if#(#this#.#preserve#)#{#return#;#}#for#(#Iterator#i#=#packagerCache#.#values#(#)#.#iterator#(#)#;#i#.#hasNext#(#)#;#)#{#PackagerCacheEntry#entry#=#(#PackagerCacheEntry#)#i#.#next#(#)#;#entry#.#cleanup#(#)#;#}#packagerCache#.#clear#(#)#;#if#(#this#.#buildRoot#!=#null#)#{#FileUtil#.#forceDelete#(#this#.#buildRoot#)#;#}#}##void#setBuildRoot#(#File#buildRoot#)#{#this#.#buildRoot#=#buildRoot#;#}##File#getBuildRoot#(#)#{#return#buildRoot#;#}##void#setResourceCache#(#File#resourceCache#)#{#this#.#resourceCache#=#resourceCache#;#}##File#getResourceCache#(#)#{#return#resourceCache#;#}##void#setResourceURL#(#String#resourceURL#)#{#this#.#resourceURL#=#resourceURL#;#}##void#setPackagerPattern#(#String#pattern#)#{#ArrayList#list#=#new#ArrayList#(#)#;#list#.#add#(#pattern#)#;#setArtifactPatterns#(#list#)#;#}##void#setPreserveBuildDirectories#(#boolean#preserve#)#{#this#.#preserve#=#preserve#;#}##void#setRestricted#(#boolean#restricted#)#{#this#.#restricted#=#restricted#;#}##void#setVerbose#(#boolean#verbose#)#{#this#.#verbose#=#verbose#;#}##void#setQuiet#(#boolean#quiet#)#{#this#.#quiet#=#quiet#;#}##void#setValidate#(#boolean#validate#)#{#this#.#validate#=#validate#;#}##void#setAllownomd#(#boolean#b#)#{#Message#.#error#(#"allownomd not supported by resolver "#+#this#)#;#}##void#setDescriptor#(#String#rule#)#{#if#(#DESCRIPTOR_OPTIONAL#.#equals#(#rule#)#)#{#Message#.#error#(#"descriptor=\""#+#DESCRIPTOR_OPTIONAL#+#"\" not supported by resolver "#+#this#)#;#return#;#}#super#.#setDescriptor#(#rule#)#;#}##void#setProperty#(#String#propertyKey#,#String#propertyValue#)#{#properties#.#put#(#propertyKey#,#propertyValue#)#;#}##void#validate#(#)#{#super#.#validate#(#)#;#if#(#this#.#buildRoot#==#null#)#{#throw#new#IllegalStateException#(#"no buildRoot specified"#)#;#}#if#(#getArtifactPatterns#(#)#.#size#(#)#==#0#)#{#throw#new#IllegalStateException#(#"no packager pattern specified"#)#;#}#}##ResolvedResource#findArtifactRef#(#Artifact#artifact#,#Date#date#)#{#// For our special packager.xml file, defer to superclass#if#(#PACKAGER_ARTIFACT_NAME#.#equals#(#artifact#.#getName#(#)#)#&&#PACKAGER_ARTIFACT_TYPE#.#equals#(#artifact#.#getType#(#)#)#&&#PACKAGER_ARTIFACT_EXT#.#equals#(#artifact#.#getExt#(#)#)#)#{#return#super#.#findArtifactRef#(#artifact#,#date#)#;#}#// Check the cache#ModuleRevisionId#mr#=#artifact#.#getModuleRevisionId#(#)#;#PackagerCacheEntry#entry#=#(#PackagerCacheEntry#)#packagerCache#.#get#(#mr#)#;#// Ignore invalid entries#if#(#entry#!=#null#&&#!#entry#.#isBuilt#(#)#)#{#packagerCache#.#remove#(#mr#)#;#entry#.#cleanup#(#)#;#entry#=#null#;#}#// Build the artifacts (if not done already)#if#(#entry#==#null#)#{#ResolvedResource#packager#=#findArtifactRef#(#new#DefaultArtifact#(#mr#,#null#,#PACKAGER_ARTIFACT_NAME#,#PACKAGER_ARTIFACT_TYPE#,#PACKAGER_ARTIFACT_EXT#)#,#date#)#;#if#(#packager#==#null#)#{#return#null#;#}#entry#=#new#PackagerCacheEntry#(#mr#,#this#.#buildRoot#,#this#.#resourceCache#,#this#.#resourceURL#,#this#.#validate#,#this#.#preserve#,#this#.#restricted#,#this#.#verbose#,#this#.#quiet#)#;#try#{#entry#.#build#(#packager#.#getResource#(#)#,#properties#)#;#}#catch#(#IOException#e#)#{#throw#new#RuntimeException#(#"can't build artifact "#+#artifact#,#e#)#;#}#packagerCache#.#put#(#mr#,#entry#)#;#}#// Return reference to desired artifact#return#entry#.#getBuiltArtifact#(#artifact#)#;#}##String#getTypeName#(#)#{#return#"packager"#;#}##