void#determineDependencies#(#)#throws#IOException#{#affectedClassMap#=#new#Hashtable#(#)#;#classFileInfoMap#=#new#Hashtable#(#)#;#boolean#cacheDirty#=#false#;#Hashtable#dependencyMap#=#new#Hashtable#(#)#;#File#cacheFile#=#null#;#boolean#cacheFileExists#=#true#;#long#cacheLastModified#=#Long#.#MAX_VALUE#;##// read the dependency cache from the disk##if#(#cache#!=#null#)#{#cacheFile#=#new#File#(#cache#,#CACHE_FILE_NAME#)#;#cacheFileExists#=#cacheFile#.#exists#(#)#;#cacheLastModified#=#cacheFile#.#lastModified#(#)#;##if#(#cacheFileExists#)#{#dependencyMap#=#readCachedDependencies#(#cacheFile#)#;#}#}##Enumeration#classfileEnum#=#getClassFiles#(#destPath#)#.#elements#(#)#;##while#(#classfileEnum#.#hasMoreElements#(#)#)#{#ClassFileInfo#info#=#(#ClassFileInfo#)#classfileEnum#.#nextElement#(#)#;#log#(#"Adding class info for "#+#info#.#className#,#Project#.#MSG_DEBUG#)#;#classFileInfoMap#.#put#(#info#.#className#,#info#)#;#Vector#dependencyList#=#null#;##if#(#cache#!=#null#)#{##// try to read the dependency info from the map if it is##// not out of date##if#(#cacheFileExists#&&#cacheLastModified#>#info#.#absoluteFile#.#lastModified#(#)#)#{##// depFile exists and is newer than the class file##// need to get dependency list from the map.#dependencyList#=#(#Vector#)#dependencyMap#.#get#(#info#.#className#)#;#}#}##if#(#dependencyList#==#null#)#{##// not cached - so need to read directly from the class file#DependencyAnalyzer#analyzer#=#new#AntAnalyzer#(#)#;#analyzer#.#addRootClass#(#info#.#className#)#;#analyzer#.#addClassPath#(#destPath#)#;#analyzer#.#setClosure#(#false#)#;#dependencyList#=#new#Vector#(#)#;#Enumeration#depEnum#=#analyzer#.#getClassDependencies#(#)#;##while#(#depEnum#.#hasMoreElements#(#)#)#{#Object#o#=#depEnum#.#nextElement#(#)#;#dependencyList#.#addElement#(#o#)#;#log#(#"Class "#+#info#.#className#+#" depends on "#+#o#,#Project#.#MSG_DEBUG#)#;#}##cacheDirty#=#true#;#dependencyMap#.#put#(#info#.#className#,#dependencyList#)#;#}##// This class depends on each class in the dependency list. For each##// one of those, add this class into their affected classes list#Enumeration#depEnum#=#dependencyList#.#elements#(#)#;##while#(#depEnum#.#hasMoreElements#(#)#)#{#String#dependentClass#=#(#String#)#depEnum#.#nextElement#(#)#;#Hashtable#affectedClasses#=#(#Hashtable#)#affectedClassMap#.#get#(#dependentClass#)#;##if#(#affectedClasses#==#null#)#{#affectedClasses#=#new#Hashtable#(#)#;#affectedClassMap#.#put#(#dependentClass#,#affectedClasses#)#;#}##affectedClasses#.#put#(#info#.#className#,#info#)#;#log#(#dependentClass#+#" affects "#+#info#.#className#,#Project#.#MSG_DEBUG#)#;#}#}##classpathDependencies#=#null#;#Path#checkPath#=#getCheckClassPath#(#)#;##if#(#checkPath#!=#null#)#{##// now determine which jars each class depends upon#classpathDependencies#=#new#Hashtable#(#)#;#AntClassLoader#loader#=#null#;##try#{#loader#=#getProject#(#)#.#createClassLoader#(#checkPath#)#;#Hashtable#classpathFileCache#=#new#Hashtable#(#)#;#Object#nullFileMarker#=#new#Object#(#)#;##for#(#Enumeration#e#=#dependencyMap#.#keys#(#)#;##e#.#hasMoreElements#(#)#;#)#{#String#className#=#(#String#)#e#.#nextElement#(#)#;#log#(#"Determining classpath dependencies for "#+#className#,#Project#.#MSG_DEBUG#)#;#Vector#dependencyList#=#(#Vector#)#dependencyMap#.#get#(#className#)#;#Hashtable#dependencies#=#new#Hashtable#(#)#;#classpathDependencies#.#put#(#className#,#dependencies#)#;#Enumeration#e2#=#dependencyList#.#elements#(#)#;##while#(#e2#.#hasMoreElements#(#)#)#{#String#dependency#=#(#String#)#e2#.#nextElement#(#)#;#log#(#"Looking for "#+#dependency#,#Project#.#MSG_DEBUG#)#;#Object#classpathFileObject#=#classpathFileCache#.#get#(#dependency#)#;##if#(#classpathFileObject#==#null#)#{#classpathFileObject#=#nullFileMarker#;##if#(#!#dependency#.#startsWith#(#"java."#)#&&#!#dependency#.#startsWith#(#"javax."#)#)#{#URL#classURL#=#loader#.#getResource#(#dependency#.#replace#(#'.'#,#'/'#)#+#".class"#)#;#log#(#"URL is "#+#classURL#,#Project#.#MSG_DEBUG#)#;##if#(#classURL#!=#null#)#{##if#(#classURL#.#getProtocol#(#)#.#equals#(#"jar"#)#)#{#String#jarFilePath#=#classURL#.#getFile#(#)#;#int#classMarker#=#jarFilePath#.#indexOf#(#'!'#)#;#jarFilePath#=#jarFilePath#.#substring#(#0#,#classMarker#)#;##if#(#jarFilePath#.#startsWith#(#"file:"#)#)#{#classpathFileObject#=#new#File#(#FileUtils#.#getFileUtils#(#)#.#fromURI#(#jarFilePath#)#)#;#}#else#{#throw#new#IOException#(#"Bizarre nested path in jar: protocol: "#+#jarFilePath#)#;#}#}#else##if#(#classURL#.#getProtocol#(#)#.#equals#(#"file"#)#)#{#classpathFileObject#=#new#File#(#FileUtils#.#getFileUtils#(#)#.#fromURI#(#classURL#.#toExternalForm#(#)#)#)#;#}##log#(#"Class "#+#className#+#" depends on "#+#classpathFileObject#+#" due to "#+#dependency#,#Project#.#MSG_DEBUG#)#;#}#}#else#{#log#(#"Ignoring base classlib dependency "#+#dependency#,#Project#.#MSG_DEBUG#)#;#}##classpathFileCache#.#put#(#dependency#,#classpathFileObject#)#;#}##if#(#classpathFileObject#!=#nullFileMarker#)#{##// we need to add this jar to the list for this class.#File#jarFile#=#(#File#)#classpathFileObject#;#log#(#"Adding a classpath dependency on "#+#jarFile#,#Project#.#MSG_DEBUG#)#;#dependencies#.#put#(#jarFile#,#jarFile#)#;#}#}#}#}##finally#{##if#(#loader#!=#null#)#{#loader#.#cleanup#(#)#;#}#}#}#else#{#log#(#"No classpath to check"#,#Project#.#MSG_DEBUG#)#;#}##// write the dependency cache to the disk##if#(#cache#!=#null#&&#cacheDirty#)#{#writeCachedDependencies#(#dependencyMap#)#;#}#}