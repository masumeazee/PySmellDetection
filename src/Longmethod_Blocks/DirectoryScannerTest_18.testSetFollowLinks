void#testSetFollowLinks#(#)#throws#IOException#{##if#(#supportsSymlinks#)#{#File#linkFile#=#new#File#(#System#.#getProperty#(#"root"#)#,#"src/main/org/apache/tools/ThisIsALink"#)#;#System#.#err#.#println#(#"link exists pre-test? "#+#linkFile#.#exists#(#)#)#;##try#{##// add conditions and more commands as soon as the need arises#String#[#]#command#=#new#String#[#]#{#"ln"#,#"-s"#,#"ant"#,#linkFile#.#getAbsolutePath#(#)#}#;##try#{#Runtime#.#getRuntime#(#)#.#exec#(#command#)#;##// give ourselves some time for the system call##// to execute... tweak if you have a really over##// loaded system.#Thread#.#sleep#(#1000#)#;#}##catch#(#IOException#ioe#)#{#fail#(#"IOException making link "#+#ioe#)#;#}##catch#(#InterruptedException#ie#)#{#}##File#dir#=#new#File#(#System#.#getProperty#(#"root"#)#,#"src/main/org/apache/tools"#)#;#System#.#err#.#println#(#"link exists after exec? "#+#linkFile#.#exists#(#)#)#;#System#.#err#.#println#(#"Ant knows it is a link? "#+#SymbolicLinkUtils#.#getSymbolicLinkUtils#(#)#.#isSymbolicLink#(#dir#,#"ThisIsALink"#)#)#;#DirectoryScanner#ds#=#new#DirectoryScanner#(#)#;##// followLinks should be true by default, but if this ever##// changes we will need this line.#ds#.#setFollowSymlinks#(#true#)#;#ds#.#setBasedir#(#dir#)#;#ds#.#setExcludes#(#new#String#[#]#{#"ant/**"#}#)#;#ds#.#scan#(#)#;#boolean#haveZipPackage#=#false#;#boolean#haveTaskdefsPackage#=#false#;#String#[#]#included#=#ds#.#getIncludedDirectories#(#)#;##for#(#int#i#=#0#;##i#<#included#.#length#;#i#++#)#{##if#(#included#[#i#]#.#equals#(#"zip"#)#)#{#haveZipPackage#=#true#;#}#else##if#(#included#[#i#]#.#equals#(#"ThisIsALink"#+#File#.#separator#+#"taskdefs"#)#)#{#haveTaskdefsPackage#=#true#;#}#}##// if we followed the symlink we just made we should##// bypass the excludes.#assertTrue#(#"(1) zip package included"#,#haveZipPackage#)#;#assertTrue#(#"(1) taskdefs package included"#,#haveTaskdefsPackage#)#;#ds#=#new#DirectoryScanner#(#)#;#ds#.#setFollowSymlinks#(#false#)#;#ds#.#setBasedir#(#dir#)#;#ds#.#setExcludes#(#new#String#[#]#{#"ant/**"#}#)#;#ds#.#scan#(#)#;#haveZipPackage#=#false#;#haveTaskdefsPackage#=#false#;#included#=#ds#.#getIncludedDirectories#(#)#;##for#(#int#i#=#0#;##i#<#included#.#length#;#i#++#)#{##if#(#included#[#i#]#.#equals#(#"zip"#)#)#{#haveZipPackage#=#true#;#}#else##if#(#included#[#i#]#.#equals#(#"ThisIsALink"#+#File#.#separator#+#"taskdefs"#)#)#{#haveTaskdefsPackage#=#true#;#}#}##assertTrue#(#"(2) zip package included"#,#haveZipPackage#)#;#assertTrue#(#"(2) taskdefs package not included"#,#!#haveTaskdefsPackage#)#;#}##finally#{#System#.#err#.#println#(#"link exists pre-delete? "#+#linkFile#.#exists#(#)#)#;##if#(#!#linkFile#.#delete#(#)#)#{#throw#new#RuntimeException#(#"Failed to delete "#+#linkFile#)#;#}##System#.#err#.#println#(#"link exists post-delete? "#+#linkFile#.#exists#(#)#)#;#}#}#}