int#read#(#)#throws#IOException#{#int#thisChar#=#super#.#read#(#)#;##if#(#normalizedEOL#==#0#)#{#int#numEOL#=#0#;#boolean#atEnd#=#false#;##switch#(#thisChar#)#{#case#CTRLZ#:#int#c#=#super#.#read#(#)#;##if#(#c#==#-#1#)#{#atEnd#=#true#;##if#(#fixLast#&&#!#previousWasEOL#)#{#numEOL#=#1#;#push#(#thisChar#)#;#}#}#else#{#push#(#c#)#;#}##break#;#case#-#1#:#atEnd#=#true#;##if#(#fixLast#&&#!#previousWasEOL#)#{#numEOL#=#1#;#}##break#;#case#'\n'#:##// EOL was "\n"#numEOL#=#1#;#break#;#case#'\r'#:#numEOL#=#1#;#int#c1#=#super#.#read#(#)#;#int#c2#=#super#.#read#(#)#;##if#(#c1#==#'\r'#&&#c2#==#'\n'#)#{##// EOL was "\r\r\n"#}#else##if#(#c1#==#'\r'#)#{##// EOL was "\r\r" - handle as two consecutive "\r" and##// "\r"#numEOL#=#2#;#push#(#c2#)#;#}#else##if#(#c1#==#'\n'#)#{##// EOL was "\r\n"#push#(#c2#)#;#}#else#{##// EOL was "\r"#push#(#c2#)#;#push#(#c1#)#;#}##default#:##// Fall tru#}##if#(#numEOL#>#0#)#{#while#(#numEOL#--#>#0#)#{#push#(#eol#)#;#normalizedEOL#+=#eol#.#length#;#}##previousWasEOL#=#true#;#thisChar#=#read#(#)#;#}#else##if#(#!#atEnd#)#{#previousWasEOL#=#false#;#}#}#else#{#normalizedEOL#--#;#}##return#thisChar#;#}