JUnitTaskMirror#.#JUnitResultFormatterMirror#createFormatter#(#ClassLoader#loader#)#throws#BuildException#{##if#(#classname#==#null#)#{#throw#new#BuildException#(#"you must specify type or classname"#)#;#}##//although this code appears to duplicate that of ClasspathUtils.newInstance,##//we cannot use that because this formatter may run in a forked process,##//without that class.#Class#f#=#null#;##try#{##if#(#loader#==#null#)#{#f#=#Class#.#forName#(#classname#)#;#}#else#{#f#=#Class#.#forName#(#classname#,#true#,#loader#)#;#}#}##catch#(#ClassNotFoundException#e#)#{#throw#new#BuildException#(#"Using loader "#+#loader#+#" on class "#+#classname#+#": "#+#e#,#e#)#;#}##catch#(#NoClassDefFoundError#e#)#{#throw#new#BuildException#(#"Using loader "#+#loader#+#" on class "#+#classname#+#": "#+#e#,#e#)#;#}##Object#o#=#null#;##try#{#o#=#f#.#newInstance#(#)#;#}##catch#(#InstantiationException#e#)#{#throw#new#BuildException#(#e#)#;#}##catch#(#IllegalAccessException#e#)#{#throw#new#BuildException#(#e#)#;#}##if#(#!#(#o#instanceof#JUnitTaskMirror#.#JUnitResultFormatterMirror#)#)#{#throw#new#BuildException#(#classname#+#" is not a JUnitResultFormatter"#)#;#}##JUnitTaskMirror#.#JUnitResultFormatterMirror#r#=#(#JUnitTaskMirror#.#JUnitResultFormatterMirror#)#o#;##if#(#useFile#&&#outFile#!=#null#)#{#try#{#out#=#new#BufferedOutputStream#(#new#FileOutputStream#(#outFile#)#)#;#}##catch#(#java#.#io#.#IOException#e#)#{#throw#new#BuildException#(#"Unable to open file "#+#outFile#,#e#)#;#}#}##r#.#setOutput#(#out#)#;#boolean#needToSetProjectReference#=#true#;##try#{#Field#field#=#r#.#getClass#(#)#.#getField#(#"project"#)#;#Object#value#=#field#.#get#(#r#)#;##if#(#value#instanceof#Project#)#{##// there is already a project reference so dont overwrite this#needToSetProjectReference#=#false#;#}#}##catch#(#Exception#e#)#{##// no field present, so no previous reference exists#}##if#(#needToSetProjectReference#)#{#Method#setter#;##try#{#setter#=#r#.#getClass#(#)#.#getMethod#(#"setProject"#,#new#Class#[#]#{#Project#.#class#}#)#;#setter#.#invoke#(#r#,#new#Object#[#]#{#project#}#)#;#}##catch#(#Exception#e#)#{##// no setProject to invoke; just ignore#}#}##return#r#;#}