void#testForkedExecutableName#(#)#{#assertNull#(#"no fork means no executable"#,#javac#.#getJavacExecutable#(#)#)#;#project#.#setProperty#(#"build.compiler"#,#"modern"#)#;#assertNull#(#"no fork means no executable"#,#javac#.#getJavacExecutable#(#)#)#;#javac#.#setFork#(#true#)#;#assertNotNull#(#"normal fork"#,#javac#.#getJavacExecutable#(#)#)#;#assertTrue#(#"name should contain \"javac\""#,#javac#.#getJavacExecutable#(#)#.#indexOf#(#"javac"#)#>#-#1#)#;#project#.#setProperty#(#"build.compiler"#,#"extJavac"#)#;#javac#.#setFork#(#false#)#;#assertNotNull#(#"fork via property"#,#javac#.#getJavacExecutable#(#)#)#;#assertTrue#(#"name should contain \"javac\""#,#javac#.#getJavacExecutable#(#)#.#indexOf#(#"javac"#)#>#-#1#)#;#project#.#setProperty#(#"build.compiler"#,#"whatever"#)#;#assertNull#(#"no fork and not extJavac means no executable"#,#javac#.#getJavacExecutable#(#)#)#;#String#myJavac#=#"Slartibartfast"#;#javac#.#setFork#(#true#)#;#javac#.#setExecutable#(#myJavac#)#;#assertEquals#(#myJavac#,#javac#.#getJavacExecutable#(#)#)#;#}