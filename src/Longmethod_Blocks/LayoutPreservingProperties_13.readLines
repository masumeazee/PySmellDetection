String#readLines#(#InputStream#is#)#throws#IOException#{#InputStreamReader#isr#=#new#InputStreamReader#(#is#,#"ISO-8859-1"#)#;#BufferedReader#br#=#new#BufferedReader#(#isr#)#;##if#(#logicalLines#.#size#(#)#>#0#)#{##// we add a blank line for spacing#logicalLines#.#add#(#new#Blank#(#)#)#;#}##String#s#=#br#.#readLine#(#)#;#boolean#continuation#=#false#;#boolean#comment#=#false#;#StringBuffer#fileBuffer#=#new#StringBuffer#(#)#;#StringBuffer#logicalLineBuffer#=#new#StringBuffer#(#)#;##while#(#s#!=#null#)#{#fileBuffer#.#append#(#s#)#.#append#(#LS#)#;##if#(#continuation#)#{##// put in the line feed that was removed#s#=#"\n"#+#s#;#}#else#{##// could be a comment, if first non-whitespace is a # or !#comment#=#s#.#matches#(#"^( |\t|\f)*(#|!).*"#)#;#}##// continuation if not a comment and the line ends is an##// odd number of backslashes##if#(#!#comment#)#{#continuation#=#requiresContinuation#(#s#)#;#}##logicalLineBuffer#.#append#(#s#)#;##if#(#!#continuation#)#{#LogicalLine#line#=#null#;##if#(#comment#)#{#line#=#new#Comment#(#logicalLineBuffer#.#toString#(#)#)#;#}#else##if#(#logicalLineBuffer#.#toString#(#)#.#trim#(#)#.#length#(#)#==#0#)#{#line#=#new#Blank#(#)#;#}#else#{#line#=#new#Pair#(#logicalLineBuffer#.#toString#(#)#)#;#String#key#=#unescape#(#(#(#Pair#)#line#)#.#getName#(#)#)#;##if#(#keyedPairLines#.#containsKey#(#key#)#)#{##// this key is already present, so we remove it and add##// the new one#remove#(#key#)#;#}##keyedPairLines#.#put#(#key#,#new#Integer#(#logicalLines#.#size#(#)#)#)#;#}##logicalLines#.#add#(#line#)#;#logicalLineBuffer#.#setLength#(#0#)#;#}##s#=#br#.#readLine#(#)#;#}##return#fileBuffer#.#toString#(#)#;#}