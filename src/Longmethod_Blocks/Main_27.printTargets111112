void#printTargets#(#Project#project#,#boolean#printSubTargets#)#{##// find the target with the longest name#int#maxLength#=#0#;#Map#ptargets#=#removeDuplicateTargets#(#project#.#getTargets#(#)#)#;#String#targetName#;#String#targetDescription#;#Target#currentTarget#;##// split the targets in top-level and sub-targets depending##// on the presence of a description#Vector#topNames#=#new#Vector#(#)#;#Vector#topDescriptions#=#new#Vector#(#)#;#Vector#subNames#=#new#Vector#(#)#;##for#(#Iterator#i#=#ptargets#.#values#(#)#.#iterator#(#)#;##i#.#hasNext#(#)#;#)#{#currentTarget#=#(#Target#)#i#.#next#(#)#;#targetName#=#currentTarget#.#getName#(#)#;##if#(#targetName#.#equals#(#""#)#)#{#continue#;#}##targetDescription#=#currentTarget#.#getDescription#(#)#;##// maintain a sorted list of targets##if#(#targetDescription#==#null#)#{#int#pos#=#findTargetPosition#(#subNames#,#targetName#)#;#subNames#.#insertElementAt#(#targetName#,#pos#)#;#}#else#{#int#pos#=#findTargetPosition#(#topNames#,#targetName#)#;#topNames#.#insertElementAt#(#targetName#,#pos#)#;#topDescriptions#.#insertElementAt#(#targetDescription#,#pos#)#;##if#(#targetName#.#length#(#)#>#maxLength#)#{#maxLength#=#targetName#.#length#(#)#;#}#}#}##printTargets#(#project#,#topNames#,#topDescriptions#,#"Main targets:"#,#maxLength#)#;##//if there were no main targets, we list all subtargets##//as it means nothing has a description##if#(#topNames#.#size#(#)#==#0#)#{#printSubTargets#=#true#;#}##if#(#printSubTargets#)#{#printTargets#(#project#,#subNames#,#null#,#"Other targets:"#,#0#)#;#}##String#defaultTarget#=#project#.#getDefaultTarget#(#)#;##if#(#defaultTarget#!=#null#&&#!#""#.#equals#(#defaultTarget#)#)#{##// shouldn't need to check but...#project#.#log#(#"Default target: "#+#defaultTarget#)#;#}#}