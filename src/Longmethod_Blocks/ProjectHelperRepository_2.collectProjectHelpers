void#collectProjectHelpers#(#)#{##// First, try the system property#ProjectHelper#projectHelper#=#getProjectHelperBySystemProperty#(#)#;#registerProjectHelper#(#projectHelper#)#;##// A JDK1.3 'service' ( like in JAXP ). That will plug a helper##// automatically if in CLASSPATH, with the right META-INF/services.#try#{#ClassLoader#classLoader#=#LoaderUtils#.#getContextClassLoader#(#)#;##if#(#classLoader#!=#null#)#{#Enumeration#resources#=#classLoader#.#getResources#(#ProjectHelper#.#SERVICE_ID#)#;##while#(#resources#.#hasMoreElements#(#)#)#{#URL#resource#=#(#URL#)#resources#.#nextElement#(#)#;#projectHelper#=#getProjectHelperByService#(#resource#.#openStream#(#)#)#;#registerProjectHelper#(#projectHelper#)#;#}#}##InputStream#systemResource#=#ClassLoader#.#getSystemResourceAsStream#(#ProjectHelper#.#SERVICE_ID#)#;##if#(#systemResource#!=#null#)#{#projectHelper#=#getProjectHelperByService#(#systemResource#)#;#registerProjectHelper#(#projectHelper#)#;#}#}##catch#(#Exception#e#)#{#System#.#err#.#println#(#"Unable to load ProjectHelper from service "#+#ProjectHelper#.#SERVICE_ID#+#" ("#+#e#.#getClass#(#)#.#getName#(#)#+#": "#+#e#.#getMessage#(#)#+#")"#)#;##if#(#DEBUG#)#{#e#.#printStackTrace#(#System#.#err#)#;#}#}##// last but not least, ant default project helper#projectHelper#=#new#ProjectHelper2#(#)#;#registerProjectHelper#(#projectHelper#)#;#}