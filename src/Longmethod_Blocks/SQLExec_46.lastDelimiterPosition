int#lastDelimiterPosition#(#StringBuffer#buf#,#String#currentLine#)#{##if#(#strictDelimiterMatching#)#{##if#(#(#delimiterType#.#equals#(#DelimiterType#.#NORMAL#)#&&#StringUtils#.#endsWith#(#buf#,#delimiter#)#)#||#(#delimiterType#.#equals#(#DelimiterType#.#ROW#)#&&#currentLine#.#equals#(#delimiter#)#)#)#{##return#buf#.#length#(#)#-#delimiter#.#length#(#)#;#}##// no match##return#-#1#;#}#else#{#String#d#=#delimiter#.#trim#(#)#.#toLowerCase#(#Locale#.#US#)#;##if#(#delimiterType#.#equals#(#DelimiterType#.#NORMAL#)#)#{##// still trying to avoid wasteful copying, see##// StringUtils.endsWith#int#endIndex#=#delimiter#.#length#(#)#-#1#;#int#bufferIndex#=#buf#.#length#(#)#-#1#;##while#(#bufferIndex#>=#0#&&#Character#.#isWhitespace#(#buf#.#charAt#(#bufferIndex#)#)#)#{#--#bufferIndex#;#}##if#(#bufferIndex#<#endIndex#)#{##return#-#1#;#}##while#(#endIndex#>=#0#)#{##if#(#buf#.#substring#(#bufferIndex#,#bufferIndex#+#1#)#.#toLowerCase#(#Locale#.#US#)#.#charAt#(#0#)#!=#d#.#charAt#(#endIndex#)#)#{##return#-#1#;#}##bufferIndex#--#;#endIndex#--#;#}##return#bufferIndex#+#1#;#}#else#{##return#currentLine#.#trim#(#)#.#toLowerCase#(#Locale#.#US#)#.#equals#(#d#)#?#buf#.#length#(#)#-#currentLine#.#length#(#)#:#-#1#;#}#}#}