boolean#matchPatternStart#(#String#[#]#patDirs#,#String#[#]#strDirs#,#boolean#isCaseSensitive#)#{#int#patIdxStart#=#0#;#int#patIdxEnd#=#patDirs#.#length#-#1#;#int#strIdxStart#=#0#;#int#strIdxEnd#=#strDirs#.#length#-#1#;##// up to first '**'#while#(#patIdxStart#<=#patIdxEnd#&&#strIdxStart#<=#strIdxEnd#)#{#String#patDir#=#patDirs#[#patIdxStart#]#;##if#(#patDir#.#equals#(#DEEP_TREE_MATCH#)#)#{#break#;#}##if#(#!#match#(#patDir#,#strDirs#[#strIdxStart#]#,#isCaseSensitive#)#)#{##return#false#;#}##patIdxStart#++#;#strIdxStart#++#;#}##// CheckStyle:SimplifyBooleanReturnCheck OFF##// Check turned off as the code needs the comments for the various##// code paths.##if#(#strIdxStart#>#strIdxEnd#)#{##// String is exhausted##return#true#;#}#else##if#(#patIdxStart#>#patIdxEnd#)#{##// String not exhausted, but pattern is. Failure.##return#false#;#}#else#{##// pattern now holds ** while string is not exhausted##// this will generate false positives but we can live with that.##return#true#;#}#}