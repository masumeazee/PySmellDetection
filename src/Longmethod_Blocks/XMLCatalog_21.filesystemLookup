InputSource#filesystemLookup#(#ResourceLocation#matchingEntry#)#{#String#uri#=#matchingEntry#.#getLocation#(#)#;##// the following line seems to be necessary on Windows under JDK 1.2#uri#=#uri#.#replace#(#File#.#separatorChar#,#'/'#)#;#URL#baseURL#=#null#;##//##// The ResourceLocation may specify a relative path for its##// location attribute.  This is resolved using the appropriate##// base.##//##if#(#matchingEntry#.#getBase#(#)#!=#null#)#{#baseURL#=#matchingEntry#.#getBase#(#)#;#}#else#{#try#{#baseURL#=#FILE_UTILS#.#getFileURL#(#getProject#(#)#.#getBaseDir#(#)#)#;#}##catch#(#MalformedURLException#ex#)#{#throw#new#BuildException#(#"Project basedir cannot be converted to a URL"#)#;#}#}##InputSource#source#=#null#;#URL#url#=#null#;##try#{#url#=#new#URL#(#baseURL#,#uri#)#;#}##catch#(#MalformedURLException#ex#)#{##// this processing is useful under Windows when the location of the DTD##// has been given as an absolute path##// see Bugzilla Report 23913#File#testFile#=#new#File#(#uri#)#;##if#(#testFile#.#exists#(#)#&&#testFile#.#canRead#(#)#)#{#log#(#"uri : '"#+#uri#+#"' matches a readable file"#,#Project#.#MSG_DEBUG#)#;##try#{#url#=#FILE_UTILS#.#getFileURL#(#testFile#)#;#}##catch#(#MalformedURLException#ex1#)#{#throw#new#BuildException#(#"could not find an URL for :"#+#testFile#.#getAbsolutePath#(#)#)#;#}#}#else#{#log#(#"uri : '"#+#uri#+#"' does not match a readable file"#,#Project#.#MSG_DEBUG#)#;#}#}##if#(#url#!=#null#&&#url#.#getProtocol#(#)#.#equals#(#"file"#)#)#{#String#fileName#=#FILE_UTILS#.#fromURI#(#url#.#toString#(#)#)#;##if#(#fileName#!=#null#)#{#log#(#"fileName "#+#fileName#,#Project#.#MSG_DEBUG#)#;#File#resFile#=#new#File#(#fileName#)#;##if#(#resFile#.#exists#(#)#&&#resFile#.#canRead#(#)#)#{#try#{#source#=#new#InputSource#(#new#FileInputStream#(#resFile#)#)#;#String#sysid#=#JAXPUtils#.#getSystemId#(#resFile#)#;#source#.#setSystemId#(#sysid#)#;#log#(#"catalog entry matched a readable file: '"#+#sysid#+#"'"#,#Project#.#MSG_DEBUG#)#;#}##catch#(#IOException#ex#)#{##// ignore#}#}#}#}##return#source#;#}