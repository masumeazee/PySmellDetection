void#setRestrict#(#boolean#restrict#)#{#this#.#restrict#=#restrict#;#}##boolean#isRestrict#(#)#{#return#restrict#;#}##void#setName#(#String#name#)#{#this#.#name#=#name#;#}##String#getName#(#)#{#return#name#;#}##void#setClass#(#Class#clazz#)#{#this#.#clazz#=#clazz#;#if#(#clazz#==#null#)#{#return#;#}#this#.#classLoader#=#(#classLoader#==#null#)#?#clazz#.#getClassLoader#(#)#:#classLoader#;#this#.#className#=#(#className#==#null#)#?#clazz#.#getName#(#)#:#className#;#}##void#setClassName#(#String#className#)#{#this#.#className#=#className#;#}##String#getClassName#(#)#{#return#className#;#}##void#setAdapterClass#(#Class#adapterClass#)#{#this#.#adapterClass#=#adapterClass#;#}##void#setAdaptToClass#(#Class#adaptToClass#)#{#this#.#adaptToClass#=#adaptToClass#;#}##void#setClassLoader#(#ClassLoader#classLoader#)#{#this#.#classLoader#=#classLoader#;#}##ClassLoader#getClassLoader#(#)#{#return#classLoader#;#}##Class#getExposedClass#(#Project#project#)#{#if#(#adaptToClass#!=#null#)#{#Class#z#=#getTypeClass#(#project#)#;#if#(#z#==#null#||#adaptToClass#.#isAssignableFrom#(#z#)#)#{#return#z#;#}#}#return#(#adapterClass#==#null#)#?#getTypeClass#(#project#)#:#adapterClass#;#}##Class#getTypeClass#(#Project#project#)#{#try#{#return#innerGetTypeClass#(#)#;#}#catch#(#NoClassDefFoundError#ncdfe#)#{#project#.#log#(#"Could not load a dependent class ("#+#ncdfe#.#getMessage#(#)#+#") for type "#+#name#,#Project#.#MSG_DEBUG#)#;#}#catch#(#ClassNotFoundException#cnfe#)#{#project#.#log#(#"Could not load class ("#+#className#+#") for type "#+#name#,#Project#.#MSG_DEBUG#)#;#}#return#null#;#}##Class#innerGetTypeClass#(#)#throws#ClassNotFoundException#{#if#(#clazz#!=#null#)#{#return#clazz#;#}#if#(#classLoader#==#null#)#{#clazz#=#Class#.#forName#(#className#)#;#}#else#{#clazz#=#classLoader#.#loadClass#(#className#)#;#}#return#clazz#;#}##Object#create#(#Project#project#)#{#return#icreate#(#project#)#;#}##Object#icreate#(#Project#project#)#{#Class#c#=#getTypeClass#(#project#)#;#if#(#c#==#null#)#{#return#null#;#}#Object#o#=#createAndSet#(#project#,#c#)#;#if#(#o#==#null#||#adapterClass#==#null#)#{#return#o#;#}#if#(#adaptToClass#!=#null#)#{#if#(#adaptToClass#.#isAssignableFrom#(#o#.#getClass#(#)#)#)#{#return#o#;#}#}#TypeAdapter#adapterObject#=#(#TypeAdapter#)#createAndSet#(#project#,#adapterClass#)#;#if#(#adapterObject#==#null#)#{#return#null#;#}#adapterObject#.#setProxy#(#o#)#;#return#adapterObject#;#}##void#checkClass#(#Project#project#)#{#if#(#clazz#==#null#)#{#clazz#=#getTypeClass#(#project#)#;#if#(#clazz#==#null#)#{#throw#new#BuildException#(#"Unable to create class for "#+#getName#(#)#)#;#}#}#// check adapter#if#(#adapterClass#!=#null#&&#(#adaptToClass#==#null#||#!#adaptToClass#.#isAssignableFrom#(#clazz#)#)#)#{#TypeAdapter#adapter#=#(#TypeAdapter#)#createAndSet#(#project#,#adapterClass#)#;#if#(#adapter#==#null#)#{#throw#new#BuildException#(#"Unable to create adapter object"#)#;#}#adapter#.#checkProxyClass#(#clazz#)#;#}#}##Object#createAndSet#(#Project#project#,#Class#c#)#{#try#{#Object#o#=#innerCreateAndSet#(#c#,#project#)#;#return#o#;#}#catch#(#InvocationTargetException#ex#)#{#Throwable#t#=#ex#.#getTargetException#(#)#;#throw#new#BuildException#(#"Could not create type "#+#name#+#" due to "#+#t#,#t#)#;#}#catch#(#NoClassDefFoundError#ncdfe#)#{#String#msg#=#"Type "#+#name#+#": A class needed by class "#+#c#+#" cannot be found: "#+#ncdfe#.#getMessage#(#)#;#throw#new#BuildException#(#msg#,#ncdfe#)#;#}#catch#(#NoSuchMethodException#nsme#)#{#throw#new#BuildException#(#"Could not create type "#+#name#+#" as the class "#+#c#+#" has no compatible constructor"#)#;#}#catch#(#InstantiationException#nsme#)#{#throw#new#BuildException#(#"Could not create type "#+#name#+#" as the class "#+#c#+#" is abstract"#)#;#}#catch#(#IllegalAccessException#e#)#{#throw#new#BuildException#(#"Could not create type "#+#name#+#" as the constructor "#+#c#+#" is not accessible"#)#;#}#catch#(#Throwable#t#)#{#throw#new#BuildException#(#"Could not create type "#+#name#+#" due to "#+#t#,#t#)#;#}#}##Object#innerCreateAndSet#(#Class#newclass#,#Project#project#)#throws#NoSuchMethodException#,#InstantiationException#,#IllegalAccessException#,#InvocationTargetException#{#Constructor#ctor#=#null#;#boolean#noArg#=#false#;#// DataType can have a "no arg" constructor or take a single#// Project argument.#try#{#ctor#=#newclass#.#getConstructor#(#new#Class#[#0#]#)#;#noArg#=#true#;#}#catch#(#NoSuchMethodException#nse#)#{#//can throw the same exception, if there is no this(Project) ctor.#ctor#=#newclass#.#getConstructor#(#new#Class#[#]#{#Project#.#class#}#)#;#noArg#=#false#;#}#//now we instantiate#Object#o#=#ctor#.#newInstance#(#(#(#noArg#)#?#new#Object#[#0#]#:#new#Object#[#]#{#project#}#)#)#;#//set up project references.#project#.#setProjectReference#(#o#)#;#return#o#;#}##boolean#sameDefinition#(#AntTypeDefinition#other#,#Project#project#)#{#return#(#other#!=#null#&&#other#.#getClass#(#)#==#getClass#(#)#&&#other#.#getTypeClass#(#project#)#.#equals#(#getTypeClass#(#project#)#)#&&#other#.#getExposedClass#(#project#)#.#equals#(#getExposedClass#(#project#)#)#&&#other#.#restrict#==#restrict#&&#other#.#adapterClass#==#adapterClass#&&#other#.#adaptToClass#==#adaptToClass#)#;#}##boolean#similarDefinition#(#AntTypeDefinition#other#,#Project#project#)#{#if#(#other#==#null#||#getClass#(#)#!=#other#.#getClass#(#)#||#!#getClassName#(#)#.#equals#(#other#.#getClassName#(#)#)#||#!#extractClassname#(#adapterClass#)#.#equals#(#extractClassname#(#other#.#adapterClass#)#)#||#!#extractClassname#(#adaptToClass#)#.#equals#(#extractClassname#(#other#.#adaptToClass#)#)#||#restrict#!=#other#.#restrict#)#{#return#false#;#}#// all the names are the same: check if the class path of the loader#// is the same#ClassLoader#oldLoader#=#other#.#getClassLoader#(#)#;#ClassLoader#newLoader#=#getClassLoader#(#)#;#return#oldLoader#==#newLoader#||#(#oldLoader#instanceof#AntClassLoader#&&#newLoader#instanceof#AntClassLoader#&&#(#(#AntClassLoader#)#oldLoader#)#.#getClasspath#(#)#.#equals#(#(#(#AntClassLoader#)#newLoader#)#.#getClasspath#(#)#)#)#;#}##String#extractClassname#(#Class#c#)#{#return#(#c#==#null#)#?#"<null>"#:#c#.#getClass#(#)#.#getName#(#)#;#}##