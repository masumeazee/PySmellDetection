Object#initialValue#(#)#{#return#Boolean#.#FALSE#;#}##void#setInputHandler#(#InputHandler#handler#)#{#inputHandler#=#handler#;#}##void#setDefaultInputStream#(#InputStream#defaultInputStream#)#{#this#.#defaultInputStream#=#defaultInputStream#;#}##InputStream#getDefaultInputStream#(#)#{#return#defaultInputStream#;#}##InputHandler#getInputHandler#(#)#{#return#inputHandler#;#}##Project#createSubProject#(#)#{#Project#subProject#=#null#;#try#{#subProject#=#(#Project#)#(#getClass#(#)#.#newInstance#(#)#)#;#}#catch#(#Exception#e#)#{#subProject#=#new#Project#(#)#;#}#initSubProject#(#subProject#)#;#return#subProject#;#}##void#initSubProject#(#Project#subProject#)#{#ComponentHelper#.#getComponentHelper#(#subProject#)#.#initSubProject#(#ComponentHelper#.#getComponentHelper#(#this#)#)#;#subProject#.#setDefaultInputStream#(#getDefaultInputStream#(#)#)#;#subProject#.#setKeepGoingMode#(#this#.#isKeepGoingMode#(#)#)#;#subProject#.#setExecutor#(#getExecutor#(#)#.#getSubProjectExecutor#(#)#)#;#}##void#init#(#)#throws#BuildException#{#initProperties#(#)#;#ComponentHelper#.#getComponentHelper#(#this#)#.#initDefaultDefinitions#(#)#;#}##void#initProperties#(#)#throws#BuildException#{#setJavaVersionProperty#(#)#;#setSystemProperties#(#)#;#setPropertyInternal#(#MagicNames#.#ANT_VERSION#,#Main#.#getAntVersion#(#)#)#;#setAntLib#(#)#;#}##void#setAntLib#(#)#{#File#antlib#=#org#.#apache#.#tools#.#ant#.#launch#.#Locator#.#getClassSource#(#Project#.#class#)#;#if#(#antlib#!=#null#)#{#setPropertyInternal#(#MagicNames#.#ANT_LIB#,#antlib#.#getAbsolutePath#(#)#)#;#}#}##AntClassLoader#createClassLoader#(#Path#path#)#{#return#AntClassLoader#.#newAntClassLoader#(#getClass#(#)#.#getClassLoader#(#)#,#this#,#path#,#true#)#;#}##AntClassLoader#createClassLoader#(#ClassLoader#parent#,#Path#path#)#{#return#AntClassLoader#.#newAntClassLoader#(#parent#,#this#,#path#,#true#)#;#}##void#setCoreLoader#(#ClassLoader#coreLoader#)#{#this#.#coreLoader#=#coreLoader#;#}##ClassLoader#getCoreLoader#(#)#{#return#coreLoader#;#}##void#addBuildListener#(#BuildListener#listener#)#{#synchronized#(#listenersLock#)#{#// If the listeners already has this listener, do nothing#for#(#int#i#=#0#;#i#<#listeners#.#length#;#i#++#)#{#if#(#listeners#[#i#]#==#listener#)#{#return#;#}#}#// copy on write semantics#BuildListener#[#]#newListeners#=#new#BuildListener#[#listeners#.#length#+#1#]#;#System#.#arraycopy#(#listeners#,#0#,#newListeners#,#0#,#listeners#.#length#)#;#newListeners#[#listeners#.#length#]#=#listener#;#listeners#=#newListeners#;#}#}##void#removeBuildListener#(#BuildListener#listener#)#{#synchronized#(#listenersLock#)#{#// copy on write semantics#for#(#int#i#=#0#;#i#<#listeners#.#length#;#i#++#)#{#if#(#listeners#[#i#]#==#listener#)#{#BuildListener#[#]#newListeners#=#new#BuildListener#[#listeners#.#length#-#1#]#;#System#.#arraycopy#(#listeners#,#0#,#newListeners#,#0#,#i#)#;#System#.#arraycopy#(#listeners#,#i#+#1#,#newListeners#,#i#,#listeners#.#length#-#i#-#1#)#;#listeners#=#newListeners#;#break#;#}#}#}#}##Vector#getBuildListeners#(#)#{#synchronized#(#listenersLock#)#{#Vector#r#=#new#Vector#(#listeners#.#length#)#;#for#(#int#i#=#0#;#i#<#listeners#.#length#;#i#++#)#{#r#.#add#(#listeners#[#i#]#)#;#}#return#r#;#}#}##void#log#(#String#message#)#{#log#(#message#,#MSG_INFO#)#;#}##void#log#(#String#message#,#int#msgLevel#)#{#log#(#message#,#null#,#msgLevel#)#;#}##void#log#(#String#message#,#Throwable#throwable#,#int#msgLevel#)#{#fireMessageLogged#(#this#,#message#,#throwable#,#msgLevel#)#;#}##void#log#(#Task#task#,#String#message#,#int#msgLevel#)#{#fireMessageLogged#(#task#,#message#,#null#,#msgLevel#)#;#}##void#log#(#Task#task#,#String#message#,#Throwable#throwable#,#int#msgLevel#)#{#fireMessageLogged#(#task#,#message#,#throwable#,#msgLevel#)#;#}##void#log#(#Target#target#,#String#message#,#int#msgLevel#)#{#log#(#target#,#message#,#null#,#msgLevel#)#;#}##void#log#(#Target#target#,#String#message#,#Throwable#throwable#,#int#msgLevel#)#{#fireMessageLogged#(#target#,#message#,#throwable#,#msgLevel#)#;#}##FilterSet#getGlobalFilterSet#(#)#{#return#globalFilterSet#;#}##void#setProperty#(#String#name#,#String#value#)#{#PropertyHelper#.#getPropertyHelper#(#this#)#.#setProperty#(#name#,#value#,#true#)#;#}##void#setNewProperty#(#String#name#,#String#value#)#{#PropertyHelper#.#getPropertyHelper#(#this#)#.#setNewProperty#(#name#,#value#)#;#}##void#setUserProperty#(#String#name#,#String#value#)#{#PropertyHelper#.#getPropertyHelper#(#this#)#.#setUserProperty#(#name#,#value#)#;#}##void#setInheritedProperty#(#String#name#,#String#value#)#{#PropertyHelper#.#getPropertyHelper#(#this#)#.#setInheritedProperty#(#name#,#value#)#;#}##void#setPropertyInternal#(#String#name#,#String#value#)#{#PropertyHelper#.#getPropertyHelper#(#this#)#.#setProperty#(#name#,#value#,#false#)#;#}##String#getProperty#(#String#propertyName#)#{#Object#value#=#PropertyHelper#.#getPropertyHelper#(#this#)#.#getProperty#(#propertyName#)#;#return#value#==#null#?#null#:#String#.#valueOf#(#value#)#;#}##String#replaceProperties#(#String#value#)#throws#BuildException#{#return#PropertyHelper#.#getPropertyHelper#(#this#)#.#replaceProperties#(#null#,#value#,#null#)#;#}##String#getUserProperty#(#String#propertyName#)#{#return#(#String#)#PropertyHelper#.#getPropertyHelper#(#this#)#.#getUserProperty#(#propertyName#)#;#}##Hashtable#getProperties#(#)#{#return#PropertyHelper#.#getPropertyHelper#(#this#)#.#getProperties#(#)#;#}##Hashtable#getUserProperties#(#)#{#return#PropertyHelper#.#getPropertyHelper#(#this#)#.#getUserProperties#(#)#;#}##Hashtable#getInheritedProperties#(#)#{#return#PropertyHelper#.#getPropertyHelper#(#this#)#.#getInheritedProperties#(#)#;#}##void#copyUserProperties#(#Project#other#)#{#PropertyHelper#.#getPropertyHelper#(#this#)#.#copyUserProperties#(#other#)#;#}##void#copyInheritedProperties#(#Project#other#)#{#PropertyHelper#.#getPropertyHelper#(#this#)#.#copyInheritedProperties#(#other#)#;#}##void#setDefaultTarget#(#String#defaultTarget#)#{#setDefault#(#defaultTarget#)#;#}##String#getDefaultTarget#(#)#{#return#defaultTarget#;#}##void#setDefault#(#String#defaultTarget#)#{#setUserProperty#(#MagicNames#.#PROJECT_DEFAULT_TARGET#,#defaultTarget#)#;#this#.#defaultTarget#=#defaultTarget#;#}##void#setName#(#String#name#)#{#setUserProperty#(#MagicNames#.#PROJECT_NAME#,#name#)#;#this#.#name#=#name#;#}##String#getName#(#)#{#return#name#;#}##void#setDescription#(#String#description#)#{#this#.#description#=#description#;#}##String#getDescription#(#)#{#if#(#description#==#null#)#{#description#=#Description#.#getDescription#(#this#)#;#}#return#description#;#}##void#addFilter#(#String#token#,#String#value#)#{#if#(#token#==#null#)#{#return#;#}#globalFilterSet#.#addFilter#(#new#FilterSet#.#Filter#(#token#,#value#)#)#;#}##Hashtable#getFilters#(#)#{#// we need to build the hashtable dynamically#return#globalFilterSet#.#getFilterHash#(#)#;#}##void#setBasedir#(#String#baseD#)#throws#BuildException#{#setBaseDir#(#new#File#(#baseD#)#)#;#}##void#setBaseDir#(#File#baseDir#)#throws#BuildException#{#baseDir#=#FILE_UTILS#.#normalize#(#baseDir#.#getAbsolutePath#(#)#)#;#if#(#!#baseDir#.#exists#(#)#)#{#throw#new#BuildException#(#"Basedir "#+#baseDir#.#getAbsolutePath#(#)#+#" does not exist"#)#;#}#if#(#!#baseDir#.#isDirectory#(#)#)#{#throw#new#BuildException#(#"Basedir "#+#baseDir#.#getAbsolutePath#(#)#+#" is not a directory"#)#;#}#this#.#baseDir#=#baseDir#;#setPropertyInternal#(#MagicNames#.#PROJECT_BASEDIR#,#this#.#baseDir#.#getPath#(#)#)#;#String#msg#=#"Project base dir set to: "#+#this#.#baseDir#;#log#(#msg#,#MSG_VERBOSE#)#;#}##File#getBaseDir#(#)#{#if#(#baseDir#==#null#)#{#try#{#setBasedir#(#"."#)#;#}#catch#(#BuildException#ex#)#{#ex#.#printStackTrace#(#)#;#}#}#return#baseDir#;#}##void#setKeepGoingMode#(#boolean#keepGoingMode#)#{#this#.#keepGoingMode#=#keepGoingMode#;#}##boolean#isKeepGoingMode#(#)#{#return#this#.#keepGoingMode#;#}##String#getJavaVersion#(#)#{#return#JavaEnvUtils#.#getJavaVersion#(#)#;#}##void#setJavaVersionProperty#(#)#throws#BuildException#{#String#javaVersion#=#JavaEnvUtils#.#getJavaVersion#(#)#;#setPropertyInternal#(#MagicNames#.#ANT_JAVA_VERSION#,#javaVersion#)#;#// sanity check#if#(#!#JavaEnvUtils#.#isAtLeastJavaVersion#(#JavaEnvUtils#.#JAVA_1_4#)#)#{#throw#new#BuildException#(#"Ant cannot work on Java prior to 1.4"#)#;#}#log#(#"Detected Java version: "#+#javaVersion#+#" in: "#+#System#.#getProperty#(#"java.home"#)#,#MSG_VERBOSE#)#;#log#(#"Detected OS: "#+#System#.#getProperty#(#"os.name"#)#,#MSG_VERBOSE#)#;#}##void#setSystemProperties#(#)#{#Properties#systemP#=#System#.#getProperties#(#)#;#Enumeration#e#=#systemP#.#propertyNames#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#String#propertyName#=#(#String#)#e#.#nextElement#(#)#;#String#value#=#systemP#.#getProperty#(#propertyName#)#;#if#(#value#!=#null#)#{#this#.#setPropertyInternal#(#propertyName#,#value#)#;#}#}#}##void#addTaskDefinition#(#String#taskName#,#Class#taskClass#)#throws#BuildException#{#ComponentHelper#.#getComponentHelper#(#this#)#.#addTaskDefinition#(#taskName#,#taskClass#)#;#}##void#checkTaskClass#(#final#Class#taskClass#)#throws#BuildException#{#ComponentHelper#.#getComponentHelper#(#this#)#.#checkTaskClass#(#taskClass#)#;#if#(#!#Modifier#.#isPublic#(#taskClass#.#getModifiers#(#)#)#)#{#final#String#message#=#taskClass#+#" is not public"#;#log#(#message#,#Project#.#MSG_ERR#)#;#throw#new#BuildException#(#message#)#;#}#if#(#Modifier#.#isAbstract#(#taskClass#.#getModifiers#(#)#)#)#{#final#String#message#=#taskClass#+#" is abstract"#;#log#(#message#,#Project#.#MSG_ERR#)#;#throw#new#BuildException#(#message#)#;#}#try#{#taskClass#.#getConstructor#(#(#Class#[#]#)#null#)#;#// don't have to check for public, since#// getConstructor finds public constructors only.#}#catch#(#NoSuchMethodException#e#)#{#final#String#message#=#"No public no-arg constructor in "#+#taskClass#;#log#(#message#,#Project#.#MSG_ERR#)#;#throw#new#BuildException#(#message#)#;#}#catch#(#LinkageError#e#)#{#String#message#=#"Could not load "#+#taskClass#+#": "#+#e#;#log#(#message#,#Project#.#MSG_ERR#)#;#throw#new#BuildException#(#message#,#e#)#;#}#if#(#!#Task#.#class#.#isAssignableFrom#(#taskClass#)#)#{#TaskAdapter#.#checkTaskClass#(#taskClass#,#this#)#;#}#}##Hashtable#getTaskDefinitions#(#)#{#return#ComponentHelper#.#getComponentHelper#(#this#)#.#getTaskDefinitions#(#)#;#}##void#addDataTypeDefinition#(#String#typeName#,#Class#typeClass#)#{#ComponentHelper#.#getComponentHelper#(#this#)#.#addDataTypeDefinition#(#typeName#,#typeClass#)#;#}##Hashtable#getDataTypeDefinitions#(#)#{#return#ComponentHelper#.#getComponentHelper#(#this#)#.#getDataTypeDefinitions#(#)#;#}##void#addTarget#(#Target#target#)#throws#BuildException#{#addTarget#(#target#.#getName#(#)#,#target#)#;#}##void#addTarget#(#String#targetName#,#Target#target#)#throws#BuildException#{#if#(#targets#.#get#(#targetName#)#!=#null#)#{#throw#new#BuildException#(#"Duplicate target: `"#+#targetName#+#"'"#)#;#}#addOrReplaceTarget#(#targetName#,#target#)#;#}##void#addOrReplaceTarget#(#Target#target#)#{#addOrReplaceTarget#(#target#.#getName#(#)#,#target#)#;#}##void#addOrReplaceTarget#(#String#targetName#,#Target#target#)#{#String#msg#=#" +Target: "#+#targetName#;#log#(#msg#,#MSG_DEBUG#)#;#target#.#setProject#(#this#)#;#targets#.#put#(#targetName#,#target#)#;#}##Hashtable#getTargets#(#)#{#return#targets#;#}##Task#createTask#(#String#taskType#)#throws#BuildException#{#return#ComponentHelper#.#getComponentHelper#(#this#)#.#createTask#(#taskType#)#;#}##Object#createDataType#(#String#typeName#)#throws#BuildException#{#return#ComponentHelper#.#getComponentHelper#(#this#)#.#createDataType#(#typeName#)#;#}##void#setExecutor#(#Executor#e#)#{#addReference#(#MagicNames#.#ANT_EXECUTOR_REFERENCE#,#e#)#;#}##Executor#getExecutor#(#)#{#Object#o#=#getReference#(#MagicNames#.#ANT_EXECUTOR_REFERENCE#)#;#if#(#o#==#null#)#{#String#classname#=#getProperty#(#MagicNames#.#ANT_EXECUTOR_CLASSNAME#)#;#if#(#classname#==#null#)#{#classname#=#DefaultExecutor#.#class#.#getName#(#)#;#}#log#(#"Attempting to create object of type "#+#classname#,#MSG_DEBUG#)#;#try#{#o#=#Class#.#forName#(#classname#,#true#,#coreLoader#)#.#newInstance#(#)#;#}#catch#(#ClassNotFoundException#seaEnEfEx#)#{#//try the current classloader#try#{#o#=#Class#.#forName#(#classname#)#.#newInstance#(#)#;#}#catch#(#Exception#ex#)#{#log#(#ex#.#toString#(#)#,#MSG_ERR#)#;#}#}#catch#(#Exception#ex#)#{#log#(#ex#.#toString#(#)#,#MSG_ERR#)#;#}#if#(#o#==#null#)#{#throw#new#BuildException#(#"Unable to obtain a Target Executor instance."#)#;#}#setExecutor#(#(#Executor#)#o#)#;#}#return#(#Executor#)#o#;#}##void#executeTargets#(#Vector#names#)#throws#BuildException#{#setUserProperty#(#MagicNames#.#PROJECT_INVOKED_TARGETS#,#CollectionUtils#.#flattenToString#(#names#)#)#;#getExecutor#(#)#.#executeTargets#(#this#,#(#String#[#]#)#(#names#.#toArray#(#new#String#[#names#.#size#(#)#]#)#)#)#;#}##void#demuxOutput#(#String#output#,#boolean#isWarning#)#{#Task#task#=#getThreadTask#(#Thread#.#currentThread#(#)#)#;#if#(#task#==#null#)#{#log#(#output#,#isWarning#?#MSG_WARN#:#MSG_INFO#)#;#}#else#{#if#(#isWarning#)#{#task#.#handleErrorOutput#(#output#)#;#}#else#{#task#.#handleOutput#(#output#)#;#}#}#}##int#defaultInput#(#byte#[#]#buffer#,#int#offset#,#int#length#)#throws#IOException#{#if#(#defaultInputStream#!=#null#)#{#System#.#out#.#flush#(#)#;#return#defaultInputStream#.#read#(#buffer#,#offset#,#length#)#;#}#else#{#throw#new#EOFException#(#"No input provided for project"#)#;#}#}##int#demuxInput#(#byte#[#]#buffer#,#int#offset#,#int#length#)#throws#IOException#{#Task#task#=#getThreadTask#(#Thread#.#currentThread#(#)#)#;#if#(#task#==#null#)#{#return#defaultInput#(#buffer#,#offset#,#length#)#;#}#else#{#return#task#.#handleInput#(#buffer#,#offset#,#length#)#;#}#}##void#demuxFlush#(#String#output#,#boolean#isError#)#{#Task#task#=#getThreadTask#(#Thread#.#currentThread#(#)#)#;#if#(#task#==#null#)#{#fireMessageLogged#(#this#,#output#,#isError#?#MSG_ERR#:#MSG_INFO#)#;#}#else#{#if#(#isError#)#{#task#.#handleErrorFlush#(#output#)#;#}#else#{#task#.#handleFlush#(#output#)#;#}#}#}##void#executeTarget#(#String#targetName#)#throws#BuildException#{#// sanity check ourselves, if we've been asked to build nothing#// then we should complain#if#(#targetName#==#null#)#{#String#msg#=#"No target specified"#;#throw#new#BuildException#(#msg#)#;#}#// Sort and run the dependency tree.#// Sorting checks if all the targets (and dependencies)#// exist, and if there is any cycle in the dependency#// graph.#executeSortedTargets#(#topoSort#(#targetName#,#targets#,#false#)#)#;#}##void#executeSortedTargets#(#Vector#sortedTargets#)#throws#BuildException#{#Set#succeededTargets#=#new#HashSet#(#)#;#BuildException#buildException#=#null#;#// first build exception#for#(#Enumeration#iter#=#sortedTargets#.#elements#(#)#;#iter#.#hasMoreElements#(#)#;#)#{#Target#curtarget#=#(#Target#)#iter#.#nextElement#(#)#;#boolean#canExecute#=#true#;#for#(#Enumeration#depIter#=#curtarget#.#getDependencies#(#)#;#depIter#.#hasMoreElements#(#)#;#)#{#String#dependencyName#=#(#(#String#)#depIter#.#nextElement#(#)#)#;#if#(#!#succeededTargets#.#contains#(#dependencyName#)#)#{#canExecute#=#false#;#log#(#curtarget#,#"Cannot execute '"#+#curtarget#.#getName#(#)#+#"' - '"#+#dependencyName#+#"' failed or was not executed."#,#MSG_ERR#)#;#break#;#}#}#if#(#canExecute#)#{#Throwable#thrownException#=#null#;#try#{#curtarget#.#performTasks#(#)#;#succeededTargets#.#add#(#curtarget#.#getName#(#)#)#;#}#catch#(#RuntimeException#ex#)#{#if#(#!#(#keepGoingMode#)#)#{#throw#ex#;#// throw further#}#thrownException#=#ex#;#}#catch#(#Throwable#ex#)#{#if#(#!#(#keepGoingMode#)#)#{#throw#new#BuildException#(#ex#)#;#}#thrownException#=#ex#;#}#if#(#thrownException#!=#null#)#{#if#(#thrownException#instanceof#BuildException#)#{#log#(#curtarget#,#"Target '"#+#curtarget#.#getName#(#)#+#"' failed with message '"#+#thrownException#.#getMessage#(#)#+#"'."#,#MSG_ERR#)#;#// only the first build exception is reported#if#(#buildException#==#null#)#{#buildException#=#(#BuildException#)#thrownException#;#}#}#else#{#log#(#curtarget#,#"Target '"#+#curtarget#.#getName#(#)#+#"' failed with message '"#+#thrownException#.#getMessage#(#)#+#"'."#,#MSG_ERR#)#;#thrownException#.#printStackTrace#(#System#.#err#)#;#if#(#buildException#==#null#)#{#buildException#=#new#BuildException#(#thrownException#)#;#}#}#}#}#}#if#(#buildException#!=#null#)#{#throw#buildException#;#}#}##File#resolveFile#(#String#fileName#,#File#rootDir#)#{#return#FILE_UTILS#.#resolveFile#(#rootDir#,#fileName#)#;#}##File#resolveFile#(#String#fileName#)#{#return#FILE_UTILS#.#resolveFile#(#baseDir#,#fileName#)#;#}##String#translatePath#(#String#toProcess#)#{#return#FileUtils#.#translatePath#(#toProcess#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#)#throws#IOException#{#FILE_UTILS#.#copyFile#(#sourceFile#,#destFile#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#,#boolean#filtering#)#throws#IOException#{#FILE_UTILS#.#copyFile#(#sourceFile#,#destFile#,#filtering#?#globalFilters#:#null#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#,#boolean#filtering#,#boolean#overwrite#)#throws#IOException#{#FILE_UTILS#.#copyFile#(#sourceFile#,#destFile#,#filtering#?#globalFilters#:#null#,#overwrite#)#;#}##void#copyFile#(#String#sourceFile#,#String#destFile#,#boolean#filtering#,#boolean#overwrite#,#boolean#preserveLastModified#)#throws#IOException#{#FILE_UTILS#.#copyFile#(#sourceFile#,#destFile#,#filtering#?#globalFilters#:#null#,#overwrite#,#preserveLastModified#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#)#throws#IOException#{#FILE_UTILS#.#copyFile#(#sourceFile#,#destFile#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#,#boolean#filtering#)#throws#IOException#{#FILE_UTILS#.#copyFile#(#sourceFile#,#destFile#,#filtering#?#globalFilters#:#null#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#,#boolean#filtering#,#boolean#overwrite#)#throws#IOException#{#FILE_UTILS#.#copyFile#(#sourceFile#,#destFile#,#filtering#?#globalFilters#:#null#,#overwrite#)#;#}##void#copyFile#(#File#sourceFile#,#File#destFile#,#boolean#filtering#,#boolean#overwrite#,#boolean#preserveLastModified#)#throws#IOException#{#FILE_UTILS#.#copyFile#(#sourceFile#,#destFile#,#filtering#?#globalFilters#:#null#,#overwrite#,#preserveLastModified#)#;#}##void#setFileLastModified#(#File#file#,#long#time#)#throws#BuildException#{#FILE_UTILS#.#setFileLastModified#(#file#,#time#)#;#log#(#"Setting modification time for "#+#file#,#MSG_VERBOSE#)#;#}##boolean#toBoolean#(#String#s#)#{#return#(#"on"#.#equalsIgnoreCase#(#s#)#||#"true"#.#equalsIgnoreCase#(#s#)#||#"yes"#.#equalsIgnoreCase#(#s#)#)#;#}##Project#getProject#(#Object#o#)#{#if#(#o#instanceof#ProjectComponent#)#{#return#(#(#ProjectComponent#)#o#)#.#getProject#(#)#;#}#try#{#Method#m#=#o#.#getClass#(#)#.#getMethod#(#"getProject"#,#(#Class#[#]#)#null#)#;#if#(#Project#.#class#==#m#.#getReturnType#(#)#)#{#return#(#Project#)#m#.#invoke#(#o#,#(#Object#[#]#)#null#)#;#}#}#catch#(#Exception#e#)#{#//too bad#}#return#null#;#}##Vector#topoSort#(#String#root#,#Hashtable#targetTable#)#throws#BuildException#{#return#topoSort#(#new#String#[#]#{#root#}#,#targetTable#,#true#)#;#}##Vector#topoSort#(#String#root#,#Hashtable#targetTable#,#boolean#returnAll#)#throws#BuildException#{#return#topoSort#(#new#String#[#]#{#root#}#,#targetTable#,#returnAll#)#;#}##Vector#topoSort#(#String#[#]#root#,#Hashtable#targetTable#,#boolean#returnAll#)#throws#BuildException#{#Vector#ret#=#new#Vector#(#)#;#Hashtable#state#=#new#Hashtable#(#)#;#Stack#visiting#=#new#Stack#(#)#;#// We first run a DFS based sort using each root as a starting node.#// This creates the minimum sequence of Targets to the root node(s).#// We then do a sort on any remaining unVISITED targets.#// This is unnecessary for doing our build, but it catches#// circular dependencies or missing Targets on the entire#// dependency tree, not just on the Targets that depend on the#// build Target.#for#(#int#i#=#0#;#i#<#root#.#length#;#i#++#)#{#String#st#=#(#String#)#(#state#.#get#(#root#[#i#]#)#)#;#if#(#st#==#null#)#{#tsort#(#root#[#i#]#,#targetTable#,#state#,#visiting#,#ret#)#;#}#else#if#(#st#==#VISITING#)#{#throw#new#RuntimeException#(#"Unexpected node in visiting state: "#+#root#[#i#]#)#;#}#}#StringBuffer#buf#=#new#StringBuffer#(#"Build sequence for target(s)"#)#;#for#(#int#j#=#0#;#j#<#root#.#length#;#j#++#)#{#buf#.#append#(#(#j#==#0#)#?#" `"#:#", `"#)#.#append#(#root#[#j#]#)#.#append#(#'\''#)#;#}#buf#.#append#(#" is "#+#ret#)#;#log#(#buf#.#toString#(#)#,#MSG_VERBOSE#)#;#Vector#complete#=#(#returnAll#)#?#ret#:#new#Vector#(#ret#)#;#for#(#Enumeration#en#=#targetTable#.#keys#(#)#;#en#.#hasMoreElements#(#)#;#)#{#String#curTarget#=#(#String#)#en#.#nextElement#(#)#;#String#st#=#(#String#)#state#.#get#(#curTarget#)#;#if#(#st#==#null#)#{#tsort#(#curTarget#,#targetTable#,#state#,#visiting#,#complete#)#;#}#else#if#(#st#==#VISITING#)#{#throw#new#RuntimeException#(#"Unexpected node in visiting state: "#+#curTarget#)#;#}#}#log#(#"Complete build sequence is "#+#complete#,#MSG_VERBOSE#)#;#return#ret#;#}##void#tsort#(#String#root#,#Hashtable#targetTable#,#Hashtable#state#,#Stack#visiting#,#Vector#ret#)#throws#BuildException#{#state#.#put#(#root#,#VISITING#)#;#visiting#.#push#(#root#)#;#Target#target#=#(#Target#)#targetTable#.#get#(#root#)#;#// Make sure we exist#if#(#target#==#null#)#{#StringBuffer#sb#=#new#StringBuffer#(#"Target \""#)#;#sb#.#append#(#root#)#;#sb#.#append#(#"\" does not exist in the project \""#)#;#sb#.#append#(#name#)#;#sb#.#append#(#"\". "#)#;#visiting#.#pop#(#)#;#if#(#!#visiting#.#empty#(#)#)#{#String#parent#=#(#String#)#visiting#.#peek#(#)#;#sb#.#append#(#"It is used from target \""#)#;#sb#.#append#(#parent#)#;#sb#.#append#(#"\"."#)#;#}#throw#new#BuildException#(#new#String#(#sb#)#)#;#}#for#(#Enumeration#en#=#target#.#getDependencies#(#)#;#en#.#hasMoreElements#(#)#;#)#{#String#cur#=#(#String#)#en#.#nextElement#(#)#;#String#m#=#(#String#)#state#.#get#(#cur#)#;#if#(#m#==#null#)#{#// Not been visited#tsort#(#cur#,#targetTable#,#state#,#visiting#,#ret#)#;#}#else#if#(#m#==#VISITING#)#{#// Currently visiting this node, so have a cycle#throw#makeCircularException#(#cur#,#visiting#)#;#}#}#String#p#=#(#String#)#visiting#.#pop#(#)#;#if#(#root#!=#p#)#{#throw#new#RuntimeException#(#"Unexpected internal error: expected to "#+#"pop "#+#root#+#" but got "#+#p#)#;#}#state#.#put#(#root#,#VISITED#)#;#ret#.#addElement#(#target#)#;#}##BuildException#makeCircularException#(#String#end#,#Stack#stk#)#{#StringBuffer#sb#=#new#StringBuffer#(#"Circular dependency: "#)#;#sb#.#append#(#end#)#;#String#c#;#do#{#c#=#(#String#)#stk#.#pop#(#)#;#sb#.#append#(#" <- "#)#;#sb#.#append#(#c#)#;#}#while#(#!#c#.#equals#(#end#)#)#;#return#new#BuildException#(#new#String#(#sb#)#)#;#}##void#inheritIDReferences#(#Project#parent#)#{#parentIdProject#=#parent#;#}##void#addIdReference#(#String#id#,#Object#value#)#{#idReferences#.#put#(#id#,#value#)#;#}##void#addReference#(#String#referenceName#,#Object#value#)#{#Object#old#=#(#(#AntRefTable#)#references#)#.#getReal#(#referenceName#)#;#if#(#old#==#value#)#{#// no warning, this is not changing anything#return#;#}#if#(#old#!=#null#&&#!#(#old#instanceof#UnknownElement#)#)#{#log#(#"Overriding previous definition of reference to "#+#referenceName#,#MSG_VERBOSE#)#;#}#log#(#"Adding reference: "#+#referenceName#,#MSG_DEBUG#)#;#references#.#put#(#referenceName#,#value#)#;#}##Hashtable#getReferences#(#)#{#return#references#;#}##boolean#hasReference#(#String#key#)#{#return#references#.#containsKey#(#key#)#;#}##Object#getReference#(#String#key#)#{#Object#ret#=#references#.#get#(#key#)#;#if#(#ret#!=#null#)#{#return#ret#;#}#if#(#!#key#.#equals#(#MagicNames#.#REFID_PROPERTY_HELPER#)#)#{#try#{#if#(#PropertyHelper#.#getPropertyHelper#(#this#)#.#containsProperties#(#key#)#)#{#log#(#"Unresolvable reference "#+#key#+#" might be a misuse of property expansion syntax."#,#MSG_WARN#)#;#}#}#catch#(#Exception#e#)#{#//ignore#}#}#return#ret#;#}##String#getElementName#(#Object#element#)#{#return#ComponentHelper#.#getComponentHelper#(#this#)#.#getElementName#(#element#)#;#}##void#fireBuildStarted#(#)#{#BuildEvent#event#=#new#BuildEvent#(#this#)#;#BuildListener#[#]#currListeners#=#listeners#;#for#(#int#i#=#0#;#i#<#currListeners#.#length#;#i#++#)#{#currListeners#[#i#]#.#buildStarted#(#event#)#;#}#}##void#fireBuildFinished#(#Throwable#exception#)#{#BuildEvent#event#=#new#BuildEvent#(#this#)#;#event#.#setException#(#exception#)#;#BuildListener#[#]#currListeners#=#listeners#;#for#(#int#i#=#0#;#i#<#currListeners#.#length#;#i#++#)#{#currListeners#[#i#]#.#buildFinished#(#event#)#;#}#// Inform IH to clear the cache#IntrospectionHelper#.#clearCache#(#)#;#}##void#fireSubBuildStarted#(#)#{#BuildEvent#event#=#new#BuildEvent#(#this#)#;#BuildListener#[#]#currListeners#=#listeners#;#for#(#int#i#=#0#;#i#<#currListeners#.#length#;#i#++#)#{#if#(#currListeners#[#i#]#instanceof#SubBuildListener#)#{#(#(#SubBuildListener#)#currListeners#[#i#]#)#.#subBuildStarted#(#event#)#;#}#}#}##void#fireSubBuildFinished#(#Throwable#exception#)#{#BuildEvent#event#=#new#BuildEvent#(#this#)#;#event#.#setException#(#exception#)#;#BuildListener#[#]#currListeners#=#listeners#;#for#(#int#i#=#0#;#i#<#currListeners#.#length#;#i#++#)#{#if#(#currListeners#[#i#]#instanceof#SubBuildListener#)#{#(#(#SubBuildListener#)#currListeners#[#i#]#)#.#subBuildFinished#(#event#)#;#}#}#}##void#fireTargetStarted#(#Target#target#)#{#BuildEvent#event#=#new#BuildEvent#(#target#)#;#BuildListener#[#]#currListeners#=#listeners#;#for#(#int#i#=#0#;#i#<#currListeners#.#length#;#i#++#)#{#currListeners#[#i#]#.#targetStarted#(#event#)#;#}#}##void#fireTargetFinished#(#Target#target#,#Throwable#exception#)#{#BuildEvent#event#=#new#BuildEvent#(#target#)#;#event#.#setException#(#exception#)#;#BuildListener#[#]#currListeners#=#listeners#;#for#(#int#i#=#0#;#i#<#currListeners#.#length#;#i#++#)#{#currListeners#[#i#]#.#targetFinished#(#event#)#;#}#}##void#fireTaskStarted#(#Task#task#)#{#// register this as the current task on the current thread.#registerThreadTask#(#Thread#.#currentThread#(#)#,#task#)#;#BuildEvent#event#=#new#BuildEvent#(#task#)#;#BuildListener#[#]#currListeners#=#listeners#;#for#(#int#i#=#0#;#i#<#currListeners#.#length#;#i#++#)#{#currListeners#[#i#]#.#taskStarted#(#event#)#;#}#}##void#fireTaskFinished#(#Task#task#,#Throwable#exception#)#{#registerThreadTask#(#Thread#.#currentThread#(#)#,#null#)#;#System#.#out#.#flush#(#)#;#System#.#err#.#flush#(#)#;#BuildEvent#event#=#new#BuildEvent#(#task#)#;#event#.#setException#(#exception#)#;#BuildListener#[#]#currListeners#=#listeners#;#for#(#int#i#=#0#;#i#<#currListeners#.#length#;#i#++#)#{#currListeners#[#i#]#.#taskFinished#(#event#)#;#}#}##void#fireMessageLoggedEvent#(#BuildEvent#event#,#String#message#,#int#priority#)#{#if#(#message#==#null#)#{#message#=#String#.#valueOf#(#message#)#;#}#if#(#message#.#endsWith#(#StringUtils#.#LINE_SEP#)#)#{#int#endIndex#=#message#.#length#(#)#-#StringUtils#.#LINE_SEP#.#length#(#)#;#event#.#setMessage#(#message#.#substring#(#0#,#endIndex#)#,#priority#)#;#}#else#{#event#.#setMessage#(#message#,#priority#)#;#}#if#(#isLoggingMessage#.#get#(#)#!=#Boolean#.#FALSE#)#{#/*
             * One of the Listeners has attempted to access
             * System.err or System.out.
             *
             * We used to throw an exception in this case, but
             * sometimes Listeners can't prevent it(like our own
             * Log4jListener which invokes getLogger() which in
             * turn wants to write to the console).
             *
             * @see http://marc.theaimsgroup.com/?t=110538624200006&r=1&w=2
             *
             * We now (Ant 1.6.3 and later) simply swallow the message.
             */#return#;#}#try#{#isLoggingMessage#.#set#(#Boolean#.#TRUE#)#;#BuildListener#[#]#currListeners#=#listeners#;#for#(#int#i#=#0#;#i#<#currListeners#.#length#;#i#++#)#{#currListeners#[#i#]#.#messageLogged#(#event#)#;#}#}#finally#{#isLoggingMessage#.#set#(#Boolean#.#FALSE#)#;#}#}##void#fireMessageLogged#(#Project#project#,#String#message#,#int#priority#)#{#fireMessageLogged#(#project#,#message#,#null#,#priority#)#;#}##void#fireMessageLogged#(#Project#project#,#String#message#,#Throwable#throwable#,#int#priority#)#{#BuildEvent#event#=#new#BuildEvent#(#project#)#;#event#.#setException#(#throwable#)#;#fireMessageLoggedEvent#(#event#,#message#,#priority#)#;#}##void#fireMessageLogged#(#Target#target#,#String#message#,#int#priority#)#{#fireMessageLogged#(#target#,#message#,#null#,#priority#)#;#}##void#fireMessageLogged#(#Target#target#,#String#message#,#Throwable#throwable#,#int#priority#)#{#BuildEvent#event#=#new#BuildEvent#(#target#)#;#event#.#setException#(#throwable#)#;#fireMessageLoggedEvent#(#event#,#message#,#priority#)#;#}##void#fireMessageLogged#(#Task#task#,#String#message#,#int#priority#)#{#fireMessageLogged#(#task#,#message#,#null#,#priority#)#;#}##void#fireMessageLogged#(#Task#task#,#String#message#,#Throwable#throwable#,#int#priority#)#{#BuildEvent#event#=#new#BuildEvent#(#task#)#;#event#.#setException#(#throwable#)#;#fireMessageLoggedEvent#(#event#,#message#,#priority#)#;#}##void#registerThreadTask#(#Thread#thread#,#Task#task#)#{#synchronized#(#threadTasks#)#{#if#(#task#!=#null#)#{#threadTasks#.#put#(#thread#,#task#)#;#threadGroupTasks#.#put#(#thread#.#getThreadGroup#(#)#,#task#)#;#}#else#{#threadTasks#.#remove#(#thread#)#;#threadGroupTasks#.#remove#(#thread#.#getThreadGroup#(#)#)#;#}#}#}##Task#getThreadTask#(#Thread#thread#)#{#synchronized#(#threadTasks#)#{#Task#task#=#(#Task#)#threadTasks#.#get#(#thread#)#;#if#(#task#==#null#)#{#ThreadGroup#group#=#thread#.#getThreadGroup#(#)#;#while#(#task#==#null#&&#group#!=#null#)#{#task#=#(#Task#)#threadGroupTasks#.#get#(#group#)#;#group#=#group#.#getParent#(#)#;#}#}#return#task#;#}#}##Object#getReal#(#Object#key#)#{#return#super#.#get#(#key#)#;#}##Object#get#(#Object#key#)#{#//System.out.println("AntRefTable.get " + key);#Object#o#=#getReal#(#key#)#;#if#(#o#instanceof#UnknownElement#)#{#// Make sure that#UnknownElement#ue#=#(#UnknownElement#)#o#;#ue#.#maybeConfigure#(#)#;#o#=#ue#.#getRealThing#(#)#;#}#return#o#;#}##void#setProjectReference#(#final#Object#obj#)#{#if#(#obj#instanceof#ProjectComponent#)#{#(#(#ProjectComponent#)#obj#)#.#setProject#(#this#)#;#return#;#}#try#{#Method#method#=#obj#.#getClass#(#)#.#getMethod#(#"setProject"#,#new#Class#[#]#{#Project#.#class#}#)#;#if#(#method#!=#null#)#{#method#.#invoke#(#obj#,#new#Object#[#]#{#this#}#)#;#}#}#catch#(#Throwable#e#)#{#// ignore this if the object does not have#// a set project method or the method#// is private/protected.#}#}##Resource#getResource#(#String#name#)#{#return#new#FileResource#(#getBaseDir#(#)#,#name#)#;#}##