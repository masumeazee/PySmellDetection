void#setProject#(#Project#project#)#{#this#.#project#=#project#;#}##Project#getProject#(#)#{#return#project#;#}##void#setLocation#(#Location#location#)#{#this#.#location#=#location#;#}##Location#getLocation#(#)#{#return#location#;#}##void#setDepends#(#String#depS#)#{#for#(#Iterator#iter#=#parseDepends#(#depS#,#getName#(#)#,#"depends"#)#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#addDependency#(#(#String#)#iter#.#next#(#)#)#;#}#}##List#/*<String>*/#parseDepends#(#String#depends#,#String#targetName#,#String#attributeName#)#{#ArrayList#list#=#new#ArrayList#(#)#;#if#(#depends#.#length#(#)#>#0#)#{#StringTokenizer#tok#=#new#StringTokenizer#(#depends#,#","#,#true#)#;#while#(#tok#.#hasMoreTokens#(#)#)#{#String#token#=#tok#.#nextToken#(#)#.#trim#(#)#;#// Make sure the dependency is not empty string#if#(#""#.#equals#(#token#)#||#","#.#equals#(#token#)#)#{#throw#new#BuildException#(#"Syntax Error: "#+#attributeName#+#" attribute of target \""#+#targetName#+#"\" contains an empty string."#)#;#}#list#.#add#(#token#)#;#// Make sure that depends attribute does not#// end in a ,#if#(#tok#.#hasMoreTokens#(#)#)#{#token#=#tok#.#nextToken#(#)#;#if#(#!#tok#.#hasMoreTokens#(#)#||#!#","#.#equals#(#token#)#)#{#throw#new#BuildException#(#"Syntax Error: "#+#attributeName#+#" attribute for target \""#+#targetName#+#"\" ends with a \",\" "#+#"character"#)#;#}#}#}#}#return#list#;#}##void#setName#(#String#name#)#{#this#.#name#=#name#;#}##String#getName#(#)#{#return#name#;#}##void#addTask#(#Task#task#)#{#children#.#add#(#task#)#;#}##void#addDataType#(#RuntimeConfigurable#r#)#{#children#.#add#(#r#)#;#}##Task#[#]#getTasks#(#)#{#List#tasks#=#new#ArrayList#(#children#.#size#(#)#)#;#Iterator#it#=#children#.#iterator#(#)#;#while#(#it#.#hasNext#(#)#)#{#Object#o#=#it#.#next#(#)#;#if#(#o#instanceof#Task#)#{#tasks#.#add#(#o#)#;#}#}#return#(#Task#[#]#)#tasks#.#toArray#(#new#Task#[#tasks#.#size#(#)#]#)#;#}##void#addDependency#(#String#dependency#)#{#if#(#dependencies#==#null#)#{#dependencies#=#new#ArrayList#(#2#)#;#}#dependencies#.#add#(#dependency#)#;#}##Enumeration#getDependencies#(#)#{#return#Collections#.#enumeration#(#dependencies#==#null#?#Collections#.#EMPTY_LIST#:#dependencies#)#;#}##boolean#dependsOn#(#String#other#)#{#Project#p#=#getProject#(#)#;#Hashtable#t#=#p#==#null#?#null#:#p#.#getTargets#(#)#;#return#p#!=#null#&&#p#.#topoSort#(#getName#(#)#,#t#,#false#)#.#contains#(#t#.#get#(#other#)#)#;#}##void#setIf#(#String#property#)#{#ifCondition#=#property#==#null#?#""#:#property#;#}##String#getIf#(#)#{#return#""#.#equals#(#ifCondition#)#?#null#:#ifCondition#;#}##void#setUnless#(#String#property#)#{#unlessCondition#=#property#==#null#?#""#:#property#;#}##String#getUnless#(#)#{#return#""#.#equals#(#unlessCondition#)#?#null#:#unlessCondition#;#}##void#setDescription#(#String#description#)#{#this#.#description#=#description#;#}##String#getDescription#(#)#{#return#description#;#}##String#toString#(#)#{#return#name#;#}##void#execute#(#)#throws#BuildException#{#if#(#!#testIfAllows#(#)#)#{#project#.#log#(#this#,#"Skipped because property '"#+#project#.#replaceProperties#(#ifCondition#)#+#"' not set."#,#Project#.#MSG_VERBOSE#)#;#return#;#}#if#(#!#testUnlessAllows#(#)#)#{#project#.#log#(#this#,#"Skipped because property '"#+#project#.#replaceProperties#(#unlessCondition#)#+#"' set."#,#Project#.#MSG_VERBOSE#)#;#return#;#}#LocalProperties#localProperties#=#LocalProperties#.#get#(#getProject#(#)#)#;#localProperties#.#enterScope#(#)#;#try#{#// use index-based approach to avoid ConcurrentModificationExceptions;#// also account for growing target children#for#(#int#i#=#0#;#i#<#children#.#size#(#)#;#i#++#)#{#Object#o#=#children#.#get#(#i#)#;#if#(#o#instanceof#Task#)#{#Task#task#=#(#Task#)#o#;#task#.#perform#(#)#;#}#else#{#(#(#RuntimeConfigurable#)#o#)#.#maybeConfigure#(#project#)#;#}#}#}#finally#{#localProperties#.#exitScope#(#)#;#}#}##void#performTasks#(#)#{#RuntimeException#thrown#=#null#;#project#.#fireTargetStarted#(#this#)#;#try#{#execute#(#)#;#}#catch#(#RuntimeException#exc#)#{#thrown#=#exc#;#throw#exc#;#}#finally#{#project#.#fireTargetFinished#(#this#,#thrown#)#;#}#}##void#replaceChild#(#Task#el#,#RuntimeConfigurable#o#)#{#int#index#;#while#(#(#index#=#children#.#indexOf#(#el#)#)#>=#0#)#{#children#.#set#(#index#,#o#)#;#}#}##void#replaceChild#(#Task#el#,#Task#o#)#{#int#index#;#while#(#(#index#=#children#.#indexOf#(#el#)#)#>=#0#)#{#children#.#set#(#index#,#o#)#;#}#}##boolean#testIfAllows#(#)#{#PropertyHelper#propertyHelper#=#PropertyHelper#.#getPropertyHelper#(#getProject#(#)#)#;#Object#o#=#propertyHelper#.#parseProperties#(#ifCondition#)#;#return#propertyHelper#.#testIfCondition#(#o#)#;#}##boolean#testUnlessAllows#(#)#{#PropertyHelper#propertyHelper#=#PropertyHelper#.#getPropertyHelper#(#getProject#(#)#)#;#Object#o#=#propertyHelper#.#parseProperties#(#unlessCondition#)#;#return#propertyHelper#.#testUnlessCondition#(#o#)#;#}##