int#read#(#)#throws#IOException#{#if#(#!#getInitialized#(#)#)#{#initialize#(#)#;#setInitialized#(#true#)#;#}#int#ch#=#-#1#;#if#(#line#!=#null#)#{#/*
             * We are on the state: "reading the current line", lines are
             * already sorted
             */#ch#=#line#.#charAt#(#0#)#;#if#(#line#.#length#(#)#==#1#)#{#line#=#null#;#}#else#{#line#=#line#.#substring#(#1#)#;#}#}#else#{#if#(#lines#==#null#)#{#// We read all lines and sort them#lines#=#new#ArrayList#(#)#;#for#(#line#=#readLine#(#)#;#line#!=#null#;#line#=#readLine#(#)#)#{#lines#.#add#(#line#)#;#}#sort#(#)#;#iterator#=#lines#.#iterator#(#)#;#}#if#(#iterator#.#hasNext#(#)#)#{#line#=#(#String#)#iterator#.#next#(#)#;#}#else#{#line#=#null#;#lines#=#null#;#iterator#=#null#;#}#if#(#line#!=#null#)#{#return#read#(#)#;#}#}#return#ch#;#}##Reader#chain#(#final#Reader#rdr#)#{#SortFilter#newFilter#=#new#SortFilter#(#rdr#)#;#newFilter#.#setReverse#(#isReverse#(#)#)#;#newFilter#.#setComparator#(#getComparator#(#)#)#;#newFilter#.#setInitialized#(#true#)#;#return#newFilter#;#}##boolean#isReverse#(#)#{#return#reverse#;#}##void#setReverse#(#boolean#reverse#)#{#this#.#reverse#=#reverse#;#}##Comparator#getComparator#(#)#{#return#comparator#;#}##void#setComparator#(#Comparator#comparator#)#{#this#.#comparator#=#comparator#;#}##void#add#(#Comparator#comparator#)#{#if#(#this#.#comparator#!=#null#&&#comparator#!=#null#)#{#throw#new#BuildException#(#"can't have more than one comparator"#)#;#}#setComparator#(#comparator#)#;#}##void#initialize#(#)#throws#IOException#{#// get parameters#Parameter#[#]#params#=#getParameters#(#)#;#if#(#params#!=#null#)#{#for#(#int#i#=#0#;#i#<#params#.#length#;#i#++#)#{#final#String#paramName#=#params#[#i#]#.#getName#(#)#;#if#(#REVERSE_KEY#.#equals#(#paramName#)#)#{#setReverse#(#Boolean#.#valueOf#(#params#[#i#]#.#getValue#(#)#)#.#booleanValue#(#)#)#;#continue#;#}#if#(#COMPARATOR_KEY#.#equals#(#paramName#)#)#{#try#{#String#className#=#(#String#)#params#[#i#]#.#getValue#(#)#;#setComparator#(#(#Comparator#)#(#Class#.#forName#(#className#)#.#newInstance#(#)#)#)#;#continue#;#}#catch#(#InstantiationException#e#)#{#throw#new#BuildException#(#e#)#;#}#catch#(#IllegalAccessException#e#)#{#/*
                         * Probably a inner non-static class, this this case is
                         * not considered
                         */#throw#new#BuildException#(#e#)#;#}#catch#(#ClassNotFoundException#e#)#{#throw#new#BuildException#(#e#)#;#}#catch#(#ClassCastException#e#)#{#throw#new#BuildException#(#"Value of comparator attribute"#+#" should implement"#+#" java.util.Comparator"#+#" interface"#)#;#}#catch#(#Exception#e#)#{#throw#new#BuildException#(#e#)#;#}#}#}#}#}##void#sort#(#)#{#if#(#comparator#==#null#)#{#if#(#reverse#)#{#Collections#.#sort#(#lines#,#new#Comparator#(#)#{#public#int#compare#(#Object#o1#,#Object#o2#)#{#String#s1#=#(#String#)#o1#;#String#s2#=#(#String#)#o2#;#return#(#-#s1#.#compareTo#(#s2#)#)#;#}#}#)#;#}#else#{#Collections#.#sort#(#lines#)#;#}#}#else#{#Collections#.#sort#(#lines#,#comparator#)#;#}#}##int#compare#(#Object#o1#,#Object#o2#)#{#String#s1#=#(#String#)#o1#;#String#s2#=#(#String#)#o2#;#return#(#-#s1#.#compareTo#(#s2#)#)#;#}##