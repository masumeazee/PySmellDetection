int#compare#(#Object#foo#,#Object#bar#)#{#return#(#(#Comparable#)#foo#)#.#compareTo#(#bar#)#*#-#1#;#}##Iterator#iterator#(#)#{#return#new#FileResourceIterator#(#project#,#basedir#,#dirs#)#;#}##boolean#isFilesystemOnly#(#)#{#return#true#;#}##int#size#(#)#{#return#dirs#.#length#;#}##void#setFile#(#File#file#)#{#this#.#file#=#file#;#}##void#setDir#(#File#dir#)#{#this#.#dir#=#dir#;#getImplicitFileSet#(#)#.#setDir#(#dir#)#;#}##void#setVerbose#(#boolean#verbose#)#{#if#(#verbose#)#{#this#.#verbosity#=#Project#.#MSG_INFO#;#}#else#{#this#.#verbosity#=#Project#.#MSG_VERBOSE#;#}#}##void#setQuiet#(#boolean#quiet#)#{#this#.#quiet#=#quiet#;#if#(#quiet#)#{#this#.#failonerror#=#false#;#}#}##void#setFailOnError#(#boolean#failonerror#)#{#this#.#failonerror#=#failonerror#;#}##void#setDeleteOnExit#(#boolean#deleteOnExit#)#{#this#.#deleteOnExit#=#deleteOnExit#;#}##void#setIncludeEmptyDirs#(#boolean#includeEmpty#)#{#this#.#includeEmpty#=#includeEmpty#;#}##void#addFileset#(#FileSet#set#)#{#filesets#.#addElement#(#set#)#;#}##void#add#(#ResourceCollection#rc#)#{#if#(#rc#==#null#)#{#return#;#}#if#(#rcs#==#null#)#{#rcs#=#new#Resources#(#)#;#rcs#.#setCache#(#true#)#;#}#rcs#.#add#(#rc#)#;#}##PatternSet#.#NameEntry#createInclude#(#)#{#usedMatchingTask#=#true#;#return#super#.#createInclude#(#)#;#}##PatternSet#.#NameEntry#createIncludesFile#(#)#{#usedMatchingTask#=#true#;#return#super#.#createIncludesFile#(#)#;#}##PatternSet#.#NameEntry#createExclude#(#)#{#usedMatchingTask#=#true#;#return#super#.#createExclude#(#)#;#}##PatternSet#.#NameEntry#createExcludesFile#(#)#{#usedMatchingTask#=#true#;#return#super#.#createExcludesFile#(#)#;#}##PatternSet#createPatternSet#(#)#{#usedMatchingTask#=#true#;#return#super#.#createPatternSet#(#)#;#}##void#setIncludes#(#String#includes#)#{#usedMatchingTask#=#true#;#super#.#setIncludes#(#includes#)#;#}##void#setExcludes#(#String#excludes#)#{#usedMatchingTask#=#true#;#super#.#setExcludes#(#excludes#)#;#}##void#setDefaultexcludes#(#boolean#useDefaultExcludes#)#{#usedMatchingTask#=#true#;#super#.#setDefaultexcludes#(#useDefaultExcludes#)#;#}##void#setIncludesfile#(#File#includesfile#)#{#usedMatchingTask#=#true#;#super#.#setIncludesfile#(#includesfile#)#;#}##void#setExcludesfile#(#File#excludesfile#)#{#usedMatchingTask#=#true#;#super#.#setExcludesfile#(#excludesfile#)#;#}##void#setCaseSensitive#(#boolean#isCaseSensitive#)#{#usedMatchingTask#=#true#;#super#.#setCaseSensitive#(#isCaseSensitive#)#;#}##void#setFollowSymlinks#(#boolean#followSymlinks#)#{#usedMatchingTask#=#true#;#super#.#setFollowSymlinks#(#followSymlinks#)#;#}##void#setRemoveNotFollowedSymlinks#(#boolean#b#)#{#removeNotFollowedSymlinks#=#b#;#}##void#addSelector#(#SelectSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addSelector#(#selector#)#;#}##void#addAnd#(#AndSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addAnd#(#selector#)#;#}##void#addOr#(#OrSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addOr#(#selector#)#;#}##void#addNot#(#NotSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addNot#(#selector#)#;#}##void#addNone#(#NoneSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addNone#(#selector#)#;#}##void#addMajority#(#MajoritySelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addMajority#(#selector#)#;#}##void#addDate#(#DateSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addDate#(#selector#)#;#}##void#addSize#(#SizeSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addSize#(#selector#)#;#}##void#addFilename#(#FilenameSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addFilename#(#selector#)#;#}##void#addCustom#(#ExtendSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addCustom#(#selector#)#;#}##void#addContains#(#ContainsSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addContains#(#selector#)#;#}##void#addPresent#(#PresentSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addPresent#(#selector#)#;#}##void#addDepth#(#DepthSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addDepth#(#selector#)#;#}##void#addDepend#(#DependSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addDepend#(#selector#)#;#}##void#addContainsRegexp#(#ContainsRegexpSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addContainsRegexp#(#selector#)#;#}##void#addModified#(#ModifiedSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#addModified#(#selector#)#;#}##void#add#(#FileSelector#selector#)#{#usedMatchingTask#=#true#;#super#.#add#(#selector#)#;#}##void#execute#(#)#throws#BuildException#{#if#(#usedMatchingTask#)#{#log#(#"DEPRECATED - Use of the implicit FileSet is deprecated.  "#+#"Use a nested fileset element instead."#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#}#if#(#file#==#null#&&#dir#==#null#&&#filesets#.#size#(#)#==#0#&&#rcs#==#null#)#{#throw#new#BuildException#(#"At least one of the file or dir "#+#"attributes, or a nested resource collection, "#+#"must be set."#)#;#}#if#(#quiet#&&#failonerror#)#{#throw#new#BuildException#(#"quiet and failonerror cannot both be "#+#"set to true"#,#getLocation#(#)#)#;#}#// delete the single file#if#(#file#!=#null#)#{#if#(#file#.#exists#(#)#)#{#if#(#file#.#isDirectory#(#)#)#{#log#(#"Directory "#+#file#.#getAbsolutePath#(#)#+#" cannot be removed using the file attribute.  "#+#"Use dir instead."#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#}#else#{#log#(#"Deleting: "#+#file#.#getAbsolutePath#(#)#)#;#if#(#!#delete#(#file#)#)#{#handle#(#"Unable to delete file "#+#file#.#getAbsolutePath#(#)#)#;#}#}#}#else#if#(#isDanglingSymlink#(#file#)#)#{#log#(#"Trying to delete file "#+#file#.#getAbsolutePath#(#)#+#" which looks like a broken symlink."#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#if#(#!#delete#(#file#)#)#{#handle#(#"Unable to delete file "#+#file#.#getAbsolutePath#(#)#)#;#}#}#else#{#log#(#"Could not find file "#+#file#.#getAbsolutePath#(#)#+#" to delete."#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#}#}#// delete the directory#if#(#dir#!=#null#&&#!#usedMatchingTask#)#{#if#(#dir#.#exists#(#)#&&#dir#.#isDirectory#(#)#)#{#/*
                  If verbosity is MSG_VERBOSE, that mean we are doing
                  regular logging (backwards as that sounds).  In that
                  case, we want to print one message about deleting the
                  top of the directory tree.  Otherwise, the removeDir
                  method will handle messages for _all_ directories.
                */#if#(#verbosity#==#Project#.#MSG_VERBOSE#)#{#log#(#"Deleting directory "#+#dir#.#getAbsolutePath#(#)#)#;#}#removeDir#(#dir#)#;#}#else#if#(#isDanglingSymlink#(#dir#)#)#{#log#(#"Trying to delete directory "#+#dir#.#getAbsolutePath#(#)#+#" which looks like a broken symlink."#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#if#(#!#delete#(#dir#)#)#{#handle#(#"Unable to delete directory "#+#dir#.#getAbsolutePath#(#)#)#;#}#}#}#Resources#resourcesToDelete#=#new#Resources#(#)#;#resourcesToDelete#.#setProject#(#getProject#(#)#)#;#resourcesToDelete#.#setCache#(#true#)#;#Resources#filesetDirs#=#new#Resources#(#)#;#filesetDirs#.#setProject#(#getProject#(#)#)#;#filesetDirs#.#setCache#(#true#)#;#FileSet#implicit#=#null#;#if#(#usedMatchingTask#&&#dir#!=#null#&&#dir#.#isDirectory#(#)#)#{#//add the files from the default fileset:#implicit#=#getImplicitFileSet#(#)#;#implicit#.#setProject#(#getProject#(#)#)#;#filesets#.#add#(#implicit#)#;#}#for#(#int#i#=#0#,#size#=#filesets#.#size#(#)#;#i#<#size#;#i#++#)#{#FileSet#fs#=#(#FileSet#)#filesets#.#get#(#i#)#;#if#(#fs#.#getProject#(#)#==#null#)#{#log#(#"Deleting fileset with no project specified;"#+#" assuming executing project"#,#Project#.#MSG_VERBOSE#)#;#fs#=#(#FileSet#)#fs#.#clone#(#)#;#fs#.#setProject#(#getProject#(#)#)#;#}#final#File#fsDir#=#fs#.#getDir#(#)#;#if#(#fsDir#==#null#)#{#throw#new#BuildException#(#"File or Resource without directory or file specified"#)#;#}#else#if#(#!#fsDir#.#isDirectory#(#)#)#{#handle#(#"Directory does not exist: "#+#fsDir#)#;#}#else#{#DirectoryScanner#ds#=#fs#.#getDirectoryScanner#(#)#;#// the previous line has already scanned the#// filesystem, in order to avoid a rescan when later#// iterating, capture the results now and store them#final#String#[#]#files#=#ds#.#getIncludedFiles#(#)#;#resourcesToDelete#.#add#(#new#ResourceCollection#(#)#{#public#boolean#isFilesystemOnly#(#)#{#return#true#;#}#public#int#size#(#)#{#return#files#.#length#;#}#public#Iterator#iterator#(#)#{#return#new#FileResourceIterator#(#getProject#(#)#,#fsDir#,#files#)#;#}#}#)#;#if#(#includeEmpty#)#{#filesetDirs#.#add#(#new#ReverseDirs#(#getProject#(#)#,#fsDir#,#ds#.#getIncludedDirectories#(#)#)#)#;#}#if#(#removeNotFollowedSymlinks#)#{#String#[#]#n#=#ds#.#getNotFollowedSymlinks#(#)#;#if#(#n#.#length#>#0#)#{#String#[#]#links#=#new#String#[#n#.#length#]#;#System#.#arraycopy#(#n#,#0#,#links#,#0#,#n#.#length#)#;#Arrays#.#sort#(#links#,#ReverseDirs#.#REVERSE#)#;#for#(#int#l#=#0#;#l#<#links#.#length#;#l#++#)#{#try#{#SYMLINK_UTILS#.#deleteSymbolicLink#(#new#File#(#links#[#l#]#)#,#this#)#;#}#catch#(#java#.#io#.#IOException#ex#)#{#handle#(#ex#)#;#}#}#}#}#}#}#resourcesToDelete#.#add#(#filesetDirs#)#;#if#(#rcs#!=#null#)#{#// sort first to files, then dirs#Restrict#exists#=#new#Restrict#(#)#;#exists#.#add#(#EXISTS#)#;#exists#.#add#(#rcs#)#;#Sort#s#=#new#Sort#(#)#;#s#.#add#(#REVERSE_FILESYSTEM#)#;#s#.#add#(#exists#)#;#resourcesToDelete#.#add#(#s#)#;#}#try#{#if#(#resourcesToDelete#.#isFilesystemOnly#(#)#)#{#for#(#Iterator#iter#=#resourcesToDelete#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#// nonexistent resources could only occur if we already#// deleted something from a fileset:#Resource#r#=#(#Resource#)#iter#.#next#(#)#;#File#f#=#(#(#FileProvider#)#r#.#as#(#FileProvider#.#class#)#)#.#getFile#(#)#;#if#(#!#f#.#exists#(#)#)#{#continue#;#}#if#(#!#(#f#.#isDirectory#(#)#)#||#f#.#list#(#)#.#length#==#0#)#{#log#(#"Deleting "#+#f#,#verbosity#)#;#if#(#!#delete#(#f#)#&&#failonerror#)#{#handle#(#"Unable to delete "#+#(#f#.#isDirectory#(#)#?#"directory "#:#"file "#)#+#f#)#;#}#}#}#}#else#{#handle#(#getTaskName#(#)#+#" handles only filesystem resources"#)#;#}#}#catch#(#Exception#e#)#{#handle#(#e#)#;#}#finally#{#if#(#implicit#!=#null#)#{#filesets#.#remove#(#implicit#)#;#}#}#}##boolean#isFilesystemOnly#(#)#{#return#true#;#}##int#size#(#)#{#return#files#.#length#;#}##Iterator#iterator#(#)#{#return#new#FileResourceIterator#(#getProject#(#)#,#fsDir#,#files#)#;#}##void#handle#(#String#msg#)#{#handle#(#new#BuildException#(#msg#)#)#;#}##void#handle#(#Exception#e#)#{#if#(#failonerror#)#{#throw#(#e#instanceof#BuildException#)#?#(#BuildException#)#e#:#new#BuildException#(#e#)#;#}#log#(#e#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#}##boolean#delete#(#File#f#)#{#if#(#!#FILE_UTILS#.#tryHardToDelete#(#f#)#)#{#if#(#deleteOnExit#)#{#int#level#=#quiet#?#Project#.#MSG_VERBOSE#:#Project#.#MSG_INFO#;#log#(#"Failed to delete "#+#f#+#", calling deleteOnExit."#+#" This attempts to delete the file when the Ant jvm"#+#" has exited and might not succeed."#,#level#)#;#f#.#deleteOnExit#(#)#;#return#true#;#}#return#false#;#}#return#true#;#}##void#removeDir#(#File#d#)#{#String#[#]#list#=#d#.#list#(#)#;#if#(#list#==#null#)#{#list#=#new#String#[#0#]#;#}#for#(#int#i#=#0#;#i#<#list#.#length#;#i#++#)#{#String#s#=#list#[#i#]#;#File#f#=#new#File#(#d#,#s#)#;#if#(#f#.#isDirectory#(#)#)#{#removeDir#(#f#)#;#}#else#{#log#(#"Deleting "#+#f#.#getAbsolutePath#(#)#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#if#(#!#delete#(#f#)#)#{#handle#(#"Unable to delete file "#+#f#.#getAbsolutePath#(#)#)#;#}#}#}#log#(#"Deleting directory "#+#d#.#getAbsolutePath#(#)#,#verbosity#)#;#if#(#!#delete#(#d#)#)#{#handle#(#"Unable to delete directory "#+#d#.#getAbsolutePath#(#)#)#;#}#}##void#removeFiles#(#File#d#,#String#[#]#files#,#String#[#]#dirs#)#{#if#(#files#.#length#>#0#)#{#log#(#"Deleting "#+#files#.#length#+#" files from "#+#d#.#getAbsolutePath#(#)#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#for#(#int#j#=#0#;#j#<#files#.#length#;#j#++#)#{#File#f#=#new#File#(#d#,#files#[#j#]#)#;#log#(#"Deleting "#+#f#.#getAbsolutePath#(#)#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#if#(#!#delete#(#f#)#)#{#handle#(#"Unable to delete file "#+#f#.#getAbsolutePath#(#)#)#;#}#}#}#if#(#dirs#.#length#>#0#&&#includeEmpty#)#{#int#dirCount#=#0#;#for#(#int#j#=#dirs#.#length#-#1#;#j#>=#0#;#j#--#)#{#File#currDir#=#new#File#(#d#,#dirs#[#j#]#)#;#String#[#]#dirFiles#=#currDir#.#list#(#)#;#if#(#dirFiles#==#null#||#dirFiles#.#length#==#0#)#{#log#(#"Deleting "#+#currDir#.#getAbsolutePath#(#)#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#if#(#!#delete#(#currDir#)#)#{#handle#(#"Unable to delete directory "#+#currDir#.#getAbsolutePath#(#)#)#;#}#else#{#dirCount#++#;#}#}#}#if#(#dirCount#>#0#)#{#log#(#"Deleted "#+#dirCount#+#" director"#+#(#dirCount#==#1#?#"y"#:#"ies"#)#+#" form "#+#d#.#getAbsolutePath#(#)#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#}#}#}##boolean#isDanglingSymlink#(#File#f#)#{#try#{#return#SYMLINK_UTILS#.#isDanglingSymbolicLink#(#f#)#;#}#catch#(#java#.#io#.#IOException#e#)#{#log#(#"Error while trying to detect "#+#f#.#getAbsolutePath#(#)#+#" as broken symbolic link. "#+#e#.#getMessage#(#)#,#quiet#?#Project#.#MSG_VERBOSE#:#verbosity#)#;#return#false#;#}#}##