Iterator#iterator#(#)#{#return#basedirExists#(#)#?#fs#.#iterator#(#)#:#Resources#.#EMPTY_ITERATOR#;#}##int#size#(#)#{#return#basedirExists#(#)#?#fs#.#size#(#)#:#0#;#}##boolean#isFilesystemOnly#(#)#{#return#true#;#}##boolean#basedirExists#(#)#{#File#basedir#=#fs#.#getDir#(#)#;#//trick to evoke "basedir not set" if null:#return#basedir#==#null#||#basedir#.#exists#(#)#;#}##Union#createSources#(#)#{#sources#=#(#sources#==#null#)#?#new#Union#(#)#:#sources#;#return#sources#;#}##void#addSrcfileset#(#FileSet#fs#)#{#createSources#(#)#.#add#(#fs#)#;#}##void#addSrcfilelist#(#FileList#fl#)#{#createSources#(#)#.#add#(#fl#)#;#}##Path#createTargets#(#)#{#targets#=#(#targets#==#null#)#?#new#Path#(#getProject#(#)#)#:#targets#;#return#targets#;#}##void#addTargetfileset#(#FileSet#fs#)#{#createTargets#(#)#.#add#(#new#HideMissingBasedir#(#fs#)#)#;#}##void#addTargetfilelist#(#FileList#fl#)#{#createTargets#(#)#.#add#(#fl#)#;#}##void#setVerbose#(#boolean#b#)#{#verbose#=#b#;#}##void#execute#(#)#throws#BuildException#{#if#(#sources#==#null#)#{#throw#new#BuildException#(#"At least one set of source resources must be specified"#)#;#}#if#(#targets#==#null#)#{#throw#new#BuildException#(#"At least one set of target files must be specified"#)#;#}#//no sources = nothing to compare; no targets = nothing to delete:#if#(#sources#.#size#(#)#>#0#&&#targets#.#size#(#)#>#0#&&#!#uptodate#(#sources#,#targets#)#)#{#log#(#"Deleting all target files."#,#Project#.#MSG_VERBOSE#)#;#if#(#verbose#)#{#String#[#]#t#=#targets#.#list#(#)#;#for#(#int#i#=#0#;#i#<#t#.#length#;#i#++#)#{#log#(#"Deleting "#+#t#[#i#]#)#;#}#}#Delete#delete#=#new#Delete#(#)#;#delete#.#bindToOwner#(#this#)#;#delete#.#add#(#targets#)#;#delete#.#perform#(#)#;#}#}##boolean#uptodate#(#ResourceCollection#src#,#ResourceCollection#target#)#{#org#.#apache#.#tools#.#ant#.#types#.#resources#.#selectors#.#Date#datesel#=#new#org#.#apache#.#tools#.#ant#.#types#.#resources#.#selectors#.#Date#(#)#;#datesel#.#setMillis#(#System#.#currentTimeMillis#(#)#)#;#datesel#.#setWhen#(#TimeComparison#.#AFTER#)#;#// don't whine because a file has changed during the last#// second (or whathever our current granularity may be)#datesel#.#setGranularity#(#0#)#;#logFuture#(#targets#,#datesel#)#;#NonExistent#missingTargets#=#new#NonExistent#(#targets#)#;#int#neTargets#=#missingTargets#.#size#(#)#;#if#(#neTargets#>#0#)#{#log#(#neTargets#+#" nonexistent targets"#,#Project#.#MSG_VERBOSE#)#;#logMissing#(#missingTargets#,#"target"#)#;#return#false#;#}#Resource#oldestTarget#=#getOldest#(#targets#)#;#logWithModificationTime#(#oldestTarget#,#"oldest target file"#)#;#logFuture#(#sources#,#datesel#)#;#NonExistent#missingSources#=#new#NonExistent#(#sources#)#;#int#neSources#=#missingSources#.#size#(#)#;#if#(#neSources#>#0#)#{#log#(#neSources#+#" nonexistent sources"#,#Project#.#MSG_VERBOSE#)#;#logMissing#(#missingSources#,#"source"#)#;#return#false#;#}#Resource#newestSource#=#(#Resource#)#getNewest#(#sources#)#;#logWithModificationTime#(#newestSource#,#"newest source"#)#;#return#oldestTarget#.#getLastModified#(#)#>=#newestSource#.#getLastModified#(#)#;#}##void#logFuture#(#ResourceCollection#rc#,#ResourceSelector#rsel#)#{#Restrict#r#=#new#Restrict#(#)#;#r#.#add#(#rsel#)#;#r#.#add#(#rc#)#;#for#(#Iterator#i#=#r#.#iterator#(#)#;#i#.#hasNext#(#)#;#)#{#log#(#"Warning: "#+#i#.#next#(#)#+#" modified in the future."#,#Project#.#MSG_WARN#)#;#}#}##Resource#getXest#(#ResourceCollection#rc#,#ResourceComparator#c#)#{#Iterator#i#=#rc#.#iterator#(#)#;#if#(#!#i#.#hasNext#(#)#)#{#return#null#;#}#Resource#xest#=#(#Resource#)#i#.#next#(#)#;#while#(#i#.#hasNext#(#)#)#{#Resource#next#=#(#Resource#)#i#.#next#(#)#;#if#(#c#.#compare#(#xest#,#next#)#<#0#)#{#xest#=#next#;#}#}#return#xest#;#}##Resource#getOldest#(#ResourceCollection#rc#)#{#return#getXest#(#rc#,#REVERSE_DATE#)#;#}##Resource#getNewest#(#ResourceCollection#rc#)#{#return#getXest#(#rc#,#DATE#)#;#}##void#logWithModificationTime#(#Resource#r#,#String#what#)#{#log#(#r#.#toLongString#(#)#+#" is "#+#what#+#", modified at "#+#new#Date#(#r#.#getLastModified#(#)#)#,#verbose#?#Project#.#MSG_INFO#:#Project#.#MSG_VERBOSE#)#;#}##void#logMissing#(#ResourceCollection#missing#,#String#what#)#{#if#(#verbose#)#{#for#(#Iterator#i#=#missing#.#iterator#(#)#;#i#.#hasNext#(#)#;#)#{#Resource#r#=#(#Resource#)#i#.#next#(#)#;#log#(#"Expected "#+#what#+#" "#+#r#.#toLongString#(#)#+#" is missing."#)#;#}#}#}##