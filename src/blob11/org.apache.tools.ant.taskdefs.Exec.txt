void#execute#(#)#throws#BuildException#{#run#(#command#)#;#}##int#run#(#String#command#)#throws#BuildException#{#int#err#=#-#1#;#// assume the worst#// test if os match#String#myos#=#System#.#getProperty#(#"os.name"#)#;#log#(#"Myos = "#+#myos#,#Project#.#MSG_VERBOSE#)#;#if#(#(#os#!=#null#)#&&#(#os#.#indexOf#(#myos#)#<#0#)#)#{#// this command will be executed only on the specified OS#log#(#"Not found in "#+#os#,#Project#.#MSG_VERBOSE#)#;#return#0#;#}#// default directory to the project's base directory#if#(#dir#==#null#)#{#dir#=#getProject#(#)#.#getBaseDir#(#)#;#}#if#(#myos#.#toLowerCase#(#)#.#indexOf#(#"windows"#)#>=#0#)#{#if#(#!#dir#.#equals#(#getProject#(#)#.#resolveFile#(#"."#)#)#)#{#if#(#myos#.#toLowerCase#(#)#.#indexOf#(#"nt"#)#>=#0#)#{#command#=#"cmd /c cd "#+#dir#+#" && "#+#command#;#}#else#{#String#ant#=#getProject#(#)#.#getProperty#(#MagicNames#.#ANT_HOME#)#;#if#(#ant#==#null#)#{#throw#new#BuildException#(#"Property '"#+#MagicNames#.#ANT_HOME#+#"' not "#+#"found"#,#getLocation#(#)#)#;#}#String#antRun#=#getProject#(#)#.#resolveFile#(#ant#+#"/bin/antRun.bat"#)#.#toString#(#)#;#command#=#antRun#+#" "#+#dir#+#" "#+#command#;#}#}#}#else#{#String#ant#=#getProject#(#)#.#getProperty#(#MagicNames#.#ANT_HOME#)#;#if#(#ant#==#null#)#{#throw#new#BuildException#(#"Property '"#+#MagicNames#.#ANT_HOME#+#"' not found"#,#getLocation#(#)#)#;#}#String#antRun#=#getProject#(#)#.#resolveFile#(#ant#+#"/bin/antRun"#)#.#toString#(#)#;#command#=#antRun#+#" "#+#dir#+#" "#+#command#;#}#try#{#// show the command#log#(#command#,#Project#.#MSG_VERBOSE#)#;#// exec command on system runtime#Process#proc#=#Runtime#.#getRuntime#(#)#.#exec#(#command#)#;#if#(#out#!=#null#)#{#fos#=#new#PrintWriter#(#new#FileWriter#(#out#)#)#;#log#(#"Output redirected to "#+#out#,#Project#.#MSG_VERBOSE#)#;#}#// copy input and error to the output stream#StreamPumper#inputPumper#=#new#StreamPumper#(#proc#.#getInputStream#(#)#,#Project#.#MSG_INFO#)#;#StreamPumper#errorPumper#=#new#StreamPumper#(#proc#.#getErrorStream#(#)#,#Project#.#MSG_WARN#)#;#// starts pumping away the generated output/error#inputPumper#.#start#(#)#;#errorPumper#.#start#(#)#;#// Wait for everything to finish#proc#.#waitFor#(#)#;#inputPumper#.#join#(#)#;#errorPumper#.#join#(#)#;#proc#.#destroy#(#)#;#// close the output file if required#logFlush#(#)#;#// check its exit value#err#=#proc#.#exitValue#(#)#;#if#(#err#!=#0#)#{#if#(#failOnError#)#{#throw#new#BuildException#(#"Exec returned: "#+#err#,#getLocation#(#)#)#;#}#else#{#log#(#"Result: "#+#err#,#Project#.#MSG_ERR#)#;#}#}#}#catch#(#IOException#ioe#)#{#throw#new#BuildException#(#"Error exec: "#+#command#,#ioe#,#getLocation#(#)#)#;#}#catch#(#InterruptedException#ex#)#{#//ignore#}#return#err#;#}##void#setDir#(#String#d#)#{#this#.#dir#=#getProject#(#)#.#resolveFile#(#d#)#;#}##void#setOs#(#String#os#)#{#this#.#os#=#os#;#}##void#setCommand#(#String#command#)#{#this#.#command#=#command#;#}##void#setOutput#(#String#out#)#{#this#.#out#=#out#;#}##void#setFailonerror#(#boolean#fail#)#{#failOnError#=#fail#;#}##void#outputLog#(#String#line#,#int#messageLevel#)#{#if#(#fos#==#null#)#{#log#(#line#,#messageLevel#)#;#}#else#{#fos#.#println#(#line#)#;#}#}##void#logFlush#(#)#{#if#(#fos#!=#null#)#{#fos#.#close#(#)#;#}#}##void#pumpStream#(#)#throws#IOException#{#if#(#!#endOfStream#)#{#String#line#=#din#.#readLine#(#)#;#if#(#line#!=#null#)#{#outputLog#(#line#,#messageLevel#)#;#}#else#{#endOfStream#=#true#;#}#}#}##void#run#(#)#{#try#{#try#{#while#(#!#endOfStream#)#{#pumpStream#(#)#;#sleep#(#SLEEP_TIME#)#;#}#}#catch#(#InterruptedException#ie#)#{#//ignore#}#din#.#close#(#)#;#}#catch#(#IOException#ioe#)#{#// ignore#}#}##