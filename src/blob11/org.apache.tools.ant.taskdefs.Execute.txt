void#setSpawn#(#boolean#spawn#)#{#// Method did not do anything to begin with#}##Vector#getProcEnvironment#(#)#{#if#(#procEnvironment#!=#null#)#{#return#procEnvironment#;#}#procEnvironment#=#new#Vector#(#)#;#try#{#ByteArrayOutputStream#out#=#new#ByteArrayOutputStream#(#)#;#Execute#exe#=#new#Execute#(#new#PumpStreamHandler#(#out#)#)#;#exe#.#setCommandline#(#getProcEnvCommand#(#)#)#;#// Make sure we do not recurse forever#exe#.#setNewenvironment#(#true#)#;#int#retval#=#exe#.#execute#(#)#;#if#(#retval#!=#0#)#{#// Just try to use what we got#}#BufferedReader#in#=#new#BufferedReader#(#new#StringReader#(#toString#(#out#)#)#)#;#if#(#Os#.#isFamily#(#"openvms"#)#)#{#procEnvironment#=#addVMSLogicals#(#procEnvironment#,#in#)#;#return#procEnvironment#;#}#String#var#=#null#;#String#line#,#lineSep#=#StringUtils#.#LINE_SEP#;#while#(#(#line#=#in#.#readLine#(#)#)#!=#null#)#{#if#(#line#.#indexOf#(#'='#)#==#-#1#)#{#// Chunk part of previous env var (UNIX env vars can#// contain embedded new lines).#if#(#var#==#null#)#{#var#=#lineSep#+#line#;#}#else#{#var#+=#lineSep#+#line#;#}#}#else#{#// New env var...append the previous one if we have it.#if#(#var#!=#null#)#{#procEnvironment#.#addElement#(#var#)#;#}#var#=#line#;#}#}#// Since we "look ahead" before adding, there's one last env var.#if#(#var#!=#null#)#{#procEnvironment#.#addElement#(#var#)#;#}#}#catch#(#java#.#io#.#IOException#exc#)#{#exc#.#printStackTrace#(#)#;#// Just try to see how much we got#}#return#procEnvironment#;#}##String#[#]#getProcEnvCommand#(#)#{#if#(#Os#.#isFamily#(#"os/2"#)#)#{#// OS/2 - use same mechanism as Windows 2000#return#new#String#[#]#{#"cmd"#,#"/c"#,#"set"#}#;#}#else#if#(#Os#.#isFamily#(#"windows"#)#)#{#// Determine if we're running under XP/2000/NT or 98/95#if#(#Os#.#isFamily#(#"win9x"#)#)#{#// Windows 98/95#return#new#String#[#]#{#"command.com"#,#"/c"#,#"set"#}#;#}#else#{#// Windows XP/2000/NT/2003#return#new#String#[#]#{#"cmd"#,#"/c"#,#"set"#}#;#}#}#else#if#(#Os#.#isFamily#(#"z/os"#)#||#Os#.#isFamily#(#"unix"#)#)#{#// On most systems one could use: /bin/sh -c env#// Some systems have /bin/env, others /usr/bin/env, just try#String#[#]#cmd#=#new#String#[#1#]#;#if#(#new#File#(#"/bin/env"#)#.#canRead#(#)#)#{#cmd#[#0#]#=#"/bin/env"#;#}#else#if#(#new#File#(#"/usr/bin/env"#)#.#canRead#(#)#)#{#cmd#[#0#]#=#"/usr/bin/env"#;#}#else#{#// rely on PATH#cmd#[#0#]#=#"env"#;#}#return#cmd#;#}#else#if#(#Os#.#isFamily#(#"netware"#)#||#Os#.#isFamily#(#"os/400"#)#)#{#// rely on PATH#return#new#String#[#]#{#"env"#}#;#}#else#if#(#Os#.#isFamily#(#"openvms"#)#)#{#return#new#String#[#]#{#"show"#,#"logical"#}#;#}#else#{#// MAC OS 9 and previous#//TODO: I have no idea how to get it, someone must fix it#return#null#;#}#}##String#toString#(#ByteArrayOutputStream#bos#)#{#if#(#Os#.#isFamily#(#"z/os"#)#)#{#try#{#return#bos#.#toString#(#"Cp1047"#)#;#}#catch#(#java#.#io#.#UnsupportedEncodingException#e#)#{#//noop default encoding used#}#}#else#if#(#Os#.#isFamily#(#"os/400"#)#)#{#try#{#return#bos#.#toString#(#"Cp500"#)#;#}#catch#(#java#.#io#.#UnsupportedEncodingException#e#)#{#//noop default encoding used#}#}#return#bos#.#toString#(#)#;#}##void#setStreamHandler#(#ExecuteStreamHandler#streamHandler#)#{#this#.#streamHandler#=#streamHandler#;#}##String#[#]#getCommandline#(#)#{#return#cmdl#;#}##void#setCommandline#(#String#[#]#commandline#)#{#cmdl#=#commandline#;#}##void#setNewenvironment#(#boolean#newenv#)#{#newEnvironment#=#newenv#;#}##String#[#]#getEnvironment#(#)#{#return#(#env#==#null#||#newEnvironment#)#?#env#:#patchEnvironment#(#)#;#}##void#setEnvironment#(#String#[#]#env#)#{#this#.#env#=#env#;#}##void#setWorkingDirectory#(#File#wd#)#{#workingDirectory#=#(#wd#==#null#||#wd#.#getAbsolutePath#(#)#.#equals#(#antWorkingDirectory#)#)#?#null#:#wd#;#}##File#getWorkingDirectory#(#)#{#return#workingDirectory#==#null#?#new#File#(#antWorkingDirectory#)#:#workingDirectory#;#}##void#setAntRun#(#Project#project#)#throws#BuildException#{#this#.#project#=#project#;#}##void#setVMLauncher#(#boolean#useVMLauncher#)#{#this#.#useVMLauncher#=#useVMLauncher#;#}##Process#launch#(#Project#project#,#String#[#]#command#,#String#[#]#env#,#File#dir#,#boolean#useVM#)#throws#IOException#{#if#(#dir#!=#null#&&#!#dir#.#exists#(#)#)#{#throw#new#BuildException#(#dir#+#" doesn't exist."#)#;#}#CommandLauncher#launcher#=#(#(#useVM#&&#vmLauncher#!=#null#)#?#vmLauncher#:#shellLauncher#)#;#return#launcher#.#exec#(#project#,#command#,#env#,#dir#)#;#}##int#execute#(#)#throws#IOException#{#if#(#workingDirectory#!=#null#&&#!#workingDirectory#.#exists#(#)#)#{#throw#new#BuildException#(#workingDirectory#+#" doesn't exist."#)#;#}#final#Process#process#=#launch#(#project#,#getCommandline#(#)#,#getEnvironment#(#)#,#workingDirectory#,#useVMLauncher#)#;#try#{#streamHandler#.#setProcessInputStream#(#process#.#getOutputStream#(#)#)#;#streamHandler#.#setProcessOutputStream#(#process#.#getInputStream#(#)#)#;#streamHandler#.#setProcessErrorStream#(#process#.#getErrorStream#(#)#)#;#}#catch#(#IOException#e#)#{#process#.#destroy#(#)#;#throw#e#;#}#streamHandler#.#start#(#)#;#try#{#// add the process to the list of those to destroy if the VM exits#//#processDestroyer#.#add#(#process#)#;#if#(#watchdog#!=#null#)#{#watchdog#.#start#(#process#)#;#}#waitFor#(#process#)#;#if#(#watchdog#!=#null#)#{#watchdog#.#stop#(#)#;#}#streamHandler#.#stop#(#)#;#closeStreams#(#process#)#;#if#(#watchdog#!=#null#)#{#watchdog#.#checkException#(#)#;#}#return#getExitValue#(#)#;#}#catch#(#ThreadDeath#t#)#{#// #31928: forcibly kill it before continuing.#process#.#destroy#(#)#;#throw#t#;#}#finally#{#// remove the process to the list of those to destroy if#// the VM exits#//#processDestroyer#.#remove#(#process#)#;#}#}##void#spawn#(#)#throws#IOException#{#if#(#workingDirectory#!=#null#&&#!#workingDirectory#.#exists#(#)#)#{#throw#new#BuildException#(#workingDirectory#+#" doesn't exist."#)#;#}#final#Process#process#=#launch#(#project#,#getCommandline#(#)#,#getEnvironment#(#)#,#workingDirectory#,#useVMLauncher#)#;#if#(#Os#.#isFamily#(#"windows"#)#)#{#try#{#Thread#.#sleep#(#ONE_SECOND#)#;#}#catch#(#InterruptedException#e#)#{#project#.#log#(#"interruption in the sleep after having spawned a"#+#" process"#,#Project#.#MSG_VERBOSE#)#;#}#}#OutputStream#dummyOut#=#new#OutputStream#(#)#{#public#void#write#(#int#b#)#throws#IOException#{#// Method intended to swallow whatever comes at it#}#}#;#ExecuteStreamHandler#handler#=#new#PumpStreamHandler#(#dummyOut#)#;#handler#.#setProcessErrorStream#(#process#.#getErrorStream#(#)#)#;#handler#.#setProcessOutputStream#(#process#.#getInputStream#(#)#)#;#handler#.#start#(#)#;#process#.#getOutputStream#(#)#.#close#(#)#;#project#.#log#(#"spawned process "#+#process#.#toString#(#)#,#Project#.#MSG_VERBOSE#)#;#}##void#write#(#int#b#)#throws#IOException#{#// Method intended to swallow whatever comes at it#}##void#waitFor#(#Process#process#)#{#try#{#process#.#waitFor#(#)#;#setExitValue#(#process#.#exitValue#(#)#)#;#}#catch#(#InterruptedException#e#)#{#process#.#destroy#(#)#;#}#}##void#setExitValue#(#int#value#)#{#exitValue#=#value#;#}##int#getExitValue#(#)#{#return#exitValue#;#}##boolean#isFailure#(#int#exitValue#)#{#//on openvms even exit value signals failure;#// for other platforms nonzero exit value signals failure#return#Os#.#isFamily#(#"openvms"#)#?#(#exitValue#%#2#==#0#)#:#(#exitValue#!=#0#)#;#}##boolean#isFailure#(#)#{#return#isFailure#(#getExitValue#(#)#)#;#}##boolean#killedProcess#(#)#{#return#watchdog#!=#null#&&#watchdog#.#killedProcess#(#)#;#}##String#[#]#patchEnvironment#(#)#{#// On OpenVMS Runtime#exec() doesn't support the environment array,#// so we only return the new values which then will be set in#// the generated DCL script, inheriting the parent process environment#if#(#Os#.#isFamily#(#"openvms"#)#)#{#return#env#;#}#Vector#osEnv#=#(#Vector#)#getProcEnvironment#(#)#.#clone#(#)#;#for#(#int#i#=#0#;#i#<#env#.#length#;#i#++#)#{#String#keyValue#=#env#[#i#]#;#// Get key including "="#String#key#=#keyValue#.#substring#(#0#,#keyValue#.#indexOf#(#'='#)#+#1#)#;#if#(#environmentCaseInSensitive#)#{#// Nb: using default locale as key is a env name#key#=#key#.#toLowerCase#(#)#;#}#int#size#=#osEnv#.#size#(#)#;#// Find the key in the current enviroment copy#// and remove it.#for#(#int#j#=#0#;#j#<#size#;#j#++#)#{#String#osEnvItem#=#(#String#)#osEnv#.#elementAt#(#j#)#;#String#convertedItem#=#environmentCaseInSensitive#?#osEnvItem#.#toLowerCase#(#)#:#osEnvItem#;#if#(#convertedItem#.#startsWith#(#key#)#)#{#osEnv#.#removeElementAt#(#j#)#;#if#(#environmentCaseInSensitive#)#{#// Use the original casiness of the key#keyValue#=#osEnvItem#.#substring#(#0#,#key#.#length#(#)#)#+#keyValue#.#substring#(#key#.#length#(#)#)#;#}#break#;#}#}#// Add the key to the enviromnent copy#osEnv#.#addElement#(#keyValue#)#;#}#return#(#String#[#]#)#(#osEnv#.#toArray#(#new#String#[#osEnv#.#size#(#)#]#)#)#;#}##void#runCommand#(#Task#task#,#String#[#]#cmdline#)#throws#BuildException#{#try#{#task#.#log#(#Commandline#.#describeCommand#(#cmdline#)#,#Project#.#MSG_VERBOSE#)#;#Execute#exe#=#new#Execute#(#new#LogStreamHandler#(#task#,#Project#.#MSG_INFO#,#Project#.#MSG_ERR#)#)#;#exe#.#setAntRun#(#task#.#getProject#(#)#)#;#exe#.#setCommandline#(#cmdline#)#;#int#retval#=#exe#.#execute#(#)#;#if#(#isFailure#(#retval#)#)#{#throw#new#BuildException#(#cmdline#[#0#]#+#" failed with return code "#+#retval#,#task#.#getLocation#(#)#)#;#}#}#catch#(#java#.#io#.#IOException#exc#)#{#throw#new#BuildException#(#"Could not launch "#+#cmdline#[#0#]#+#": "#+#exc#,#task#.#getLocation#(#)#)#;#}#}##void#closeStreams#(#Process#process#)#{#FileUtils#.#close#(#process#.#getInputStream#(#)#)#;#FileUtils#.#close#(#process#.#getOutputStream#(#)#)#;#FileUtils#.#close#(#process#.#getErrorStream#(#)#)#;#}##Vector#addVMSLogicals#(#Vector#environment#,#BufferedReader#in#)#throws#IOException#{#HashMap#logicals#=#new#HashMap#(#)#;#String#logName#=#null#,#logValue#=#null#,#newLogName#;#String#line#=#null#;#// CheckStyle:MagicNumber OFF#while#(#(#line#=#in#.#readLine#(#)#)#!=#null#)#{#// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")#if#(#line#.#startsWith#(#"\t="#)#)#{#// further equivalence name of previous logical#if#(#logName#!=#null#)#{#logValue#+=#","#+#line#.#substring#(#4#,#line#.#length#(#)#-#1#)#;#}#}#else#if#(#line#.#startsWith#(#"  \""#)#)#{#// new logical?#if#(#logName#!=#null#)#{#logicals#.#put#(#logName#,#logValue#)#;#}#int#eqIndex#=#line#.#indexOf#(#'='#)#;#newLogName#=#line#.#substring#(#3#,#eqIndex#-#2#)#;#if#(#logicals#.#containsKey#(#newLogName#)#)#{#// already got this logical from a higher order table#logName#=#null#;#}#else#{#logName#=#newLogName#;#logValue#=#line#.#substring#(#eqIndex#+#3#,#line#.#length#(#)#-#1#)#;#}#}#}#// CheckStyle:MagicNumber ON#// Since we "look ahead" before adding, there's one last env var.#if#(#logName#!=#null#)#{#logicals#.#put#(#logName#,#logValue#)#;#}#for#(#Iterator#i#=#logicals#.#keySet#(#)#.#iterator#(#)#;#i#.#hasNext#(#)#;#)#{#String#logical#=#(#String#)#i#.#next#(#)#;#environment#.#add#(#logical#+#"="#+#logicals#.#get#(#logical#)#)#;#}#return#environment#;#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#)#throws#IOException#{#if#(#project#!=#null#)#{#project#.#log#(#"Execute:CommandLauncher: "#+#Commandline#.#describeCommand#(#cmd#)#,#Project#.#MSG_DEBUG#)#;#}#return#Runtime#.#getRuntime#(#)#.#exec#(#cmd#,#env#)#;#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#,#File#workingDir#)#throws#IOException#{#if#(#workingDir#==#null#)#{#return#exec#(#project#,#cmd#,#env#)#;#}#throw#new#IOException#(#"Cannot execute a process in different "#+#"directory under this JVM"#)#;#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#,#File#workingDir#)#throws#IOException#{#try#{#if#(#project#!=#null#)#{#project#.#log#(#"Execute:Java13CommandLauncher: "#+#Commandline#.#describeCommand#(#cmd#)#,#Project#.#MSG_DEBUG#)#;#}#return#Runtime#.#getRuntime#(#)#.#exec#(#cmd#,#env#,#workingDir#)#;#}#catch#(#IOException#ioex#)#{#throw#ioex#;#}#catch#(#Exception#exc#)#{#// IllegalAccess, IllegalArgument, ClassCast#throw#new#BuildException#(#"Unable to execute command"#,#exc#)#;#}#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#)#throws#IOException#{#return#myLauncher#.#exec#(#project#,#cmd#,#env#)#;#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#,#File#workingDir#)#throws#IOException#{#File#commandDir#=#workingDir#;#if#(#workingDir#==#null#)#{#if#(#project#!=#null#)#{#commandDir#=#project#.#getBaseDir#(#)#;#}#else#{#return#exec#(#project#,#cmd#,#env#)#;#}#}#// Use cmd.exe to change to the specified drive and#// directory before running the command#final#int#preCmdLength#=#7#;#final#String#cmdDir#=#commandDir#.#getAbsolutePath#(#)#;#String#[#]#newcmd#=#new#String#[#cmd#.#length#+#preCmdLength#]#;#// CheckStyle:MagicNumber OFF - do not bother#newcmd#[#0#]#=#"cmd"#;#newcmd#[#1#]#=#"/c"#;#newcmd#[#2#]#=#cmdDir#.#substring#(#0#,#2#)#;#newcmd#[#3#]#=#"&&"#;#newcmd#[#4#]#=#"cd"#;#newcmd#[#5#]#=#cmdDir#.#substring#(#2#)#;#newcmd#[#6#]#=#"&&"#;#// CheckStyle:MagicNumber ON#System#.#arraycopy#(#cmd#,#0#,#newcmd#,#preCmdLength#,#cmd#.#length#)#;#return#exec#(#project#,#newcmd#,#env#)#;#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#,#File#workingDir#)#throws#IOException#{#File#commandDir#=#workingDir#;#if#(#workingDir#==#null#)#{#if#(#project#!=#null#)#{#commandDir#=#project#.#getBaseDir#(#)#;#}#else#{#return#exec#(#project#,#cmd#,#env#)#;#}#}#// Use cmd.exe to change to the specified directory before running#// the command#final#int#preCmdLength#=#6#;#String#[#]#newcmd#=#new#String#[#cmd#.#length#+#preCmdLength#]#;#// CheckStyle:MagicNumber OFF - do not bother#newcmd#[#0#]#=#"cmd"#;#newcmd#[#1#]#=#"/c"#;#newcmd#[#2#]#=#"cd"#;#newcmd#[#3#]#=#"/d"#;#newcmd#[#4#]#=#commandDir#.#getAbsolutePath#(#)#;#newcmd#[#5#]#=#"&&"#;#// CheckStyle:MagicNumber ON#System#.#arraycopy#(#cmd#,#0#,#newcmd#,#preCmdLength#,#cmd#.#length#)#;#return#exec#(#project#,#newcmd#,#env#)#;#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#,#File#workingDir#)#throws#IOException#{#if#(#workingDir#==#null#)#{#return#exec#(#project#,#cmd#,#env#)#;#}#System#.#getProperties#(#)#.#put#(#"user.dir"#,#workingDir#.#getAbsolutePath#(#)#)#;#try#{#return#exec#(#project#,#cmd#,#env#)#;#}#finally#{#System#.#getProperties#(#)#.#put#(#"user.dir"#,#antWorkingDirectory#)#;#}#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#,#File#workingDir#)#throws#IOException#{#if#(#project#==#null#)#{#if#(#workingDir#==#null#)#{#return#exec#(#project#,#cmd#,#env#)#;#}#throw#new#IOException#(#"Cannot locate antRun script: "#+#"No project provided"#)#;#}#// Locate the auxiliary script#String#antHome#=#project#.#getProperty#(#MagicNames#.#ANT_HOME#)#;#if#(#antHome#==#null#)#{#throw#new#IOException#(#"Cannot locate antRun script: "#+#"Property '"#+#MagicNames#.#ANT_HOME#+#"' not found"#)#;#}#String#antRun#=#FILE_UTILS#.#resolveFile#(#project#.#getBaseDir#(#)#,#antHome#+#File#.#separator#+#myScript#)#.#toString#(#)#;#// Build the command#File#commandDir#=#workingDir#;#if#(#workingDir#==#null#)#{#commandDir#=#project#.#getBaseDir#(#)#;#}#String#[#]#newcmd#=#new#String#[#cmd#.#length#+#2#]#;#newcmd#[#0#]#=#antRun#;#newcmd#[#1#]#=#commandDir#.#getAbsolutePath#(#)#;#System#.#arraycopy#(#cmd#,#0#,#newcmd#,#2#,#cmd#.#length#)#;#return#exec#(#project#,#newcmd#,#env#)#;#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#,#File#workingDir#)#throws#IOException#{#if#(#project#==#null#)#{#if#(#workingDir#==#null#)#{#return#exec#(#project#,#cmd#,#env#)#;#}#throw#new#IOException#(#"Cannot locate antRun script: "#+#"No project provided"#)#;#}#// Locate the auxiliary script#String#antHome#=#project#.#getProperty#(#MagicNames#.#ANT_HOME#)#;#if#(#antHome#==#null#)#{#throw#new#IOException#(#"Cannot locate antRun script: "#+#"Property '"#+#MagicNames#.#ANT_HOME#+#"' not found"#)#;#}#String#antRun#=#FILE_UTILS#.#resolveFile#(#project#.#getBaseDir#(#)#,#antHome#+#File#.#separator#+#myScript#)#.#toString#(#)#;#// Build the command#File#commandDir#=#workingDir#;#if#(#workingDir#==#null#)#{#commandDir#=#project#.#getBaseDir#(#)#;#}#// CheckStyle:MagicNumber OFF#String#[#]#newcmd#=#new#String#[#cmd#.#length#+#3#]#;#newcmd#[#0#]#=#"perl"#;#newcmd#[#1#]#=#antRun#;#newcmd#[#2#]#=#commandDir#.#getAbsolutePath#(#)#;#System#.#arraycopy#(#cmd#,#0#,#newcmd#,#3#,#cmd#.#length#)#;#// CheckStyle:MagicNumber ON#return#exec#(#project#,#newcmd#,#env#)#;#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#)#throws#IOException#{#File#cmdFile#=#createCommandFile#(#cmd#,#env#)#;#Process#p#=#super#.#exec#(#project#,#new#String#[#]#{#cmdFile#.#getPath#(#)#}#,#env#)#;#deleteAfter#(#cmdFile#,#p#)#;#return#p#;#}##Process#exec#(#Project#project#,#String#[#]#cmd#,#String#[#]#env#,#File#workingDir#)#throws#IOException#{#File#cmdFile#=#createCommandFile#(#cmd#,#env#)#;#Process#p#=#super#.#exec#(#project#,#new#String#[#]#{#cmdFile#.#getPath#(#)#}#,#env#,#workingDir#)#;#deleteAfter#(#cmdFile#,#p#)#;#return#p#;#}##File#createCommandFile#(#String#[#]#cmd#,#String#[#]#env#)#throws#IOException#{#File#script#=#FILE_UTILS#.#createTempFile#(#"ANT"#,#".COM"#,#null#,#true#,#true#)#;#BufferedWriter#out#=#null#;#try#{#out#=#new#BufferedWriter#(#new#FileWriter#(#script#)#)#;#// add the environment as logicals to the DCL script#if#(#env#!=#null#)#{#int#eqIndex#;#for#(#int#i#=#0#;#i#<#env#.#length#;#i#++#)#{#eqIndex#=#env#[#i#]#.#indexOf#(#'='#)#;#if#(#eqIndex#!=#-#1#)#{#out#.#write#(#"$ DEFINE/NOLOG "#)#;#out#.#write#(#env#[#i#]#.#substring#(#0#,#eqIndex#)#)#;#out#.#write#(#" \""#)#;#out#.#write#(#env#[#i#]#.#substring#(#eqIndex#+#1#)#)#;#out#.#write#(#'\"'#)#;#out#.#newLine#(#)#;#}#}#}#out#.#write#(#"$ "#+#cmd#[#0#]#)#;#for#(#int#i#=#1#;#i#<#cmd#.#length#;#i#++#)#{#out#.#write#(#" -"#)#;#out#.#newLine#(#)#;#out#.#write#(#cmd#[#i#]#)#;#}#}#finally#{#FileUtils#.#close#(#out#)#;#}#return#script#;#}##void#deleteAfter#(#final#File#f#,#final#Process#p#)#{#new#Thread#(#)#{#public#void#run#(#)#{#try#{#p#.#waitFor#(#)#;#}#catch#(#InterruptedException#e#)#{#//ignore#}#FileUtils#.#delete#(#f#)#;#}#}#.#start#(#)#;#}##void#run#(#)#{#try#{#p#.#waitFor#(#)#;#}#catch#(#InterruptedException#e#)#{#//ignore#}#FileUtils#.#delete#(#f#)#;#}##