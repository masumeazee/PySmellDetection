void#setUp#(#)#{#configureProject#(#"src/etc/testcases/taskdefs/makeurl.xml"#)#;#}##void#testEmpty#(#)#{#expectBuildExceptionContaining#(#"testEmpty"#,#"missing property"#,#"property"#)#;#}##void#testNoProperty#(#)#{#expectBuildExceptionContaining#(#"testNoProperty"#,#"missing property"#,#"property"#)#;#}##void#testNoFile#(#)#{#expectBuildExceptionContaining#(#"testNoFile"#,#"missing file"#,#"file"#)#;#}##void#testValidation#(#)#{#expectBuildExceptionContaining#(#"testValidation"#,#MakeUrl#.#ERROR_MISSING_FILE#,#"file"#)#;#}##void#testWorks#(#)#{#executeTarget#(#"testWorks"#)#;#assertPropertyContains#(#"testWorks"#,#"file:"#)#;#assertPropertyContains#(#"testWorks"#,#"/foo"#)#;#}##void#testIllegalChars#(#)#{#executeTarget#(#"testIllegalChars"#)#;#assertPropertyContains#(#"testIllegalChars"#,#"file:"#)#;#assertPropertyContains#(#"testIllegalChars"#,#"fo%20o%25"#)#;#}##void#testRoundTrip#(#)#throws#IOException#{#executeTarget#(#"testRoundTrip"#)#;#assertPropertyContains#(#"testRoundTrip"#,#"file:"#)#;#String#property#=#getProperty#(#"testRoundTrip"#)#;#URL#url#=#new#URL#(#property#)#;#InputStream#instream#=#url#.#openStream#(#)#;#instream#.#close#(#)#;#}##void#testIllegalCombinations#(#)#{#executeTarget#(#"testIllegalCombinations"#)#;#assertPropertyContains#(#"testIllegalCombinations"#,#"/foo"#)#;#assertPropertyContains#(#"testIllegalCombinations"#,#".xml"#)#;#}##void#testFileset#(#)#{#executeTarget#(#"testFileset"#)#;#assertPropertyContains#(#"testFileset"#,#".xml "#)#;#String#result#=#getProperty#(#"testFileset"#)#;#assertPropertyEndsWith#(#"testFileset"#,#".xml"#)#;#}##void#testFilesetSeparator#(#)#{#executeTarget#(#"testFilesetSeparator"#)#;#assertPropertyContains#(#"testFilesetSeparator"#,#".xml\",\""#)#;#assertPropertyEndsWith#(#"testFilesetSeparator"#,#".xml"#)#;#}##void#testPath#(#)#{#executeTarget#(#"testPath"#)#;#assertPropertyContains#(#"testPath"#,#"makeurl.xml"#)#;#}##void#assertPropertyEndsWith#(#String#property#,#String#ending#)#{#String#result#=#getProperty#(#property#)#;#String#substring#=#result#.#substring#(#result#.#length#(#)#-#ending#.#length#(#)#)#;#assertEquals#(#ending#,#substring#)#;#}##void#assertPropertyContains#(#String#property#,#String#contains#)#{#String#result#=#getProperty#(#property#)#;#assertTrue#(#"expected "#+#contains#+#" in "#+#result#,#result#!=#null#&&#result#.#indexOf#(#contains#)#>=#0#)#;#}##String#getProperty#(#String#property#)#{#return#project#.#getProperty#(#property#)#;#}##