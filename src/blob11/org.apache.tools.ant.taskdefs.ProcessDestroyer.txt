void#run#(#)#{#if#(#shouldDestroy#)#{#ProcessDestroyer#.#this#.#run#(#)#;#}#}##void#setShouldDestroy#(#boolean#shouldDestroy#)#{#this#.#shouldDestroy#=#shouldDestroy#;#}##void#addShutdownHook#(#)#{#if#(#addShutdownHookMethod#!=#null#&&#!#running#)#{#destroyProcessThread#=#new#ProcessDestroyerImpl#(#)#;#Object#[#]#args#=#{#destroyProcessThread#}#;#try#{#addShutdownHookMethod#.#invoke#(#Runtime#.#getRuntime#(#)#,#args#)#;#added#=#true#;#}#catch#(#IllegalAccessException#e#)#{#e#.#printStackTrace#(#)#;#}#catch#(#InvocationTargetException#e#)#{#Throwable#t#=#e#.#getTargetException#(#)#;#if#(#t#!=#null#&&#t#.#getClass#(#)#==#IllegalStateException#.#class#)#{#// shutdown already is in progress#running#=#true#;#}#else#{#e#.#printStackTrace#(#)#;#}#}#}#}##void#removeShutdownHook#(#)#{#if#(#removeShutdownHookMethod#!=#null#&&#added#&&#!#running#)#{#Object#[#]#args#=#{#destroyProcessThread#}#;#try#{#Boolean#removed#=#(#Boolean#)#removeShutdownHookMethod#.#invoke#(#Runtime#.#getRuntime#(#)#,#args#)#;#if#(#!#removed#.#booleanValue#(#)#)#{#System#.#err#.#println#(#"Could not remove shutdown hook"#)#;#}#}#catch#(#IllegalAccessException#e#)#{#e#.#printStackTrace#(#)#;#}#catch#(#InvocationTargetException#e#)#{#Throwable#t#=#e#.#getTargetException#(#)#;#if#(#t#!=#null#&&#t#.#getClass#(#)#==#IllegalStateException#.#class#)#{#// shutdown already is in progress#running#=#true#;#}#else#{#e#.#printStackTrace#(#)#;#}#}#// start the hook thread, a unstarted thread may not be#// eligible for garbage collection#// Cf.: http://developer.java.sun.com/developer/bugParade/bugs/4533087.html#destroyProcessThread#.#setShouldDestroy#(#false#)#;#if#(#!#destroyProcessThread#.#getThreadGroup#(#)#.#isDestroyed#(#)#)#{#// start() would throw IllegalThreadStateException from#// ThreadGroup.add if it were destroyed#destroyProcessThread#.#start#(#)#;#}#// this should return quickly, since it basically is a NO-OP.#try#{#destroyProcessThread#.#join#(#THREAD_DIE_TIMEOUT#)#;#}#catch#(#InterruptedException#ie#)#{#// the thread didn't die in time#// it should not kill any processes unexpectedly#}#destroyProcessThread#=#null#;#added#=#false#;#}#}##boolean#isAddedAsShutdownHook#(#)#{#return#added#;#}##boolean#add#(#Process#process#)#{#synchronized#(#processes#)#{#// if this list is empty, register the shutdown hook#if#(#processes#.#size#(#)#==#0#)#{#addShutdownHook#(#)#;#}#processes#.#addElement#(#process#)#;#return#processes#.#contains#(#process#)#;#}#}##boolean#remove#(#Process#process#)#{#synchronized#(#processes#)#{#boolean#processRemoved#=#processes#.#removeElement#(#process#)#;#if#(#processRemoved#&&#processes#.#size#(#)#==#0#)#{#removeShutdownHook#(#)#;#}#return#processRemoved#;#}#}##void#run#(#)#{#synchronized#(#processes#)#{#running#=#true#;#Enumeration#e#=#processes#.#elements#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#(#(#Process#)#e#.#nextElement#(#)#)#.#destroy#(#)#;#}#}#}##