void#close#(#)#throws#IOException#{#synchronized#(#outMutex#)#{#if#(#!#closed#&&#!#(#appendOut#&&#appendProperties#)#)#{#setPropertyFromBAOS#(#this#,#property#)#;#closed#=#true#;#}#}#}##void#setInput#(#File#input#)#{#setInput#(#(#input#==#null#)#?#null#:#new#File#[#]#{#input#}#)#;#}##void#setInput#(#File#[#]#input#)#{#synchronized#(#inMutex#)#{#if#(#input#==#null#)#{#this#.#input#=#null#;#}#else#{#this#.#input#=#(#File#[#]#)#input#.#clone#(#)#;#}#}#}##void#setInputString#(#String#inputString#)#{#synchronized#(#inMutex#)#{#this#.#inputString#=#inputString#;#}#}##void#setLogInputString#(#boolean#logInputString#)#{#this#.#logInputString#=#logInputString#;#}##void#setInputStream#(#InputStream#inputStream#)#{#synchronized#(#inMutex#)#{#this#.#inputStream#=#inputStream#;#}#}##void#setOutput#(#File#out#)#{#setOutput#(#(#out#==#null#)#?#null#:#new#File#[#]#{#out#}#)#;#}##void#setOutput#(#File#[#]#out#)#{#synchronized#(#outMutex#)#{#if#(#out#==#null#)#{#this#.#out#=#null#;#}#else#{#this#.#out#=#(#File#[#]#)#out#.#clone#(#)#;#}#}#}##void#setOutputEncoding#(#String#outputEncoding#)#{#if#(#outputEncoding#==#null#)#{#throw#new#IllegalArgumentException#(#"outputEncoding must not be null"#)#;#}#synchronized#(#outMutex#)#{#this#.#outputEncoding#=#outputEncoding#;#}#}##void#setErrorEncoding#(#String#errorEncoding#)#{#if#(#errorEncoding#==#null#)#{#throw#new#IllegalArgumentException#(#"errorEncoding must not be null"#)#;#}#synchronized#(#errMutex#)#{#this#.#errorEncoding#=#errorEncoding#;#}#}##void#setInputEncoding#(#String#inputEncoding#)#{#if#(#inputEncoding#==#null#)#{#throw#new#IllegalArgumentException#(#"inputEncoding must not be null"#)#;#}#synchronized#(#inMutex#)#{#this#.#inputEncoding#=#inputEncoding#;#}#}##void#setLogError#(#boolean#logError#)#{#synchronized#(#errMutex#)#{#this#.#logError#=#logError#;#}#}##void#setAppendProperties#(#boolean#appendProperties#)#{#synchronized#(#outMutex#)#{#this#.#appendProperties#=#appendProperties#;#}#}##void#setError#(#File#error#)#{#setError#(#(#error#==#null#)#?#null#:#new#File#[#]#{#error#}#)#;#}##void#setError#(#File#[#]#error#)#{#synchronized#(#errMutex#)#{#if#(#error#==#null#)#{#this#.#error#=#null#;#}#else#{#this#.#error#=#(#File#[#]#)#error#.#clone#(#)#;#}#}#}##void#setOutputProperty#(#String#outputProperty#)#{#if#(#outputProperty#==#null#||#!#(#outputProperty#.#equals#(#this#.#outputProperty#)#)#)#{#synchronized#(#outMutex#)#{#this#.#outputProperty#=#outputProperty#;#baos#=#null#;#}#}#}##void#setAppend#(#boolean#append#)#{#synchronized#(#outMutex#)#{#appendOut#=#append#;#}#synchronized#(#errMutex#)#{#appendErr#=#append#;#}#}##void#setAlwaysLog#(#boolean#alwaysLog#)#{#synchronized#(#outMutex#)#{#alwaysLogOut#=#alwaysLog#;#}#synchronized#(#errMutex#)#{#alwaysLogErr#=#alwaysLog#;#}#}##void#setCreateEmptyFiles#(#boolean#createEmptyFiles#)#{#synchronized#(#outMutex#)#{#createEmptyFilesOut#=#createEmptyFiles#;#}#synchronized#(#outMutex#)#{#createEmptyFilesErr#=#createEmptyFiles#;#}#}##void#setErrorProperty#(#String#errorProperty#)#{#synchronized#(#errMutex#)#{#if#(#errorProperty#==#null#||#!#(#errorProperty#.#equals#(#this#.#errorProperty#)#)#)#{#this#.#errorProperty#=#errorProperty#;#errorBaos#=#null#;#}#}#}##void#setInputFilterChains#(#Vector#inputFilterChains#)#{#synchronized#(#inMutex#)#{#this#.#inputFilterChains#=#inputFilterChains#;#}#}##void#setOutputFilterChains#(#Vector#outputFilterChains#)#{#synchronized#(#outMutex#)#{#this#.#outputFilterChains#=#outputFilterChains#;#}#}##void#setErrorFilterChains#(#Vector#errorFilterChains#)#{#synchronized#(#errMutex#)#{#this#.#errorFilterChains#=#errorFilterChains#;#}#}##void#setPropertyFromBAOS#(#ByteArrayOutputStream#baos#,#String#propertyName#)#throws#IOException#{#BufferedReader#in#=#new#BufferedReader#(#new#StringReader#(#Execute#.#toString#(#baos#)#)#)#;#String#line#=#null#;#StringBuffer#val#=#new#StringBuffer#(#)#;#while#(#(#line#=#in#.#readLine#(#)#)#!=#null#)#{#if#(#val#.#length#(#)#!=#0#)#{#val#.#append#(#StringUtils#.#LINE_SEP#)#;#}#val#.#append#(#line#)#;#}#managingTask#.#getProject#(#)#.#setNewProperty#(#propertyName#,#val#.#toString#(#)#)#;#}##void#createStreams#(#)#{#synchronized#(#outMutex#)#{#outStreams#(#)#;#if#(#alwaysLogOut#||#outputStream#==#null#)#{#OutputStream#outputLog#=#new#LogOutputStream#(#managingTask#,#Project#.#MSG_INFO#)#;#outputStream#=#(#outputStream#==#null#)#?#outputLog#:#new#TeeOutputStream#(#outputLog#,#outputStream#)#;#}#if#(#(#outputFilterChains#!=#null#&&#outputFilterChains#.#size#(#)#>#0#)#||#!#(#outputEncoding#.#equalsIgnoreCase#(#inputEncoding#)#)#)#{#try#{#LeadPipeInputStream#snk#=#new#LeadPipeInputStream#(#)#;#snk#.#setManagingComponent#(#managingTask#)#;#InputStream#outPumpIn#=#snk#;#Reader#reader#=#new#InputStreamReader#(#outPumpIn#,#inputEncoding#)#;#if#(#outputFilterChains#!=#null#&&#outputFilterChains#.#size#(#)#>#0#)#{#ChainReaderHelper#helper#=#new#ChainReaderHelper#(#)#;#helper#.#setProject#(#managingTask#.#getProject#(#)#)#;#helper#.#setPrimaryReader#(#reader#)#;#helper#.#setFilterChains#(#outputFilterChains#)#;#reader#=#helper#.#getAssembledReader#(#)#;#}#outPumpIn#=#new#ReaderInputStream#(#reader#,#outputEncoding#)#;#Thread#t#=#new#Thread#(#threadGroup#,#new#StreamPumper#(#outPumpIn#,#outputStream#,#true#)#,#"output pumper"#)#;#t#.#setPriority#(#Thread#.#MAX_PRIORITY#)#;#outputStream#=#new#PipedOutputStream#(#snk#)#;#t#.#start#(#)#;#}#catch#(#IOException#eyeOhEx#)#{#throw#new#BuildException#(#"error setting up output stream"#,#eyeOhEx#)#;#}#}#}#synchronized#(#errMutex#)#{#errorStreams#(#)#;#if#(#alwaysLogErr#||#errorStream#==#null#)#{#OutputStream#errorLog#=#new#LogOutputStream#(#managingTask#,#Project#.#MSG_WARN#)#;#errorStream#=#(#errorStream#==#null#)#?#errorLog#:#new#TeeOutputStream#(#errorLog#,#errorStream#)#;#}#if#(#(#errorFilterChains#!=#null#&&#errorFilterChains#.#size#(#)#>#0#)#||#!#(#errorEncoding#.#equalsIgnoreCase#(#inputEncoding#)#)#)#{#try#{#LeadPipeInputStream#snk#=#new#LeadPipeInputStream#(#)#;#snk#.#setManagingComponent#(#managingTask#)#;#InputStream#errPumpIn#=#snk#;#Reader#reader#=#new#InputStreamReader#(#errPumpIn#,#inputEncoding#)#;#if#(#errorFilterChains#!=#null#&&#errorFilterChains#.#size#(#)#>#0#)#{#ChainReaderHelper#helper#=#new#ChainReaderHelper#(#)#;#helper#.#setProject#(#managingTask#.#getProject#(#)#)#;#helper#.#setPrimaryReader#(#reader#)#;#helper#.#setFilterChains#(#errorFilterChains#)#;#reader#=#helper#.#getAssembledReader#(#)#;#}#errPumpIn#=#new#ReaderInputStream#(#reader#,#errorEncoding#)#;#Thread#t#=#new#Thread#(#threadGroup#,#new#StreamPumper#(#errPumpIn#,#errorStream#,#true#)#,#"error pumper"#)#;#t#.#setPriority#(#Thread#.#MAX_PRIORITY#)#;#errorStream#=#new#PipedOutputStream#(#snk#)#;#t#.#start#(#)#;#}#catch#(#IOException#eyeOhEx#)#{#throw#new#BuildException#(#"error setting up error stream"#,#eyeOhEx#)#;#}#}#}#synchronized#(#inMutex#)#{#// if input files are specified, inputString and inputStream are#// ignored;#// classes that work with redirector attributes can enforce#// whatever warnings are needed#if#(#input#!=#null#&&#input#.#length#>#0#)#{#managingTask#.#log#(#"Redirecting input from file"#+#(#(#input#.#length#==#1#)#?#""#:#"s"#)#,#Project#.#MSG_VERBOSE#)#;#try#{#inputStream#=#new#ConcatFileInputStream#(#input#)#;#}#catch#(#IOException#eyeOhEx#)#{#throw#new#BuildException#(#eyeOhEx#)#;#}#(#(#ConcatFileInputStream#)#inputStream#)#.#setManagingComponent#(#managingTask#)#;#}#else#if#(#inputString#!=#null#)#{#StringBuffer#buf#=#new#StringBuffer#(#"Using input "#)#;#if#(#logInputString#)#{#buf#.#append#(#'"'#)#.#append#(#inputString#)#.#append#(#'"'#)#;#}#else#{#buf#.#append#(#"string"#)#;#}#managingTask#.#log#(#buf#.#toString#(#)#,#Project#.#MSG_VERBOSE#)#;#inputStream#=#new#ByteArrayInputStream#(#inputString#.#getBytes#(#)#)#;#}#if#(#inputStream#!=#null#&&#inputFilterChains#!=#null#&&#inputFilterChains#.#size#(#)#>#0#)#{#ChainReaderHelper#helper#=#new#ChainReaderHelper#(#)#;#helper#.#setProject#(#managingTask#.#getProject#(#)#)#;#try#{#helper#.#setPrimaryReader#(#new#InputStreamReader#(#inputStream#,#inputEncoding#)#)#;#}#catch#(#IOException#eyeOhEx#)#{#throw#new#BuildException#(#"error setting up input stream"#,#eyeOhEx#)#;#}#helper#.#setFilterChains#(#inputFilterChains#)#;#inputStream#=#new#ReaderInputStream#(#helper#.#getAssembledReader#(#)#,#inputEncoding#)#;#}#}#}##void#outStreams#(#)#{#if#(#out#!=#null#&&#out#.#length#>#0#)#{#String#logHead#=#new#StringBuffer#(#"Output "#)#.#append#(#(#(#appendOut#)#?#"appended"#:#"redirected"#)#)#.#append#(#" to "#)#.#toString#(#)#;#outputStream#=#foldFiles#(#out#,#logHead#,#Project#.#MSG_VERBOSE#,#appendOut#,#createEmptyFilesOut#)#;#}#if#(#outputProperty#!=#null#)#{#if#(#baos#==#null#)#{#baos#=#new#PropertyOutputStream#(#outputProperty#)#;#managingTask#.#log#(#"Output redirected to property: "#+#outputProperty#,#Project#.#MSG_VERBOSE#)#;#}#// shield it from being closed by a filtering StreamPumper#OutputStream#keepAliveOutput#=#new#KeepAliveOutputStream#(#baos#)#;#outputStream#=#(#outputStream#==#null#)#?#keepAliveOutput#:#new#TeeOutputStream#(#outputStream#,#keepAliveOutput#)#;#}#else#{#baos#=#null#;#}#}##void#errorStreams#(#)#{#if#(#error#!=#null#&&#error#.#length#>#0#)#{#String#logHead#=#new#StringBuffer#(#"Error "#)#.#append#(#(#(#appendErr#)#?#"appended"#:#"redirected"#)#)#.#append#(#" to "#)#.#toString#(#)#;#errorStream#=#foldFiles#(#error#,#logHead#,#Project#.#MSG_VERBOSE#,#appendErr#,#createEmptyFilesErr#)#;#}#else#if#(#!#(#logError#||#outputStream#==#null#)#)#{#long#funnelTimeout#=#0L#;#OutputStreamFunneler#funneler#=#new#OutputStreamFunneler#(#outputStream#,#funnelTimeout#)#;#try#{#outputStream#=#funneler#.#getFunnelInstance#(#)#;#errorStream#=#funneler#.#getFunnelInstance#(#)#;#}#catch#(#IOException#eyeOhEx#)#{#throw#new#BuildException#(#"error splitting output/error streams"#,#eyeOhEx#)#;#}#}#if#(#errorProperty#!=#null#)#{#if#(#errorBaos#==#null#)#{#errorBaos#=#new#PropertyOutputStream#(#errorProperty#)#;#managingTask#.#log#(#"Error redirected to property: "#+#errorProperty#,#Project#.#MSG_VERBOSE#)#;#}#// shield it from being closed by a filtering StreamPumper#OutputStream#keepAliveError#=#new#KeepAliveOutputStream#(#errorBaos#)#;#errorStream#=#(#error#==#null#||#error#.#length#==#0#)#?#keepAliveError#:#new#TeeOutputStream#(#errorStream#,#keepAliveError#)#;#}#else#{#errorBaos#=#null#;#}#}##ExecuteStreamHandler#createHandler#(#)#throws#BuildException#{#createStreams#(#)#;#return#new#PumpStreamHandler#(#getOutputStream#(#)#,#getErrorStream#(#)#,#getInputStream#(#)#)#;#}##void#handleOutput#(#String#output#)#{#synchronized#(#outMutex#)#{#if#(#outPrintStream#==#null#)#{#outPrintStream#=#new#PrintStream#(#outputStream#)#;#}#outPrintStream#.#print#(#output#)#;#}#}##int#handleInput#(#byte#[#]#buffer#,#int#offset#,#int#length#)#throws#IOException#{#synchronized#(#inMutex#)#{#if#(#inputStream#==#null#)#{#return#managingTask#.#getProject#(#)#.#defaultInput#(#buffer#,#offset#,#length#)#;#}#return#inputStream#.#read#(#buffer#,#offset#,#length#)#;#}#}##void#handleFlush#(#String#output#)#{#synchronized#(#outMutex#)#{#if#(#outPrintStream#==#null#)#{#outPrintStream#=#new#PrintStream#(#outputStream#)#;#}#outPrintStream#.#print#(#output#)#;#outPrintStream#.#flush#(#)#;#}#}##void#handleErrorOutput#(#String#output#)#{#synchronized#(#errMutex#)#{#if#(#errorPrintStream#==#null#)#{#errorPrintStream#=#new#PrintStream#(#errorStream#)#;#}#errorPrintStream#.#print#(#output#)#;#}#}##void#handleErrorFlush#(#String#output#)#{#synchronized#(#errMutex#)#{#if#(#errorPrintStream#==#null#)#{#errorPrintStream#=#new#PrintStream#(#errorStream#)#;#}#errorPrintStream#.#print#(#output#)#;#}#}##OutputStream#getOutputStream#(#)#{#synchronized#(#outMutex#)#{#return#outputStream#;#}#}##OutputStream#getErrorStream#(#)#{#synchronized#(#errMutex#)#{#return#errorStream#;#}#}##InputStream#getInputStream#(#)#{#synchronized#(#inMutex#)#{#return#inputStream#;#}#}##void#complete#(#)#throws#IOException#{#System#.#out#.#flush#(#)#;#System#.#err#.#flush#(#)#;#synchronized#(#inMutex#)#{#if#(#inputStream#!=#null#)#{#inputStream#.#close#(#)#;#}#}#synchronized#(#outMutex#)#{#outputStream#.#flush#(#)#;#outputStream#.#close#(#)#;#}#synchronized#(#errMutex#)#{#errorStream#.#flush#(#)#;#errorStream#.#close#(#)#;#}#// wait for the StreamPumpers to finish#synchronized#(#this#)#{#while#(#threadGroup#.#activeCount#(#)#>#0#)#{#try#{#managingTask#.#log#(#"waiting for "#+#threadGroup#.#activeCount#(#)#+#" Threads:"#,#Project#.#MSG_DEBUG#)#;#Thread#[#]#thread#=#new#Thread#[#threadGroup#.#activeCount#(#)#]#;#threadGroup#.#enumerate#(#thread#)#;#for#(#int#i#=#0#;#i#<#thread#.#length#&&#thread#[#i#]#!=#null#;#i#++#)#{#try#{#managingTask#.#log#(#thread#[#i#]#.#toString#(#)#,#Project#.#MSG_DEBUG#)#;#}#catch#(#NullPointerException#enPeaEx#)#{#// Ignore exception#}#}#wait#(#STREAMPUMPER_WAIT_INTERVAL#)#;#}#catch#(#InterruptedException#eyeEx#)#{#Thread#[#]#thread#=#new#Thread#[#threadGroup#.#activeCount#(#)#]#;#threadGroup#.#enumerate#(#thread#)#;#for#(#int#i#=#0#;#i#<#thread#.#length#&&#thread#[#i#]#!=#null#;#i#++#)#{#thread#[#i#]#.#interrupt#(#)#;#}#}#}#}#setProperties#(#)#;#synchronized#(#inMutex#)#{#inputStream#=#null#;#}#synchronized#(#outMutex#)#{#outputStream#=#null#;#outPrintStream#=#null#;#}#synchronized#(#errMutex#)#{#errorStream#=#null#;#errorPrintStream#=#null#;#}#}##void#setProperties#(#)#{#synchronized#(#outMutex#)#{#if#(#baos#!=#null#)#{#try#{#baos#.#close#(#)#;#}#catch#(#IOException#eyeOhEx#)#{#// Ignore exception#}#}#}#synchronized#(#errMutex#)#{#if#(#errorBaos#!=#null#)#{#try#{#errorBaos#.#close#(#)#;#}#catch#(#IOException#eyeOhEx#)#{#// Ignore exception#}#}#}#}##OutputStream#foldFiles#(#File#[#]#file#,#String#logHead#,#int#loglevel#,#boolean#append#,#boolean#createEmptyFiles#)#{#OutputStream#result#=#new#LazyFileOutputStream#(#file#[#0#]#,#append#,#createEmptyFiles#)#;#managingTask#.#log#(#logHead#+#file#[#0#]#,#loglevel#)#;#char#[#]#c#=#new#char#[#logHead#.#length#(#)#]#;#Arrays#.#fill#(#c#,#' '#)#;#String#indent#=#new#String#(#c#)#;#for#(#int#i#=#1#;#i#<#file#.#length#;#i#++#)#{#outputStream#=#new#TeeOutputStream#(#outputStream#,#new#LazyFileOutputStream#(#file#[#i#]#,#append#,#createEmptyFiles#)#)#;#managingTask#.#log#(#indent#+#file#[#i#]#,#loglevel#)#;#}#return#result#;#}##