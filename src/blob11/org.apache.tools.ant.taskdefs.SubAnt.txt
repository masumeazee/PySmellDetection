String#getDefaultBuildFile#(#)#{#return#Main#.#DEFAULT_BUILD_FILENAME#;#}##void#handleOutput#(#String#output#)#{#if#(#ant#!=#null#)#{#ant#.#handleOutput#(#output#)#;#}#else#{#super#.#handleOutput#(#output#)#;#}#}##int#handleInput#(#byte#[#]#buffer#,#int#offset#,#int#length#)#throws#IOException#{#if#(#ant#!=#null#)#{#return#ant#.#handleInput#(#buffer#,#offset#,#length#)#;#}#else#{#return#super#.#handleInput#(#buffer#,#offset#,#length#)#;#}#}##void#handleFlush#(#String#output#)#{#if#(#ant#!=#null#)#{#ant#.#handleFlush#(#output#)#;#}#else#{#super#.#handleFlush#(#output#)#;#}#}##void#handleErrorOutput#(#String#output#)#{#if#(#ant#!=#null#)#{#ant#.#handleErrorOutput#(#output#)#;#}#else#{#super#.#handleErrorOutput#(#output#)#;#}#}##void#handleErrorFlush#(#String#output#)#{#if#(#ant#!=#null#)#{#ant#.#handleErrorFlush#(#output#)#;#}#else#{#super#.#handleErrorFlush#(#output#)#;#}#}##void#execute#(#)#{#if#(#buildpath#==#null#)#{#throw#new#BuildException#(#"No buildpath specified"#)#;#}#final#String#[#]#filenames#=#buildpath#.#list#(#)#;#final#int#count#=#filenames#.#length#;#if#(#count#<#1#)#{#log#(#"No sub-builds to iterate on"#,#Project#.#MSG_WARN#)#;#return#;#}#/*
    //REVISIT: there must be cleaner way of doing this, if it is merited at all
        if (subTarget == null) {
            subTarget = getOwningTarget().getName();
        }
*/#BuildException#buildException#=#null#;#for#(#int#i#=#0#;#i#<#count#;#++#i#)#{#File#file#=#null#;#String#subdirPath#=#null#;#Throwable#thrownException#=#null#;#try#{#File#directory#=#null#;#file#=#new#File#(#filenames#[#i#]#)#;#if#(#file#.#isDirectory#(#)#)#{#if#(#verbose#)#{#subdirPath#=#file#.#getPath#(#)#;#log#(#"Entering directory: "#+#subdirPath#+#"\n"#,#Project#.#MSG_INFO#)#;#}#if#(#genericantfile#!=#null#)#{#directory#=#file#;#file#=#genericantfile#;#}#else#{#file#=#new#File#(#file#,#antfile#)#;#}#}#execute#(#file#,#directory#)#;#if#(#verbose#&&#subdirPath#!=#null#)#{#log#(#"Leaving directory: "#+#subdirPath#+#"\n"#,#Project#.#MSG_INFO#)#;#}#}#catch#(#RuntimeException#ex#)#{#if#(#!#(#getProject#(#)#.#isKeepGoingMode#(#)#)#)#{#if#(#verbose#&&#subdirPath#!=#null#)#{#log#(#"Leaving directory: "#+#subdirPath#+#"\n"#,#Project#.#MSG_INFO#)#;#}#throw#ex#;#// throw further#}#thrownException#=#ex#;#}#catch#(#Throwable#ex#)#{#if#(#!#(#getProject#(#)#.#isKeepGoingMode#(#)#)#)#{#if#(#verbose#&&#subdirPath#!=#null#)#{#log#(#"Leaving directory: "#+#subdirPath#+#"\n"#,#Project#.#MSG_INFO#)#;#}#throw#new#BuildException#(#ex#)#;#}#thrownException#=#ex#;#}#if#(#thrownException#!=#null#)#{#if#(#thrownException#instanceof#BuildException#)#{#log#(#"File '"#+#file#+#"' failed with message '"#+#thrownException#.#getMessage#(#)#+#"'."#,#Project#.#MSG_ERR#)#;#// only the first build exception is reported#if#(#buildException#==#null#)#{#buildException#=#(#BuildException#)#thrownException#;#}#}#else#{#log#(#"Target '"#+#file#+#"' failed with message '"#+#thrownException#.#getMessage#(#)#+#"'."#,#Project#.#MSG_ERR#)#;#thrownException#.#printStackTrace#(#System#.#err#)#;#if#(#buildException#==#null#)#{#buildException#=#new#BuildException#(#thrownException#)#;#}#}#if#(#verbose#&&#subdirPath#!=#null#)#{#log#(#"Leaving directory: "#+#subdirPath#+#"\n"#,#Project#.#MSG_INFO#)#;#}#}#}#// check if one of the builds failed in keep going mode#if#(#buildException#!=#null#)#{#throw#buildException#;#}#}##void#execute#(#File#file#,#File#directory#)#throws#BuildException#{#if#(#!#file#.#exists#(#)#||#file#.#isDirectory#(#)#||#!#file#.#canRead#(#)#)#{#String#msg#=#"Invalid file: "#+#file#;#if#(#failOnError#)#{#throw#new#BuildException#(#msg#)#;#}#log#(#msg#,#Project#.#MSG_WARN#)#;#return#;#}#ant#=#createAntTask#(#directory#)#;#String#antfilename#=#file#.#getAbsolutePath#(#)#;#ant#.#setAntfile#(#antfilename#)#;#for#(#int#i#=#0#;#i#<#targets#.#size#(#)#;#i#++#)#{#TargetElement#targetElement#=#(#TargetElement#)#targets#.#get#(#i#)#;#ant#.#addConfiguredTarget#(#targetElement#)#;#}#try#{#ant#.#execute#(#)#;#}#catch#(#BuildException#e#)#{#if#(#failOnError#||#isHardError#(#e#)#)#{#throw#e#;#}#log#(#"Failure for target '"#+#subTarget#+#"' of: "#+#antfilename#+#"\n"#+#e#.#getMessage#(#)#,#Project#.#MSG_WARN#)#;#}#catch#(#Throwable#e#)#{#if#(#failOnError#||#isHardError#(#e#)#)#{#throw#new#BuildException#(#e#)#;#}#log#(#"Failure for target '"#+#subTarget#+#"' of: "#+#antfilename#+#"\n"#+#e#.#toString#(#)#,#Project#.#MSG_WARN#)#;#}#finally#{#ant#=#null#;#}#}##boolean#isHardError#(#Throwable#t#)#{#if#(#t#instanceof#BuildException#)#{#return#isHardError#(#t#.#getCause#(#)#)#;#}#else#if#(#t#instanceof#OutOfMemoryError#)#{#return#true#;#}#else#if#(#t#instanceof#ThreadDeath#)#{#return#true#;#}#else#{#// incl. t == null#return#false#;#}#}##void#setAntfile#(#String#antfile#)#{#this#.#antfile#=#antfile#;#}##void#setGenericAntfile#(#File#afile#)#{#this#.#genericantfile#=#afile#;#}##void#setFailonerror#(#boolean#failOnError#)#{#this#.#failOnError#=#failOnError#;#}##void#setTarget#(#String#target#)#{#this#.#subTarget#=#target#;#}##void#addConfiguredTarget#(#TargetElement#t#)#{#String#name#=#t#.#getName#(#)#;#if#(#""#.#equals#(#name#)#)#{#throw#new#BuildException#(#"target name must not be empty"#)#;#}#targets#.#add#(#t#)#;#}##void#setVerbose#(#boolean#on#)#{#this#.#verbose#=#on#;#}##void#setOutput#(#String#s#)#{#this#.#output#=#s#;#}##void#setInheritall#(#boolean#b#)#{#this#.#inheritAll#=#b#;#}##void#setInheritrefs#(#boolean#b#)#{#this#.#inheritRefs#=#b#;#}##void#addProperty#(#Property#p#)#{#properties#.#addElement#(#p#)#;#}##void#addReference#(#Ant#.#Reference#r#)#{#references#.#addElement#(#r#)#;#}##void#addPropertyset#(#PropertySet#ps#)#{#propertySets#.#addElement#(#ps#)#;#}##void#addDirset#(#DirSet#set#)#{#add#(#set#)#;#}##void#addFileset#(#FileSet#set#)#{#add#(#set#)#;#}##void#addFilelist#(#FileList#list#)#{#add#(#list#)#;#}##void#add#(#ResourceCollection#rc#)#{#getBuildpath#(#)#.#add#(#rc#)#;#}##void#setBuildpath#(#Path#s#)#{#getBuildpath#(#)#.#append#(#s#)#;#}##Path#createBuildpath#(#)#{#return#getBuildpath#(#)#.#createPath#(#)#;#}##Path#.#PathElement#createBuildpathElement#(#)#{#return#getBuildpath#(#)#.#createPathElement#(#)#;#}##Path#getBuildpath#(#)#{#if#(#buildpath#==#null#)#{#buildpath#=#new#Path#(#getProject#(#)#)#;#}#return#buildpath#;#}##void#setBuildpathRef#(#Reference#r#)#{#createBuildpath#(#)#.#setRefid#(#r#)#;#}##Ant#createAntTask#(#File#directory#)#{#Ant#antTask#=#new#Ant#(#this#)#;#antTask#.#init#(#)#;#if#(#subTarget#!=#null#&&#subTarget#.#length#(#)#>#0#)#{#antTask#.#setTarget#(#subTarget#)#;#}#if#(#output#!=#null#)#{#antTask#.#setOutput#(#output#)#;#}#if#(#directory#!=#null#)#{#antTask#.#setDir#(#directory#)#;#}#else#{#antTask#.#setUseNativeBasedir#(#true#)#;#}#antTask#.#setInheritAll#(#inheritAll#)#;#for#(#Enumeration#i#=#properties#.#elements#(#)#;#i#.#hasMoreElements#(#)#;#)#{#copyProperty#(#antTask#.#createProperty#(#)#,#(#Property#)#i#.#nextElement#(#)#)#;#}#for#(#Enumeration#i#=#propertySets#.#elements#(#)#;#i#.#hasMoreElements#(#)#;#)#{#antTask#.#addPropertyset#(#(#PropertySet#)#i#.#nextElement#(#)#)#;#}#antTask#.#setInheritRefs#(#inheritRefs#)#;#for#(#Enumeration#i#=#references#.#elements#(#)#;#i#.#hasMoreElements#(#)#;#)#{#antTask#.#addReference#(#(#Ant#.#Reference#)#i#.#nextElement#(#)#)#;#}#return#antTask#;#}##void#copyProperty#(#Property#to#,#Property#from#)#{#to#.#setName#(#from#.#getName#(#)#)#;#if#(#from#.#getValue#(#)#!=#null#)#{#to#.#setValue#(#from#.#getValue#(#)#)#;#}#if#(#from#.#getFile#(#)#!=#null#)#{#to#.#setFile#(#from#.#getFile#(#)#)#;#}#if#(#from#.#getResource#(#)#!=#null#)#{#to#.#setResource#(#from#.#getResource#(#)#)#;#}#if#(#from#.#getPrefix#(#)#!=#null#)#{#to#.#setPrefix#(#from#.#getPrefix#(#)#)#;#}#if#(#from#.#getRefid#(#)#!=#null#)#{#to#.#setRefid#(#from#.#getRefid#(#)#)#;#}#if#(#from#.#getEnvironment#(#)#!=#null#)#{#to#.#setEnvironment#(#from#.#getEnvironment#(#)#)#;#}#if#(#from#.#getClasspath#(#)#!=#null#)#{#to#.#setClasspath#(#from#.#getClasspath#(#)#)#;#}#}##