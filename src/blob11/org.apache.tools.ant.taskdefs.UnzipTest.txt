void#setUp#(#)#{#configureProject#(#"src/etc/testcases/taskdefs/unzip.xml"#)#;#}##void#tearDown#(#)#{#executeTarget#(#"cleanup"#)#;#}##void#test1#(#)#{#expectBuildException#(#"test1"#,#"required argument not specified"#)#;#}##void#test2#(#)#{#expectBuildException#(#"test2"#,#"required argument not specified"#)#;#}##void#test3#(#)#{#expectBuildException#(#"test3"#,#"required argument not specified"#)#;#}##void#testRealTest#(#)#throws#java#.#io#.#IOException#{#executeTarget#(#"realTest"#)#;#assertLogoUncorrupted#(#)#;#}##void#assertLogoUncorrupted#(#)#throws#IOException#{#assertTrue#(#FILE_UTILS#.#contentEquals#(#project#.#resolveFile#(#"../asf-logo.gif"#)#,#project#.#resolveFile#(#"asf-logo.gif"#)#)#)#;#}##void#testTestZipTask#(#)#throws#java#.#io#.#IOException#{#executeTarget#(#"testZipTask"#)#;#assertLogoUncorrupted#(#)#;#}##void#testTestUncompressedZipTask#(#)#throws#java#.#io#.#IOException#{#executeTarget#(#"testUncompressedZipTask"#)#;#assertLogoUncorrupted#(#)#;#}##void#testPatternSetExcludeOnly#(#)#{#executeTarget#(#"testPatternSetExcludeOnly"#)#;#assertFileMissing#(#"1/foo is excluded"#,#"unziptestout/1/foo"#)#;#assertFileExists#(#"2/bar is not excluded"#,#"unziptestout/2/bar"#)#;#}##void#testPatternSetIncludeOnly#(#)#{#executeTarget#(#"testPatternSetIncludeOnly"#)#;#assertFileMissing#(#"1/foo is not included"#,#"unziptestout/1/foo"#)#;#assertFileExists#(#"2/bar is included"#,#"unziptestout/2/bar"#)#;#}##void#testPatternSetIncludeAndExclude#(#)#{#executeTarget#(#"testPatternSetIncludeAndExclude"#)#;#assertFileMissing#(#"1/foo is not included"#,#"unziptestout/1/foo"#)#;#assertFileMissing#(#"2/bar is excluded"#,#"unziptestout/2/bar"#)#;#}##void#testTwoPatternSets#(#)#{#executeTarget#(#"testTwoPatternSets"#)#;#assertFileMissing#(#"1/foo is not included"#,#"unziptestout/1/foo"#)#;#assertFileExists#(#"2/bar is included"#,#"unziptestout/2/bar"#)#;#}##void#testTwoPatternSetsWithExcludes#(#)#{#executeTarget#(#"testTwoPatternSetsWithExcludes"#)#;#assertFileMissing#(#"1/foo is not included"#,#"unziptestout/1/foo"#)#;#assertFileMissing#(#"2/bar is excluded"#,#"unziptestout/2/bar"#)#;#}##void#testSelfExtractingArchive#(#)#{#executeTarget#(#"selfExtractingArchive"#)#;#}##void#testPatternSetSlashOnly#(#)#{#executeTarget#(#"testPatternSetSlashOnly"#)#;#assertFileMissing#(#"1/foo is not included"#,#"unziptestout/1/foo"#)#;#assertFileExists#(#"\"2/bar is included"#,#"unziptestout/2/bar"#)#;#}##void#testEncoding#(#)#{#executeTarget#(#"encodingTest"#)#;#assertFileExists#(#"foo has been properly named"#,#"unziptestout/foo"#)#;#}##void#testFlattenMapper#(#)#{#executeTarget#(#"testFlattenMapper"#)#;#assertFileMissing#(#"1/foo is not flattened"#,#"unziptestout/1/foo"#)#;#assertFileExists#(#"foo is flattened"#,#"unziptestout/foo"#)#;#}##void#assertFileExists#(#String#message#,#String#filename#)#{#assertTrue#(#message#,#getProject#(#)#.#resolveFile#(#filename#)#.#exists#(#)#)#;#}##void#assertFileMissing#(#String#message#,#String#filename#)#{#assertTrue#(#message#,#!#getProject#(#)#.#resolveFile#(#filename#)#.#exists#(#)#)#;#}##void#testGlobMapper#(#)#{#executeTarget#(#"testGlobMapper"#)#;#assertFileMissing#(#"1/foo is not mapped"#,#"unziptestout/1/foo"#)#;#assertFileExists#(#"1/foo is mapped"#,#"unziptestout/1/foo.txt"#)#;#}##void#testTwoMappers#(#)#{#expectBuildException#(#"testTwoMappers"#,#Expand#.#ERROR_MULTIPLE_MAPPERS#)#;#}##void#testResourceCollections#(#)#{#executeTarget#(#"testResourceCollection"#)#;#assertFileExists#(#"junit.jar has been extracted"#,#"unziptestout/junit/framework/Assert.class"#)#;#}##void#testDocumentationClaimsOnCopy#(#)#{#executeTarget#(#"testDocumentationClaimsOnCopy"#)#;#assertFileMissing#(#"1/foo is excluded"#,#"unziptestout/1/foo"#)#;#assertFileExists#(#"2/bar is not excluded"#,#"unziptestout/2/bar"#)#;#}##