void#setClasspath#(#Path#classpath#)#{#createClasspath#(#)#.#append#(#classpath#)#;#}##Path#createClasspath#(#)#{#if#(#this#.#classpath#==#null#)#{#this#.#classpath#=#new#Path#(#getProject#(#)#)#;#}#return#this#.#classpath#.#createPath#(#)#;#}##void#setClasspathRef#(#Reference#r#)#{#createClasspath#(#)#.#setRefid#(#r#)#;#}##void#setClassname#(#String#classname#)#{#this#.#classname#=#classname#;#}##void#setMethod#(#String#method#)#{#this#.#method#=#method#;#}##void#setField#(#String#field#)#{#this#.#field#=#field#;#}##void#setIgnoreSystemClasses#(#boolean#ignoreSystemClasses#)#{#this#.#ignoreSystemClasses#=#ignoreSystemClasses#;#}##Class#loadClass#(#String#classname#)#{#try#{#if#(#ignoreSystemClasses#)#{#loader#=#getProject#(#)#.#createClassLoader#(#classpath#)#;#loader#.#setParentFirst#(#false#)#;#loader#.#addJavaLibraries#(#)#;#try#{#return#loader#.#findClass#(#classname#)#;#}#catch#(#SecurityException#se#)#{#// class found but restricted name; this is#// actually the case we're looking for in JDK 1.3+,#// so catch the exception and return#return#null#;#}#}#else#if#(#loader#!=#null#)#{#// How do we ever get here?#return#loader#.#loadClass#(#classname#)#;#}#else#{#ClassLoader#l#=#this#.#getClass#(#)#.#getClassLoader#(#)#;#// Can return null to represent the bootstrap class loader.#// see API docs of Class.getClassLoader.#if#(#l#!=#null#)#{#return#Class#.#forName#(#classname#,#true#,#l#)#;#}#else#{#return#Class#.#forName#(#classname#)#;#}#}#}#catch#(#ClassNotFoundException#e#)#{#throw#new#BuildException#(#"class \""#+#classname#+#"\" was not found"#)#;#}#catch#(#NoClassDefFoundError#e#)#{#throw#new#BuildException#(#"Could not load dependent class \""#+#e#.#getMessage#(#)#+#"\" for class \""#+#classname#+#"\""#)#;#}#}##boolean#eval#(#)#throws#BuildException#{#if#(#classname#==#null#)#{#throw#new#BuildException#(#"No classname defined"#)#;#}#ClassLoader#preLoadClass#=#loader#;#try#{#Class#clazz#=#loadClass#(#classname#)#;#if#(#method#!=#null#)#{#return#isMethodFound#(#clazz#)#;#}#if#(#field#!=#null#)#{#return#isFieldFound#(#clazz#)#;#}#throw#new#BuildException#(#"Neither method nor field defined"#)#;#}#finally#{#if#(#preLoadClass#!=#loader#&&#loader#!=#null#)#{#loader#.#cleanup#(#)#;#loader#=#null#;#}#}#}##boolean#isFieldFound#(#Class#clazz#)#{#Field#[#]#fields#=#clazz#.#getDeclaredFields#(#)#;#for#(#int#i#=#0#;#i#<#fields#.#length#;#i#++#)#{#Field#fieldEntry#=#fields#[#i#]#;#if#(#fieldEntry#.#getName#(#)#.#equals#(#field#)#)#{#return#true#;#}#}#return#false#;#}##boolean#isMethodFound#(#Class#clazz#)#{#Method#[#]#methods#=#clazz#.#getDeclaredMethods#(#)#;#for#(#int#i#=#0#;#i#<#methods#.#length#;#i#++#)#{#Method#methodEntry#=#methods#[#i#]#;#if#(#methodEntry#.#getName#(#)#.#equals#(#method#)#)#{#return#true#;#}#}#return#false#;#}##