void#setString#(#String#string#)#{#this#.#string#=#string#;#}##void#setPattern#(#String#pattern#)#{#if#(#regularExpression#!=#null#)#{#throw#new#BuildException#(#"Only one regular expression is allowed."#)#;#}#regularExpression#=#new#RegularExpression#(#)#;#regularExpression#.#setPattern#(#pattern#)#;#}##void#addRegexp#(#RegularExpression#regularExpression#)#{#if#(#this#.#regularExpression#!=#null#)#{#throw#new#BuildException#(#"Only one regular expression is allowed."#)#;#}#this#.#regularExpression#=#regularExpression#;#}##void#setCasesensitive#(#boolean#b#)#{#caseSensitive#=#b#;#}##void#setMultiline#(#boolean#b#)#{#multiLine#=#b#;#}##void#setSingleLine#(#boolean#b#)#{#singleLine#=#b#;#}##boolean#eval#(#)#throws#BuildException#{#if#(#string#==#null#)#{#throw#new#BuildException#(#"Parameter string is required in matches."#)#;#}#if#(#regularExpression#==#null#)#{#throw#new#BuildException#(#"Missing pattern in matches."#)#;#}#int#options#=#RegexpMatcher#.#MATCH_DEFAULT#;#if#(#!#caseSensitive#)#{#options#=#options#|#RegexpMatcher#.#MATCH_CASE_INSENSITIVE#;#}#if#(#multiLine#)#{#options#=#options#|#RegexpMatcher#.#MATCH_MULTILINE#;#}#if#(#singleLine#)#{#options#=#options#|#RegexpMatcher#.#MATCH_SINGLELINE#;#}#Regexp#regexp#=#regularExpression#.#getRegexp#(#getProject#(#)#)#;#return#regexp#.#matches#(#string#,#options#)#;#}##