void#execute#(#)#throws#BuildException#{#Commandline#commandLine#=#new#Commandline#(#)#;#Project#aProj#=#getProject#(#)#;#int#result#=#0#;#// Default the viewpath to basedir if it is not specified#if#(#getViewPath#(#)#==#null#)#{#setViewPath#(#aProj#.#getBaseDir#(#)#.#getPath#(#)#)#;#}#// build the command line from what we got. the format is#// cleartool mkelem [options...] [viewpath ...]#// as specified in the CLEARTOOL.EXE help#commandLine#.#setExecutable#(#getClearToolCommand#(#)#)#;#commandLine#.#createArgument#(#)#.#setValue#(#COMMAND_MKELEM#)#;#checkOptions#(#commandLine#)#;#if#(#!#getFailOnErr#(#)#)#{#getProject#(#)#.#log#(#"Ignoring any errors that occur for: "#+#getViewPathBasename#(#)#,#Project#.#MSG_VERBOSE#)#;#}#result#=#run#(#commandLine#)#;#if#(#Execute#.#isFailure#(#result#)#&&#getFailOnErr#(#)#)#{#String#msg#=#"Failed executing: "#+#commandLine#.#toString#(#)#;#throw#new#BuildException#(#msg#,#getLocation#(#)#)#;#}#}##void#checkOptions#(#Commandline#cmd#)#{#if#(#getComment#(#)#!=#null#)#{#// -c#getCommentCommand#(#cmd#)#;#}#else#{#if#(#getCommentFile#(#)#!=#null#)#{#// -cfile#getCommentFileCommand#(#cmd#)#;#}#else#{#cmd#.#createArgument#(#)#.#setValue#(#FLAG_NOCOMMENT#)#;#}#}#if#(#getNoWarn#(#)#)#{#// -nwarn#cmd#.#createArgument#(#)#.#setValue#(#FLAG_NOWARN#)#;#}#/*
         * Should choose either -ci or -nco.
         */#if#(#getNoCheckout#(#)#&&#getCheckin#(#)#)#{#throw#new#BuildException#(#"Should choose either [nocheckout | checkin]"#)#;#}#if#(#getNoCheckout#(#)#)#{#// -nco#cmd#.#createArgument#(#)#.#setValue#(#FLAG_NOCHECKOUT#)#;#}#if#(#getCheckin#(#)#)#{#// -ci#cmd#.#createArgument#(#)#.#setValue#(#FLAG_CHECKIN#)#;#if#(#getPreserveTime#(#)#)#{#// -ptime#cmd#.#createArgument#(#)#.#setValue#(#FLAG_PRESERVETIME#)#;#}#}#if#(#getMaster#(#)#)#{#// -master#cmd#.#createArgument#(#)#.#setValue#(#FLAG_MASTER#)#;#}#if#(#getEltype#(#)#!=#null#)#{#// -eltype#getEltypeCommand#(#cmd#)#;#}#// viewpath#cmd#.#createArgument#(#)#.#setValue#(#getViewPath#(#)#)#;#}##void#setComment#(#String#comment#)#{#mComment#=#comment#;#}##String#getComment#(#)#{#return#mComment#;#}##void#setCommentFile#(#String#cfile#)#{#mCfile#=#cfile#;#}##String#getCommentFile#(#)#{#return#mCfile#;#}##void#setNoWarn#(#boolean#nwarn#)#{#mNwarn#=#nwarn#;#}##boolean#getNoWarn#(#)#{#return#mNwarn#;#}##void#setPreserveTime#(#boolean#ptime#)#{#mPtime#=#ptime#;#}##boolean#getPreserveTime#(#)#{#return#mPtime#;#}##void#setNoCheckout#(#boolean#co#)#{#mNoco#=#co#;#}##boolean#getNoCheckout#(#)#{#return#mNoco#;#}##void#setCheckin#(#boolean#ci#)#{#mCheckin#=#ci#;#}##boolean#getCheckin#(#)#{#return#mCheckin#;#}##void#setMaster#(#boolean#master#)#{#mMaster#=#master#;#}##boolean#getMaster#(#)#{#return#mMaster#;#}##void#setEltype#(#String#eltype#)#{#mEltype#=#eltype#;#}##String#getEltype#(#)#{#return#mEltype#;#}##void#getCommentCommand#(#Commandline#cmd#)#{#if#(#getComment#(#)#!=#null#)#{#/* Had to make two separate commands here because if a space is
               inserted between the flag and the value, it is treated as a
               Windows filename with a space and it is enclosed in double
               quotes ("). This breaks clearcase.
            */#cmd#.#createArgument#(#)#.#setValue#(#FLAG_COMMENT#)#;#cmd#.#createArgument#(#)#.#setValue#(#getComment#(#)#)#;#}#}##void#getCommentFileCommand#(#Commandline#cmd#)#{#if#(#getCommentFile#(#)#!=#null#)#{#/* Had to make two separate commands here because if a space is
               inserted between the flag and the value, it is treated as a
               Windows filename with a space and it is enclosed in double
               quotes ("). This breaks clearcase.
            */#cmd#.#createArgument#(#)#.#setValue#(#FLAG_COMMENTFILE#)#;#cmd#.#createArgument#(#)#.#setValue#(#getCommentFile#(#)#)#;#}#}##void#getEltypeCommand#(#Commandline#cmd#)#{#if#(#getEltype#(#)#!=#null#)#{#/* Had to make two separate commands here because if a space is
               inserted between the flag and the value, it is treated as a
               Windows filename with a space and it is enclosed in double
               quotes ("). This breaks clearcase.
            */#cmd#.#createArgument#(#)#.#setValue#(#FLAG_ELTYPE#)#;#cmd#.#createArgument#(#)#.#setValue#(#getEltype#(#)#)#;#}#}##