void#execute#(#)#throws#BuildException#{#Commandline#commandLine#=#new#Commandline#(#)#;#Project#aProj#=#getProject#(#)#;#int#result#=#0#;#// Default the viewpath to basedir if it is not specified#if#(#getViewPath#(#)#==#null#)#{#setViewPath#(#aProj#.#getBaseDir#(#)#.#getPath#(#)#)#;#}#// build the command line from what we got the format is#// cleartool lock [options...]#// as specified in the CLEARTOOL.EXE help#commandLine#.#setExecutable#(#getClearToolCommand#(#)#)#;#commandLine#.#createArgument#(#)#.#setValue#(#COMMAND_UNLOCK#)#;#// Check the command line options#checkOptions#(#commandLine#)#;#// For debugging#// System.out.println(commandLine.toString());#if#(#!#getFailOnErr#(#)#)#{#getProject#(#)#.#log#(#"Ignoring any errors that occur for: "#+#getOpType#(#)#,#Project#.#MSG_VERBOSE#)#;#}#result#=#run#(#commandLine#)#;#if#(#Execute#.#isFailure#(#result#)#&&#getFailOnErr#(#)#)#{#String#msg#=#"Failed executing: "#+#commandLine#.#toString#(#)#;#throw#new#BuildException#(#msg#,#getLocation#(#)#)#;#}#}##void#checkOptions#(#Commandline#cmd#)#{#// ClearCase items#getCommentCommand#(#cmd#)#;#if#(#getObjSelect#(#)#==#null#&&#getPname#(#)#==#null#)#{#throw#new#BuildException#(#"Should select either an element "#+#"(pname) or an object (objselect)"#)#;#}#getPnameCommand#(#cmd#)#;#// object selector#if#(#getObjSelect#(#)#!=#null#)#{#cmd#.#createArgument#(#)#.#setValue#(#getObjSelect#(#)#)#;#}#}##void#setComment#(#String#comment#)#{#mComment#=#comment#;#}##String#getComment#(#)#{#return#mComment#;#}##void#setPname#(#String#pname#)#{#mPname#=#pname#;#}##String#getPname#(#)#{#return#mPname#;#}##void#setObjselect#(#String#objselect#)#{#setObjSelect#(#objselect#)#;#}##void#setObjSel#(#String#objsel#)#{#setObjSelect#(#objsel#)#;#}##String#getObjselect#(#)#{#return#getObjSelect#(#)#;#}##void#getCommentCommand#(#Commandline#cmd#)#{#if#(#getComment#(#)#==#null#)#{#return#;#}#else#{#/* Had to make two separate commands here because if a space is
               inserted between the flag and the value, it is treated as a
               Windows filename with a space and it is enclosed in double
               quotes ("). This breaks clearcase.
            */#cmd#.#createArgument#(#)#.#setValue#(#FLAG_COMMENT#)#;#cmd#.#createArgument#(#)#.#setValue#(#getComment#(#)#)#;#}#}##void#getPnameCommand#(#Commandline#cmd#)#{#if#(#getPname#(#)#==#null#)#{#return#;#}#else#{#/* Had to make two separate commands here because if a space is
               inserted between the flag and the value, it is treated as a
               Windows filename with a space and it is enclosed in double
               quotes ("). This breaks clearcase.
            */#cmd#.#createArgument#(#)#.#setValue#(#FLAG_PNAME#)#;#cmd#.#createArgument#(#)#.#setValue#(#getPname#(#)#)#;#}#}##String#getOpType#(#)#{#if#(#getPname#(#)#!=#null#)#{#return#getPname#(#)#;#}#else#{#return#getObjSelect#(#)#;#}#}##