PrintStream#createEmptyStream#(#)#{#return#new#PrintStream#(#new#OutputStream#(#)#{#public#void#write#(#int#b#)#{#}#}#)#;#}##void#write#(#int#b#)#{#}##PrintStream#createTeePrint#(#PrintStream#ps1#,#PrintStream#ps2#)#{#return#new#PrintStream#(#new#TeeOutputStream#(#ps1#,#ps2#)#)#;#}##void#setupIOStreams#(#ByteArrayOutputStream#o#,#ByteArrayOutputStream#e#)#{#systemOut#=#new#PrintStream#(#o#)#;#systemError#=#new#PrintStream#(#e#)#;#if#(#forked#)#{#if#(#!#outputToFormatters#)#{#if#(#!#showOutput#)#{#savedOut#=#System#.#out#;#savedErr#=#System#.#err#;#System#.#setOut#(#createEmptyStream#(#)#)#;#System#.#setErr#(#createEmptyStream#(#)#)#;#}#}#else#{#savedOut#=#System#.#out#;#savedErr#=#System#.#err#;#if#(#!#showOutput#)#{#System#.#setOut#(#systemOut#)#;#System#.#setErr#(#systemError#)#;#}#else#{#System#.#setOut#(#createTeePrint#(#savedOut#,#systemOut#)#)#;#System#.#setErr#(#createTeePrint#(#savedErr#,#systemError#)#)#;#}#perm#=#null#;#}#}#else#{#if#(#perm#!=#null#)#{#perm#.#setSecurityManager#(#)#;#}#}#}##void#run#(#)#{#res#=#new#TestResult#(#)#;#res#.#addListener#(#wrapListener#(#this#)#)#;#for#(#int#i#=#0#;#i#<#formatters#.#size#(#)#;#i#++#)#{#res#.#addListener#(#wrapListener#(#(#TestListener#)#formatters#.#elementAt#(#i#)#)#)#;#}#ByteArrayOutputStream#errStrm#=#new#ByteArrayOutputStream#(#)#;#ByteArrayOutputStream#outStrm#=#new#ByteArrayOutputStream#(#)#;#setupIOStreams#(#outStrm#,#errStrm#)#;#Test#suite#=#null#;#Throwable#exception#=#null#;#boolean#startTestSuiteSuccess#=#false#;#try#{#try#{#Class#testClass#=#null#;#if#(#loader#==#null#)#{#testClass#=#Class#.#forName#(#junitTest#.#getName#(#)#)#;#}#else#{#testClass#=#Class#.#forName#(#junitTest#.#getName#(#)#,#true#,#loader#)#;#}#// check for a static suite method first, even when using#// JUnit 4#Method#suiteMethod#=#null#;#try#{#// check if there is a suite method#suiteMethod#=#testClass#.#getMethod#(#"suite"#,#new#Class#[#0#]#)#;#}#catch#(#NoSuchMethodException#e#)#{#// no appropriate suite method found. We don't report any#// error here since it might be perfectly normal.#}#if#(#suiteMethod#!=#null#)#{#// if there is a suite method available, then try#// to extract the suite from it. If there is an error#// here it will be caught below and reported.#suite#=#(#Test#)#suiteMethod#.#invoke#(#null#,#new#Class#[#0#]#)#;#}#else#{#Class#junit4TestAdapterClass#=#null#;#// Check for JDK 5 first. Will *not* help on JDK 1.4#// if only junit-4.0.jar in CP because in that case#// linkage of whole task will already have failed! But#// will help if CP has junit-3.8.2.jar:junit-4.0.jar.#// In that case first C.fN will fail with CNFE and we#// will avoid UnsupportedClassVersionError.#try#{#Class#.#forName#(#"java.lang.annotation.Annotation"#)#;#if#(#loader#==#null#)#{#junit4TestAdapterClass#=#Class#.#forName#(#JUNIT_4_TEST_ADAPTER#)#;#}#else#{#junit4TestAdapterClass#=#Class#.#forName#(#JUNIT_4_TEST_ADAPTER#,#true#,#loader#)#;#}#}#catch#(#ClassNotFoundException#e#)#{#// OK, fall back to JUnit 3.#}#junit4#=#junit4TestAdapterClass#!=#null#;#if#(#junit4#)#{#// Let's use it!#suite#=#(#Test#)#junit4TestAdapterClass#.#getConstructor#(#new#Class#[#]#{#Class#.#class#}#)#.#newInstance#(#new#Object#[#]#{#testClass#}#)#;#}#else#{#// Use JUnit 3.#// try to extract a test suite automatically this#// will generate warnings if the class is no#// suitable Test#suite#=#new#TestSuite#(#testClass#)#;#}#}#}#catch#(#Throwable#e#)#{#retCode#=#ERRORS#;#exception#=#e#;#}#long#start#=#System#.#currentTimeMillis#(#)#;#fireStartTestSuite#(#)#;#startTestSuiteSuccess#=#true#;#if#(#exception#!=#null#)#{#// had an exception constructing suite#for#(#int#i#=#0#;#i#<#formatters#.#size#(#)#;#i#++#)#{#(#(#TestListener#)#formatters#.#elementAt#(#i#)#)#.#addError#(#null#,#exception#)#;#}#junitTest#.#setCounts#(#1#,#0#,#1#)#;#junitTest#.#setRunTime#(#0#)#;#}#else#{#try#{#logTestListenerEvent#(#"tests to run: "#+#suite#.#countTestCases#(#)#)#;#suite#.#run#(#res#)#;#}#finally#{#if#(#junit4#||#suite#.#getClass#(#)#.#getName#(#)#.#equals#(#JUNIT_4_TEST_ADAPTER#)#)#{#int#[#]#cnts#=#findJUnit4FailureErrorCount#(#res#)#;#junitTest#.#setCounts#(#res#.#runCount#(#)#,#cnts#[#0#]#,#cnts#[#1#]#)#;#}#else#{#junitTest#.#setCounts#(#res#.#runCount#(#)#,#res#.#failureCount#(#)#,#res#.#errorCount#(#)#)#;#}#junitTest#.#setRunTime#(#System#.#currentTimeMillis#(#)#-#start#)#;#}#}#}#finally#{#if#(#perm#!=#null#)#{#perm#.#restoreSecurityManager#(#)#;#}#if#(#savedOut#!=#null#)#{#System#.#setOut#(#savedOut#)#;#}#if#(#savedErr#!=#null#)#{#System#.#setErr#(#savedErr#)#;#}#systemError#.#close#(#)#;#systemError#=#null#;#systemOut#.#close#(#)#;#systemOut#=#null#;#if#(#startTestSuiteSuccess#)#{#sendOutAndErr#(#new#String#(#outStrm#.#toByteArray#(#)#)#,#new#String#(#errStrm#.#toByteArray#(#)#)#)#;#}#}#fireEndTestSuite#(#)#;#// junitTest has the correct counts for JUnit4, while res doesn't#if#(#retCode#!=#SUCCESS#||#junitTest#.#errorCount#(#)#!=#0#)#{#retCode#=#ERRORS#;#}#else#if#(#junitTest#.#failureCount#(#)#!=#0#)#{#retCode#=#FAILURES#;#}#}##int#getRetCode#(#)#{#return#retCode#;#}##void#startTest#(#Test#t#)#{#String#testName#=#JUnitVersionHelper#.#getTestCaseName#(#t#)#;#logTestListenerEvent#(#"startTest("#+#testName#+#")"#)#;#}##void#endTest#(#Test#test#)#{#String#testName#=#JUnitVersionHelper#.#getTestCaseName#(#test#)#;#logTestListenerEvent#(#"endTest("#+#testName#+#")"#)#;#}##void#logTestListenerEvent#(#String#msg#)#{#if#(#logTestListenerEvents#)#{#PrintStream#out#=#savedOut#!=#null#?#savedOut#:#System#.#out#;#out#.#flush#(#)#;#if#(#msg#==#null#)#{#msg#=#"null"#;#}#StringTokenizer#msgLines#=#new#StringTokenizer#(#msg#,#"\r\n"#,#false#)#;#while#(#msgLines#.#hasMoreTokens#(#)#)#{#out#.#println#(#JUnitTask#.#TESTLISTENER_PREFIX#+#msgLines#.#nextToken#(#)#)#;#}#out#.#flush#(#)#;#}#}##void#addFailure#(#Test#test#,#Throwable#t#)#{#String#testName#=#JUnitVersionHelper#.#getTestCaseName#(#test#)#;#logTestListenerEvent#(#"addFailure("#+#testName#+#", "#+#t#.#getMessage#(#)#+#")"#)#;#if#(#haltOnFailure#)#{#res#.#stop#(#)#;#}#}##void#addFailure#(#Test#test#,#AssertionFailedError#t#)#{#addFailure#(#test#,#(#Throwable#)#t#)#;#}##void#addError#(#Test#test#,#Throwable#t#)#{#String#testName#=#JUnitVersionHelper#.#getTestCaseName#(#test#)#;#logTestListenerEvent#(#"addError("#+#testName#+#", "#+#t#.#getMessage#(#)#+#")"#)#;#if#(#haltOnError#)#{#res#.#stop#(#)#;#}#}##void#setPermissions#(#Permissions#permissions#)#{#perm#=#permissions#;#}##void#handleOutput#(#String#output#)#{#if#(#!#logTestListenerEvents#&&#output#.#startsWith#(#JUnitTask#.#TESTLISTENER_PREFIX#)#)#{#// ignore#}#else#if#(#systemOut#!=#null#)#{#systemOut#.#print#(#output#)#;#}#}##int#handleInput#(#byte#[#]#buffer#,#int#offset#,#int#length#)#throws#IOException#{#return#-#1#;#}##void#handleErrorOutput#(#String#output#)#{#if#(#systemError#!=#null#)#{#systemError#.#print#(#output#)#;#}#}##void#handleFlush#(#String#output#)#{#if#(#systemOut#!=#null#)#{#systemOut#.#print#(#output#)#;#}#}##void#handleErrorFlush#(#String#output#)#{#if#(#systemError#!=#null#)#{#systemError#.#print#(#output#)#;#}#}##void#sendOutAndErr#(#String#out#,#String#err#)#{#for#(#int#i#=#0#;#i#<#formatters#.#size#(#)#;#i#++#)#{#JUnitResultFormatter#formatter#=#(#(#JUnitResultFormatter#)#formatters#.#elementAt#(#i#)#)#;#formatter#.#setSystemOutput#(#out#)#;#formatter#.#setSystemError#(#err#)#;#}#}##void#fireStartTestSuite#(#)#{#for#(#int#i#=#0#;#i#<#formatters#.#size#(#)#;#i#++#)#{#(#(#JUnitResultFormatter#)#formatters#.#elementAt#(#i#)#)#.#startTestSuite#(#junitTest#)#;#}#}##void#fireEndTestSuite#(#)#{#for#(#int#i#=#0#;#i#<#formatters#.#size#(#)#;#i#++#)#{#(#(#JUnitResultFormatter#)#formatters#.#elementAt#(#i#)#)#.#endTestSuite#(#junitTest#)#;#}#}##void#addFormatter#(#JUnitResultFormatter#f#)#{#formatters#.#addElement#(#f#)#;#}##void#addFormatter#(#JUnitTaskMirror#.#JUnitResultFormatterMirror#f#)#{#formatters#.#addElement#(#f#)#;#}##void#main#(#String#[#]#args#)#throws#IOException#{#boolean#haltError#=#false#;#boolean#haltFail#=#false#;#boolean#stackfilter#=#true#;#Properties#props#=#new#Properties#(#)#;#boolean#showOut#=#false#;#boolean#outputToFormat#=#true#;#boolean#logFailedTests#=#true#;#boolean#logTestListenerEvents#=#false#;#if#(#args#.#length#==#0#)#{#System#.#err#.#println#(#"required argument TestClassName missing"#)#;#System#.#exit#(#ERRORS#)#;#}#if#(#args#[#0#]#.#startsWith#(#Constants#.#TESTSFILE#)#)#{#multipleTests#=#true#;#args#[#0#]#=#args#[#0#]#.#substring#(#Constants#.#TESTSFILE#.#length#(#)#)#;#}#for#(#int#i#=#1#;#i#<#args#.#length#;#i#++#)#{#if#(#args#[#i#]#.#startsWith#(#Constants#.#HALT_ON_ERROR#)#)#{#haltError#=#Project#.#toBoolean#(#args#[#i#]#.#substring#(#Constants#.#HALT_ON_ERROR#.#length#(#)#)#)#;#}#else#if#(#args#[#i#]#.#startsWith#(#Constants#.#HALT_ON_FAILURE#)#)#{#haltFail#=#Project#.#toBoolean#(#args#[#i#]#.#substring#(#Constants#.#HALT_ON_FAILURE#.#length#(#)#)#)#;#}#else#if#(#args#[#i#]#.#startsWith#(#Constants#.#FILTERTRACE#)#)#{#stackfilter#=#Project#.#toBoolean#(#args#[#i#]#.#substring#(#Constants#.#FILTERTRACE#.#length#(#)#)#)#;#}#else#if#(#args#[#i#]#.#startsWith#(#Constants#.#CRASHFILE#)#)#{#crashFile#=#args#[#i#]#.#substring#(#Constants#.#CRASHFILE#.#length#(#)#)#;#registerTestCase#(#Constants#.#BEFORE_FIRST_TEST#)#;#}#else#if#(#args#[#i#]#.#startsWith#(#Constants#.#FORMATTER#)#)#{#try#{#createAndStoreFormatter#(#args#[#i#]#.#substring#(#Constants#.#FORMATTER#.#length#(#)#)#)#;#}#catch#(#BuildException#be#)#{#System#.#err#.#println#(#be#.#getMessage#(#)#)#;#System#.#exit#(#ERRORS#)#;#}#}#else#if#(#args#[#i#]#.#startsWith#(#Constants#.#PROPSFILE#)#)#{#FileInputStream#in#=#new#FileInputStream#(#args#[#i#]#.#substring#(#Constants#.#PROPSFILE#.#length#(#)#)#)#;#props#.#load#(#in#)#;#in#.#close#(#)#;#}#else#if#(#args#[#i#]#.#startsWith#(#Constants#.#SHOWOUTPUT#)#)#{#showOut#=#Project#.#toBoolean#(#args#[#i#]#.#substring#(#Constants#.#SHOWOUTPUT#.#length#(#)#)#)#;#}#else#if#(#args#[#i#]#.#startsWith#(#Constants#.#LOGTESTLISTENEREVENTS#)#)#{#logTestListenerEvents#=#Project#.#toBoolean#(#args#[#i#]#.#substring#(#Constants#.#LOGTESTLISTENEREVENTS#.#length#(#)#)#)#;#}#else#if#(#args#[#i#]#.#startsWith#(#Constants#.#OUTPUT_TO_FORMATTERS#)#)#{#outputToFormat#=#Project#.#toBoolean#(#args#[#i#]#.#substring#(#Constants#.#OUTPUT_TO_FORMATTERS#.#length#(#)#)#)#;#}#else#if#(#args#[#i#]#.#startsWith#(#Constants#.#LOG_FAILED_TESTS#)#)#{#logFailedTests#=#Project#.#toBoolean#(#args#[#i#]#.#substring#(#Constants#.#LOG_FAILED_TESTS#.#length#(#)#)#)#;#}#}#// Add/overlay system properties on the properties from the Ant project#Hashtable#p#=#System#.#getProperties#(#)#;#for#(#Enumeration#e#=#p#.#keys#(#)#;#e#.#hasMoreElements#(#)#;#)#{#Object#key#=#e#.#nextElement#(#)#;#props#.#put#(#key#,#p#.#get#(#key#)#)#;#}#int#returnCode#=#SUCCESS#;#if#(#multipleTests#)#{#try#{#java#.#io#.#BufferedReader#reader#=#new#java#.#io#.#BufferedReader#(#new#java#.#io#.#FileReader#(#args#[#0#]#)#)#;#String#testCaseName#;#int#code#=#0#;#boolean#errorOccurred#=#false#;#boolean#failureOccurred#=#false#;#String#line#=#null#;#while#(#(#line#=#reader#.#readLine#(#)#)#!=#null#)#{#StringTokenizer#st#=#new#StringTokenizer#(#line#,#","#)#;#testCaseName#=#st#.#nextToken#(#)#;#JUnitTest#t#=#new#JUnitTest#(#testCaseName#)#;#t#.#setTodir#(#new#File#(#st#.#nextToken#(#)#)#)#;#t#.#setOutfile#(#st#.#nextToken#(#)#)#;#t#.#setProperties#(#props#)#;#code#=#launch#(#t#,#haltError#,#stackfilter#,#haltFail#,#showOut#,#outputToFormat#,#logTestListenerEvents#)#;#errorOccurred#=#(#code#==#ERRORS#)#;#failureOccurred#=#(#code#!=#SUCCESS#)#;#if#(#errorOccurred#||#failureOccurred#)#{#if#(#(#errorOccurred#&&#haltError#)#||#(#failureOccurred#&&#haltFail#)#)#{#registerNonCrash#(#)#;#System#.#exit#(#code#)#;#}#else#{#if#(#code#>#returnCode#)#{#returnCode#=#code#;#}#if#(#logFailedTests#)#{#System#.#out#.#println#(#"TEST "#+#t#.#getName#(#)#+#" FAILED"#)#;#}#}#}#}#}#catch#(#IOException#e#)#{#e#.#printStackTrace#(#)#;#}#}#else#{#JUnitTest#t#=#new#JUnitTest#(#args#[#0#]#)#;#t#.#setProperties#(#props#)#;#returnCode#=#launch#(#t#,#haltError#,#stackfilter#,#haltFail#,#showOut#,#outputToFormat#,#logTestListenerEvents#)#;#}#registerNonCrash#(#)#;#System#.#exit#(#returnCode#)#;#}##void#transferFormatters#(#JUnitTestRunner#runner#,#JUnitTest#test#)#{#runner#.#addFormatter#(#new#JUnitResultFormatter#(#)#{#public#void#startTestSuite#(#JUnitTest#suite#)#throws#BuildException#{#}#public#void#endTestSuite#(#JUnitTest#suite#)#throws#BuildException#{#}#public#void#setOutput#(#OutputStream#out#)#{#}#public#void#setSystemOutput#(#String#out#)#{#}#public#void#setSystemError#(#String#err#)#{#}#public#void#addError#(#Test#arg0#,#Throwable#arg1#)#{#}#public#void#addFailure#(#Test#arg0#,#AssertionFailedError#arg1#)#{#}#public#void#endTest#(#Test#arg0#)#{#}#public#void#startTest#(#Test#arg0#)#{#registerTestCase#(#JUnitVersionHelper#.#getTestCaseName#(#arg0#)#)#;#}#}#)#;#for#(#int#i#=#0#;#i#<#fromCmdLine#.#size#(#)#;#i#++#)#{#FormatterElement#fe#=#(#FormatterElement#)#fromCmdLine#.#elementAt#(#i#)#;#if#(#multipleTests#&&#fe#.#getUseFile#(#)#)#{#File#destFile#=#new#File#(#test#.#getTodir#(#)#,#test#.#getOutfile#(#)#+#fe#.#getExtension#(#)#)#;#fe#.#setOutfile#(#destFile#)#;#}#runner#.#addFormatter#(#(#JUnitResultFormatter#)#fe#.#createFormatter#(#)#)#;#}#}##void#startTestSuite#(#JUnitTest#suite#)#throws#BuildException#{#}##void#endTestSuite#(#JUnitTest#suite#)#throws#BuildException#{#}##void#setOutput#(#OutputStream#out#)#{#}##void#setSystemOutput#(#String#out#)#{#}##void#setSystemError#(#String#err#)#{#}##void#addError#(#Test#arg0#,#Throwable#arg1#)#{#}##void#addFailure#(#Test#arg0#,#AssertionFailedError#arg1#)#{#}##void#endTest#(#Test#arg0#)#{#}##void#startTest#(#Test#arg0#)#{#registerTestCase#(#JUnitVersionHelper#.#getTestCaseName#(#arg0#)#)#;#}##void#createAndStoreFormatter#(#String#line#)#throws#BuildException#{#FormatterElement#fe#=#new#FormatterElement#(#)#;#int#pos#=#line#.#indexOf#(#','#)#;#if#(#pos#==#-#1#)#{#fe#.#setClassname#(#line#)#;#fe#.#setUseFile#(#false#)#;#}#else#{#fe#.#setClassname#(#line#.#substring#(#0#,#pos#)#)#;#fe#.#setUseFile#(#true#)#;#if#(#!#multipleTests#)#{#fe#.#setOutfile#(#new#File#(#line#.#substring#(#pos#+#1#)#)#)#;#}#else#{#int#fName#=#line#.#indexOf#(#IGNORED_FILE_NAME#)#;#if#(#fName#>#-#1#)#{#fe#.#setExtension#(#line#.#substring#(#fName#+#IGNORED_FILE_NAME#.#length#(#)#)#)#;#}#}#}#fromCmdLine#.#addElement#(#fe#)#;#}##String#getFilteredTrace#(#Throwable#t#)#{#String#trace#=#StringUtils#.#getStackTrace#(#t#)#;#return#JUnitTestRunner#.#filterStack#(#trace#)#;#}##String#filterStack#(#String#stack#)#{#if#(#!#filtertrace#)#{#return#stack#;#}#StringWriter#sw#=#new#StringWriter#(#)#;#BufferedWriter#pw#=#new#BufferedWriter#(#sw#)#;#StringReader#sr#=#new#StringReader#(#stack#)#;#BufferedReader#br#=#new#BufferedReader#(#sr#)#;#String#line#;#try#{#while#(#(#line#=#br#.#readLine#(#)#)#!=#null#)#{#if#(#!#filterLine#(#line#)#)#{#pw#.#write#(#line#)#;#pw#.#newLine#(#)#;#}#}#}#catch#(#Exception#e#)#{#return#stack#;#// return the stack unfiltered#}#finally#{#FileUtils#.#close#(#pw#)#;#}#return#sw#.#toString#(#)#;#}##boolean#filterLine#(#String#line#)#{#for#(#int#i#=#0#;#i#<#DEFAULT_TRACE_FILTERS#.#length#;#i#++#)#{#if#(#line#.#indexOf#(#DEFAULT_TRACE_FILTERS#[#i#]#)#!=#-#1#)#{#return#true#;#}#}#return#false#;#}##int#launch#(#JUnitTest#t#,#boolean#haltError#,#boolean#stackfilter#,#boolean#haltFail#,#boolean#showOut#,#boolean#outputToFormat#,#boolean#logTestListenerEvents#)#{#JUnitTestRunner#runner#=#new#JUnitTestRunner#(#t#,#haltError#,#stackfilter#,#haltFail#,#showOut#,#logTestListenerEvents#,#null#)#;#runner#.#forked#=#true#;#runner#.#outputToFormatters#=#outputToFormat#;#transferFormatters#(#runner#,#t#)#;#runner#.#run#(#)#;#return#runner#.#getRetCode#(#)#;#}##void#registerNonCrash#(#)#throws#IOException#{#if#(#crashFile#!=#null#)#{#FileWriter#out#=#null#;#try#{#out#=#new#FileWriter#(#crashFile#)#;#out#.#write#(#Constants#.#TERMINATED_SUCCESSFULLY#+#"\n"#)#;#out#.#flush#(#)#;#}#finally#{#FileUtils#.#close#(#out#)#;#}#}#}##void#registerTestCase#(#String#testCase#)#{#if#(#crashFile#!=#null#)#{#try#{#FileWriter#out#=#null#;#try#{#out#=#new#FileWriter#(#crashFile#)#;#out#.#write#(#testCase#+#"\n"#)#;#out#.#flush#(#)#;#}#finally#{#FileUtils#.#close#(#out#)#;#}#}#catch#(#IOException#e#)#{#// ignored.#}#}#}##TestListener#wrapListener#(#final#TestListener#testListener#)#{#return#new#TestListener#(#)#{#public#void#addError#(#Test#test#,#Throwable#t#)#{#if#(#junit4#&&#t#instanceof#AssertionFailedError#)#{#// JUnit 4 does not distinguish between errors and failures#// even in the JUnit 3 adapter.#// So we need to help it a bit to retain compatibility for JUnit 3 tests.#testListener#.#addFailure#(#test#,#(#AssertionFailedError#)#t#)#;#}#else#if#(#junit4#&&#t#instanceof#AssertionError#)#{#// Not strictly necessary but probably desirable.#// JUnit 4-specific test GUIs will show just "failures".#// But Ant's output shows "failures" vs. "errors".#// We would prefer to show "failure" for things that logically are.#String#msg#=#t#.#getMessage#(#)#;#AssertionFailedError#failure#=#msg#!=#null#?#new#AssertionFailedError#(#msg#)#:#new#AssertionFailedError#(#)#;#failure#.#setStackTrace#(#t#.#getStackTrace#(#)#)#;#testListener#.#addFailure#(#test#,#failure#)#;#}#else#{#testListener#.#addError#(#test#,#t#)#;#}#}#public#void#addFailure#(#Test#test#,#AssertionFailedError#t#)#{#testListener#.#addFailure#(#test#,#t#)#;#}#public#void#addFailure#(#Test#test#,#Throwable#t#)#{#// pre-3.4#if#(#t#instanceof#AssertionFailedError#)#{#testListener#.#addFailure#(#test#,#(#AssertionFailedError#)#t#)#;#}#else#{#testListener#.#addError#(#test#,#t#)#;#}#}#public#void#endTest#(#Test#test#)#{#testListener#.#endTest#(#test#)#;#}#public#void#startTest#(#Test#test#)#{#testListener#.#startTest#(#test#)#;#}#}#;#}##void#addError#(#Test#test#,#Throwable#t#)#{#if#(#junit4#&&#t#instanceof#AssertionFailedError#)#{#// JUnit 4 does not distinguish between errors and failures#// even in the JUnit 3 adapter.#// So we need to help it a bit to retain compatibility for JUnit 3 tests.#testListener#.#addFailure#(#test#,#(#AssertionFailedError#)#t#)#;#}#else#if#(#junit4#&&#t#instanceof#AssertionError#)#{#// Not strictly necessary but probably desirable.#// JUnit 4-specific test GUIs will show just "failures".#// But Ant's output shows "failures" vs. "errors".#// We would prefer to show "failure" for things that logically are.#String#msg#=#t#.#getMessage#(#)#;#AssertionFailedError#failure#=#msg#!=#null#?#new#AssertionFailedError#(#msg#)#:#new#AssertionFailedError#(#)#;#failure#.#setStackTrace#(#t#.#getStackTrace#(#)#)#;#testListener#.#addFailure#(#test#,#failure#)#;#}#else#{#testListener#.#addError#(#test#,#t#)#;#}#}##void#addFailure#(#Test#test#,#AssertionFailedError#t#)#{#testListener#.#addFailure#(#test#,#t#)#;#}##void#addFailure#(#Test#test#,#Throwable#t#)#{#// pre-3.4#if#(#t#instanceof#AssertionFailedError#)#{#testListener#.#addFailure#(#test#,#(#AssertionFailedError#)#t#)#;#}#else#{#testListener#.#addError#(#test#,#t#)#;#}#}##void#endTest#(#Test#test#)#{#testListener#.#endTest#(#test#)#;#}##void#startTest#(#Test#test#)#{#testListener#.#startTest#(#test#)#;#}##int#[#]#findJUnit4FailureErrorCount#(#TestResult#result#)#{#int#failures#=#0#;#int#errors#=#0#;#Enumeration#e#=#result#.#failures#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#e#.#nextElement#(#)#;#failures#++#;#}#e#=#result#.#errors#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#Throwable#t#=#(#(#TestFailure#)#e#.#nextElement#(#)#)#.#thrownException#(#)#;#if#(#t#instanceof#AssertionFailedError#||#t#instanceof#AssertionError#)#{#failures#++#;#}#else#{#errors#++#;#}#}#return#new#int#[#]#{#failures#,#errors#}#;#}##