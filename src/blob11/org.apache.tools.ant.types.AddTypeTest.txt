void#setUp#(#)#{#configureProject#(#"src/etc/testcases/types/addtype.xml"#)#;#}##void#testAddPath#(#)#{#executeTarget#(#"addpath"#)#;#}##void#testAddCondition#(#)#{#executeTarget#(#"addcondition"#)#;#}##void#testAddFilter#(#)#{#executeTarget#(#"addfilter"#)#;#}##void#testAddSelector#(#)#{#executeTarget#(#"addselector"#)#;#}##void#testNestedA#(#)#{#expectLogContaining#(#"nested.a"#,#"add A called"#)#;#}##void#testNestedB#(#)#{#expectLogContaining#(#"nested.b"#,#"add B called"#)#;#}##void#testNestedC#(#)#{#expectLogContaining#(#"nested.c"#,#"add C called"#)#;#}##void#testNestedAB#(#)#{#expectBuildExceptionContaining#(#"nested.ab"#,#"Should have got ambiguous"#,#"ambiguous"#)#;#}##void#testConditionType#(#)#{#expectLogContaining#(#"condition.type"#,#"beforeafter"#)#;#}##void#testConditionTask#(#)#{#expectLogContaining#(#"condition.task"#,#"My Condition execution"#)#;#}##void#testConditionConditionType#(#)#{#expectLogContaining#(#"condition.condition.type"#,#"My Condition eval"#)#;#}##void#testConditionConditionTask#(#)#{#expectBuildExceptionContaining#(#"condition.condition.task"#,#"task masking condition"#,#"doesn't support the nested"#)#;#}##void#testAddConfigured#(#)#{#expectLogContaining#(#"myaddconfigured"#,#"value is Value Setexecute: value is Value Set"#)#;#}##void#testAddConfiguredValue#(#)#{#expectLogContaining#(#"myaddconfiguredvalue"#,#"value is Value Setexecute: value is Value Set"#)#;#}##void#testNamespace#(#)#{#executeTarget#(#"namespacetest"#)#;#}##void#add#(#A#el#)#{#log#(#"add A called"#)#;#}##void#add#(#B#el#)#{#log#(#"add B called"#)#;#}##void#add#(#C#el#)#{#log#(#"add C called"#)#;#}##void#setProject#(#Project#project#)#{#this#.#project#=#project#;#}##boolean#eval#(#)#{#project#.#log#(#"My Condition eval"#)#;#return#true#;#}##void#execute#(#)#{#project#.#log#(#"My Condition execution"#)#;#}##void#addText#(#String#text#)#{#this#.#text#=#text#;#}##String#toString#(#)#{#return#text#;#}##void#addConfigured#(#MyValue#value#)#{#log#(#"value is "#+#value#)#;#this#.#value#=#value#;#}##void#add#(#MyValue#value#)#{#throw#new#BuildException#(#"Should not be called"#)#;#}##void#execute#(#)#{#log#(#"execute: value is "#+#value#)#;#}##void#addConfiguredValue#(#MyValue#value#)#{#log#(#"value is "#+#value#)#;#this#.#value#=#value#;#}##void#addValue#(#MyValue#value#)#{#throw#new#BuildException#(#"Should not be called"#)#;#}##void#execute#(#)#{#log#(#"execute: value is "#+#value#)#;#}##