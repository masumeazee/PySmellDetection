void#setErrorOnMissingArchive#(#boolean#errorOnMissingArchive#)#{#this#.#errorOnMissingArchive#=#errorOnMissingArchive#;#}##void#scan#(#)#{#if#(#src#==#null#||#(#!#src#.#isExists#(#)#&&#!#errorOnMissingArchive#)#)#{#return#;#}#super#.#scan#(#)#;#}##void#setSrc#(#File#srcFile#)#{#setSrc#(#new#FileResource#(#srcFile#)#)#;#}##void#setSrc#(#Resource#src#)#{#this#.#src#=#src#;#FileProvider#fp#=#(#FileProvider#)#src#.#as#(#FileProvider#.#class#)#;#if#(#fp#!=#null#)#{#srcFile#=#fp#.#getFile#(#)#;#}#}##void#setEncoding#(#String#encoding#)#{#this#.#encoding#=#encoding#;#}##String#[#]#getIncludedFiles#(#)#{#if#(#src#==#null#)#{#return#super#.#getIncludedFiles#(#)#;#}#scanme#(#)#;#Set#s#=#matchFileEntries#.#keySet#(#)#;#return#(#String#[#]#)#(#s#.#toArray#(#new#String#[#s#.#size#(#)#]#)#)#;#}##int#getIncludedFilesCount#(#)#{#if#(#src#==#null#)#{#return#super#.#getIncludedFilesCount#(#)#;#}#scanme#(#)#;#return#matchFileEntries#.#size#(#)#;#}##String#[#]#getIncludedDirectories#(#)#{#if#(#src#==#null#)#{#return#super#.#getIncludedDirectories#(#)#;#}#scanme#(#)#;#Set#s#=#matchDirEntries#.#keySet#(#)#;#return#(#String#[#]#)#(#s#.#toArray#(#new#String#[#s#.#size#(#)#]#)#)#;#}##int#getIncludedDirsCount#(#)#{#if#(#src#==#null#)#{#return#super#.#getIncludedDirsCount#(#)#;#}#scanme#(#)#;#return#matchDirEntries#.#size#(#)#;#}##Iterator#getResourceFiles#(#Project#project#)#{#if#(#src#==#null#)#{#return#new#FileResourceIterator#(#project#,#getBasedir#(#)#,#getIncludedFiles#(#)#)#;#}#scanme#(#)#;#return#matchFileEntries#.#values#(#)#.#iterator#(#)#;#}##Iterator#getResourceDirectories#(#Project#project#)#{#if#(#src#==#null#)#{#return#new#FileResourceIterator#(#project#,#getBasedir#(#)#,#getIncludedDirectories#(#)#)#;#}#scanme#(#)#;#return#matchDirEntries#.#values#(#)#.#iterator#(#)#;#}##void#init#(#)#{#if#(#includes#==#null#)#{#// No includes supplied, so set it to 'matches all'#includes#=#new#String#[#1#]#;#includes#[#0#]#=#"**"#;#}#if#(#excludes#==#null#)#{#excludes#=#new#String#[#0#]#;#}#}##boolean#match#(#String#path#)#{#String#vpath#=#path#.#replace#(#'/'#,#File#.#separatorChar#)#.#replace#(#'\\'#,#File#.#separatorChar#)#;#return#isIncluded#(#vpath#)#&&#!#isExcluded#(#vpath#)#;#}##Resource#getResource#(#String#name#)#{#if#(#src#==#null#)#{#return#super#.#getResource#(#name#)#;#}#if#(#name#.#equals#(#""#)#)#{#// special case in ZIPs, we do not want this thing included#return#new#Resource#(#""#,#true#,#Long#.#MAX_VALUE#,#true#)#;#}#// first check if the archive needs to be scanned again#scanme#(#)#;#if#(#fileEntries#.#containsKey#(#name#)#)#{#return#(#Resource#)#fileEntries#.#get#(#name#)#;#}#name#=#trimSeparator#(#name#)#;#if#(#dirEntries#.#containsKey#(#name#)#)#{#return#(#Resource#)#dirEntries#.#get#(#name#)#;#}#return#new#Resource#(#name#)#;#}##void#fillMapsFromArchive#(#Resource#archive#,#String#encoding#,#Map#fileEntries#,#Map#matchFileEntries#,#Map#dirEntries#,#Map#matchDirEntries#)#;##void#scanme#(#)#{#if#(#!#src#.#isExists#(#)#&&#!#errorOnMissingArchive#)#{#return#;#}#//do not use a FileResource b/c it pulls File info from the filesystem:#Resource#thisresource#=#new#Resource#(#src#.#getName#(#)#,#src#.#isExists#(#)#,#src#.#getLastModified#(#)#)#;#// spare scanning again and again#if#(#lastScannedResource#!=#null#&&#lastScannedResource#.#getName#(#)#.#equals#(#thisresource#.#getName#(#)#)#&&#lastScannedResource#.#getLastModified#(#)#==#thisresource#.#getLastModified#(#)#)#{#return#;#}#init#(#)#;#fileEntries#.#clear#(#)#;#dirEntries#.#clear#(#)#;#matchFileEntries#.#clear#(#)#;#matchDirEntries#.#clear#(#)#;#fillMapsFromArchive#(#src#,#encoding#,#fileEntries#,#matchFileEntries#,#dirEntries#,#matchDirEntries#)#;#// record data about the last scanned resource#lastScannedResource#=#thisresource#;#}##String#trimSeparator#(#String#s#)#{#return#s#.#endsWith#(#"/"#)#?#s#.#substring#(#0#,#s#.#length#(#)#-#1#)#:#s#;#}##