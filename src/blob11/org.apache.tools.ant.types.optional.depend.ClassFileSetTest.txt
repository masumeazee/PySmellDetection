void#setUp#(#)#{#// share the setup for testing the depend task#configureProject#(#"src/etc/testcases/taskdefs/optional/depend/depend.xml"#)#;#}##void#tearDown#(#)#{#executeTarget#(#"clean"#)#;#}##void#testBasicSet#(#)#{#Project#p#=#getProject#(#)#;#executeTarget#(#"testbasicset"#)#;#FileSet#resultFileSet#=#(#FileSet#)#p#.#getReference#(#RESULT_FILESET#)#;#DirectoryScanner#scanner#=#resultFileSet#.#getDirectoryScanner#(#p#)#;#String#[#]#scannedFiles#=#scanner#.#getIncludedFiles#(#)#;#Hashtable#files#=#new#Hashtable#(#)#;#for#(#int#i#=#0#;#i#<#scannedFiles#.#length#;#++#i#)#{#files#.#put#(#scannedFiles#[#i#]#,#scannedFiles#[#i#]#)#;#}#assertEquals#(#"Classfileset did not pick up expected number of "#+#"class files"#,#4#,#files#.#size#(#)#)#;#assertTrue#(#"Result did not contain A.class"#,#files#.#containsKey#(#"A.class"#)#)#;#assertTrue#(#"Result did not contain B.class"#,#files#.#containsKey#(#"B.class"#)#)#;#assertTrue#(#"Result did not contain C.class"#,#files#.#containsKey#(#"C.class"#)#)#;#assertTrue#(#"Result did not contain D.class"#,#files#.#containsKey#(#"D.class"#)#)#;#}##void#testSmallSet#(#)#{#Project#p#=#getProject#(#)#;#executeTarget#(#"testsmallset"#)#;#FileSet#resultFileSet#=#(#FileSet#)#p#.#getReference#(#RESULT_FILESET#)#;#DirectoryScanner#scanner#=#resultFileSet#.#getDirectoryScanner#(#p#)#;#String#[#]#scannedFiles#=#scanner#.#getIncludedFiles#(#)#;#Hashtable#files#=#new#Hashtable#(#)#;#for#(#int#i#=#0#;#i#<#scannedFiles#.#length#;#++#i#)#{#files#.#put#(#scannedFiles#[#i#]#,#scannedFiles#[#i#]#)#;#}#assertEquals#(#"Classfileset did not pick up expected number of "#+#"class files"#,#2#,#files#.#size#(#)#)#;#assertTrue#(#"Result did not contain B.class"#,#files#.#containsKey#(#"B.class"#)#)#;#assertTrue#(#"Result did not contain C.class"#,#files#.#containsKey#(#"C.class"#)#)#;#}##void#testComboSet#(#)#{#Project#p#=#getProject#(#)#;#executeTarget#(#"testcomboset"#)#;#FileSet#resultFileSet#=#(#FileSet#)#p#.#getReference#(#RESULT_FILESET#)#;#DirectoryScanner#scanner#=#resultFileSet#.#getDirectoryScanner#(#p#)#;#String#[#]#scannedFiles#=#scanner#.#getIncludedFiles#(#)#;#Hashtable#files#=#new#Hashtable#(#)#;#for#(#int#i#=#0#;#i#<#scannedFiles#.#length#;#++#i#)#{#files#.#put#(#scannedFiles#[#i#]#,#scannedFiles#[#i#]#)#;#}#assertEquals#(#"Classfileset did not pick up expected number of "#+#"class files"#,#1#,#files#.#size#(#)#)#;#assertTrue#(#"Result did not contain C.class"#,#files#.#containsKey#(#"C.class"#)#)#;#}##void#testByReference#(#)#{#executeTarget#(#"testbyreference"#)#;#}##void#testMethodParam#(#)#{#Project#p#=#getProject#(#)#;#executeTarget#(#"testmethodparam"#)#;#FileSet#resultFileSet#=#(#FileSet#)#p#.#getReference#(#RESULT_FILESET#)#;#DirectoryScanner#scanner#=#resultFileSet#.#getDirectoryScanner#(#p#)#;#String#[#]#scannedFiles#=#scanner#.#getIncludedFiles#(#)#;#Hashtable#files#=#new#Hashtable#(#)#;#for#(#int#i#=#0#;#i#<#scannedFiles#.#length#;#++#i#)#{#files#.#put#(#scannedFiles#[#i#]#,#scannedFiles#[#i#]#)#;#}#assertEquals#(#"Classfileset did not pick up expected number of "#+#"class files"#,#5#,#files#.#size#(#)#)#;#assertTrue#(#"Result did not contain A.class"#,#files#.#containsKey#(#"A.class"#)#)#;#assertTrue#(#"Result did not contain B.class"#,#files#.#containsKey#(#"B.class"#)#)#;#assertTrue#(#"Result did not contain C.class"#,#files#.#containsKey#(#"C.class"#)#)#;#assertTrue#(#"Result did not contain D.class"#,#files#.#containsKey#(#"D.class"#)#)#;#assertTrue#(#"Result did not contain E.class"#,#files#.#containsKey#(#"E.class"#)#)#;#}##void#testMethodParamInner#(#)#{#Project#p#=#getProject#(#)#;#executeTarget#(#"testmethodparaminner"#)#;#FileSet#resultFileSet#=#(#FileSet#)#p#.#getReference#(#RESULT_FILESET#)#;#DirectoryScanner#scanner#=#resultFileSet#.#getDirectoryScanner#(#p#)#;#String#[#]#scannedFiles#=#scanner#.#getIncludedFiles#(#)#;#Hashtable#files#=#new#Hashtable#(#)#;#for#(#int#i#=#0#;#i#<#scannedFiles#.#length#;#++#i#)#{#files#.#put#(#scannedFiles#[#i#]#,#scannedFiles#[#i#]#)#;#}#assertEquals#(#"Classfileset did not pick up expected number of "#+#"class files"#,#4#,#files#.#size#(#)#)#;#assertTrue#(#"Result did not contain test"#+#File#.#separator#+#"Outer$Inner.class"#,#files#.#containsKey#(#"test"#+#File#.#separator#+#"Outer$Inner.class"#)#)#;#assertTrue#(#"Result did not contain test"#+#File#.#separator#+#"Outer.class"#,#files#.#containsKey#(#"test"#+#File#.#separator#+#"Outer.class"#)#)#;#assertTrue#(#"Result did not contain test"#+#File#.#separator#+#"ContainsOnlyInner.class"#,#files#.#containsKey#(#"test"#+#File#.#separator#+#"ContainsOnlyInner.class"#)#)#;#assertTrue#(#"Result did not contain test"#+#File#.#separator#+#"ContainsOnlyInner.class"#,#files#.#containsKey#(#"test"#+#File#.#separator#+#"MethodParam.class"#)#)#;#}##void#testResourceCollection#(#)#{#executeTarget#(#"testresourcecollection"#)#;#}##