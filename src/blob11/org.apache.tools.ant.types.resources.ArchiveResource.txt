void#setArchive#(#File#a#)#{#checkAttributesAllowed#(#)#;#archive#=#new#FileResource#(#a#)#;#}##void#setMode#(#int#mode#)#{#checkAttributesAllowed#(#)#;#this#.#mode#=#mode#;#modeSet#=#true#;#}##void#addConfigured#(#ResourceCollection#a#)#{#checkChildrenAllowed#(#)#;#if#(#archive#!=#null#)#{#throw#new#BuildException#(#"you must not specify more than one"#+#" archive"#)#;#}#if#(#a#.#size#(#)#!=#1#)#{#throw#new#BuildException#(#"only single argument resource collections"#+#" are supported as archives"#)#;#}#archive#=#(#Resource#)#a#.#iterator#(#)#.#next#(#)#;#}##Resource#getArchive#(#)#{#return#isReference#(#)#?#(#(#ArchiveResource#)#getCheckedRef#(#)#)#.#getArchive#(#)#:#archive#;#}##long#getLastModified#(#)#{#if#(#isReference#(#)#)#{#return#(#(#Resource#)#getCheckedRef#(#)#)#.#getLastModified#(#)#;#}#checkEntry#(#)#;#return#super#.#getLastModified#(#)#;#}##long#getSize#(#)#{#if#(#isReference#(#)#)#{#return#(#(#Resource#)#getCheckedRef#(#)#)#.#getSize#(#)#;#}#checkEntry#(#)#;#return#super#.#getSize#(#)#;#}##boolean#isDirectory#(#)#{#if#(#isReference#(#)#)#{#return#(#(#Resource#)#getCheckedRef#(#)#)#.#isDirectory#(#)#;#}#checkEntry#(#)#;#return#super#.#isDirectory#(#)#;#}##boolean#isExists#(#)#{#if#(#isReference#(#)#)#{#return#(#(#Resource#)#getCheckedRef#(#)#)#.#isExists#(#)#;#}#checkEntry#(#)#;#return#super#.#isExists#(#)#;#}##int#getMode#(#)#{#if#(#isReference#(#)#)#{#return#(#(#ArchiveResource#)#getCheckedRef#(#)#)#.#getMode#(#)#;#}#checkEntry#(#)#;#return#mode#;#}##void#setRefid#(#Reference#r#)#{#if#(#archive#!=#null#||#modeSet#)#{#throw#tooManyAttributes#(#)#;#}#super#.#setRefid#(#r#)#;#}##int#compareTo#(#Object#another#)#{#return#this#.#equals#(#another#)#?#0#:#super#.#compareTo#(#another#)#;#}##boolean#equals#(#Object#another#)#{#if#(#this#==#another#)#{#return#true#;#}#if#(#isReference#(#)#)#{#return#getCheckedRef#(#)#.#equals#(#another#)#;#}#if#(#!#(#another#.#getClass#(#)#.#equals#(#getClass#(#)#)#)#)#{#return#false#;#}#ArchiveResource#r#=#(#ArchiveResource#)#another#;#return#getArchive#(#)#.#equals#(#r#.#getArchive#(#)#)#&&#getName#(#)#.#equals#(#r#.#getName#(#)#)#;#}##int#hashCode#(#)#{#return#super#.#hashCode#(#)#*#(#getArchive#(#)#==#null#?#NULL_ARCHIVE#:#getArchive#(#)#.#hashCode#(#)#)#;#}##String#toString#(#)#{#return#isReference#(#)#?#getCheckedRef#(#)#.#toString#(#)#:#getArchive#(#)#.#toString#(#)#+#':'#+#getName#(#)#;#}##void#checkEntry#(#)#throws#BuildException#{#dieOnCircularReference#(#)#;#if#(#haveEntry#)#{#return#;#}#String#name#=#getName#(#)#;#if#(#name#==#null#)#{#throw#new#BuildException#(#"entry name not set"#)#;#}#Resource#r#=#getArchive#(#)#;#if#(#r#==#null#)#{#throw#new#BuildException#(#"archive attribute not set"#)#;#}#if#(#!#r#.#isExists#(#)#)#{#throw#new#BuildException#(#r#.#toString#(#)#+#" does not exist."#)#;#}#if#(#r#.#isDirectory#(#)#)#{#throw#new#BuildException#(#r#+#" denotes a directory."#)#;#}#fetchEntry#(#)#;#haveEntry#=#true#;#}##void#fetchEntry#(#)#;##void#dieOnCircularReference#(#Stack#stk#,#Project#p#)#{#if#(#isChecked#(#)#)#{#return#;#}#if#(#isReference#(#)#)#{#super#.#dieOnCircularReference#(#stk#,#p#)#;#}#else#{#if#(#archive#!=#null#)#{#pushAndInvokeCircularReferenceCheck#(#archive#,#stk#,#p#)#;#}#setChecked#(#true#)#;#}#}##