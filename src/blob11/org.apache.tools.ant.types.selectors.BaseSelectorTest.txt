void#setUp#(#)#{#project#=#new#Project#(#)#;#project#.#init#(#)#;#project#.#setBaseDir#(#basedir#)#;#for#(#int#x#=#0#;#x#<#files#.#length#;#x#++#)#{#files#[#x#]#=#new#File#(#beddir#,#filenames#[#x#]#)#;#mirrorfiles#[#x#]#=#new#File#(#mirrordir#,#filenames#[#x#]#)#;#}#}##BaseSelector#getInstance#(#)#;##BaseSelector#getSelector#(#)#{#BaseSelector#selector#=#getInstance#(#)#;#selector#.#setProject#(#getProject#(#)#)#;#return#selector#;#}##Project#getProject#(#)#{#return#project#;#}##void#testRespondsToError#(#)#{#BaseSelector#s#=#getInstance#(#)#;#if#(#s#==#null#)#{#return#;#}#s#.#setError#(#"test error"#)#;#try#{#s#.#isSelected#(#beddir#,#filenames#[#0#]#,#files#[#0#]#)#;#fail#(#"Cannot cause BuildException when setError() is called"#)#;#}#catch#(#BuildException#be#)#{#assertEquals#(#"test error"#,#be#.#getMessage#(#)#)#;#}#}##String#selectionString#(#FileSelector#selector#)#{#return#selectionString#(#beddir#,#files#,#selector#)#;#}##String#mirrorSelectionString#(#FileSelector#selector#)#{#return#selectionString#(#mirrordir#,#mirrorfiles#,#selector#)#;#}##String#selectionString#(#File#basedir#,#File#[#]#files#,#FileSelector#selector#)#{#StringBuffer#buf#=#new#StringBuffer#(#)#;#for#(#int#x#=#0#;#x#<#files#.#length#;#x#++#)#{#if#(#selector#.#isSelected#(#basedir#,#filenames#[#x#]#,#files#[#x#]#)#)#{#buf#.#append#(#'T'#)#;#}#else#{#buf#.#append#(#'F'#)#;#}#}#return#buf#.#toString#(#)#;#}##void#performTests#(#FileSelector#selector#,#String#expected#)#{#String#result#=#selectionString#(#selector#)#;#String#diff#=#diff#(#expected#,#result#)#;#String#resolved#=#resolve#(#diff#)#;#assertEquals#(#"Differing files: "#+#resolved#,#result#,#expected#)#;#}##String#diff#(#String#expected#,#String#result#)#{#int#length1#=#expected#.#length#(#)#;#int#length2#=#result#.#length#(#)#;#int#min#=#(#length1#>#length2#)#?#length2#:#length1#;#StringBuffer#sb#=#new#StringBuffer#(#)#;#for#(#int#i#=#0#;#i#<#min#;#i#++#)#{#sb#.#append#(#(#expected#.#charAt#(#i#)#==#result#.#charAt#(#i#)#)#?#"-"#:#"X"#)#;#}#return#sb#.#toString#(#)#;#}##String#resolve#(#String#filelist#)#{#StringBuffer#sb#=#new#StringBuffer#(#)#;#int#min#=#(#filenames#.#length#>#filelist#.#length#(#)#)#?#filelist#.#length#(#)#:#filenames#.#length#;#for#(#int#i#=#0#;#i#<#min#;#i#++#)#{#if#(#'X'#==#filelist#.#charAt#(#i#)#)#{#sb#.#append#(#filenames#[#i#]#)#;#sb#.#append#(#";"#)#;#}#}#return#sb#.#toString#(#)#;#}##void#makeBed#(#)#{#tbed#=#new#TaskdefForMakingBed#(#"setupfiles"#)#;#tbed#.#setUp#(#)#;#tbed#.#makeTestbed#(#)#;#}##void#cleanupBed#(#)#{#if#(#tbed#!=#null#)#{#tbed#.#tearDown#(#)#;#tbed#=#null#;#}#}##void#makeMirror#(#)#{#tbed#=#new#TaskdefForMakingBed#(#"mirrorfiles"#)#;#tbed#.#setUp#(#)#;#tbed#.#makeMirror#(#)#;#}##void#cleanupMirror#(#)#{#if#(#tbed#!=#null#)#{#tbed#.#deleteMirror#(#)#;#tbed#=#null#;#}#}##void#setUp#(#)#{#configureProject#(#"src/etc/testcases/types/selectors.xml"#)#;#}##void#tearDown#(#)#{#executeTarget#(#"cleanup"#)#;#}##void#makeTestbed#(#)#{#executeTarget#(#"setupfiles"#)#;#}##void#makeMirror#(#)#{#executeTarget#(#"mirrorfiles"#)#;#}##void#deleteMirror#(#)#{#executeTarget#(#"cleanup.mirrorfiles"#)#;#}##