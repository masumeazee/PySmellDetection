String#toString#(#)#{#StringBuffer#buf#=#new#StringBuffer#(#"{containsregexpselector expression: "#)#;#buf#.#append#(#userProvidedExpression#)#;#buf#.#append#(#"}"#)#;#return#buf#.#toString#(#)#;#}##void#setExpression#(#String#theexpression#)#{#this#.#userProvidedExpression#=#theexpression#;#}##void#setParameters#(#Parameter#[#]#parameters#)#{#super#.#setParameters#(#parameters#)#;#if#(#parameters#!=#null#)#{#for#(#int#i#=#0#;#i#<#parameters#.#length#;#i#++#)#{#String#paramname#=#parameters#[#i#]#.#getName#(#)#;#if#(#EXPRESSION_KEY#.#equalsIgnoreCase#(#paramname#)#)#{#setExpression#(#parameters#[#i#]#.#getValue#(#)#)#;#}#else#{#setError#(#"Invalid parameter "#+#paramname#)#;#}#}#}#}##void#verifySettings#(#)#{#if#(#userProvidedExpression#==#null#)#{#setError#(#"The expression attribute is required"#)#;#}#}##boolean#isSelected#(#File#basedir#,#String#filename#,#File#file#)#{#return#isSelected#(#new#FileResource#(#file#)#)#;#}##boolean#isSelected#(#Resource#r#)#{#String#teststr#=#null#;#BufferedReader#in#=#null#;#// throw BuildException on error#validate#(#)#;#if#(#r#.#isDirectory#(#)#)#{#return#true#;#}#if#(#myRegExp#==#null#)#{#myRegExp#=#new#RegularExpression#(#)#;#myRegExp#.#setPattern#(#userProvidedExpression#)#;#myExpression#=#myRegExp#.#getRegexp#(#getProject#(#)#)#;#}#try#{#in#=#new#BufferedReader#(#new#InputStreamReader#(#r#.#getInputStream#(#)#)#)#;#}#catch#(#Exception#e#)#{#throw#new#BuildException#(#"Could not get InputStream from "#+#r#.#toLongString#(#)#,#e#)#;#}#try#{#teststr#=#in#.#readLine#(#)#;#while#(#teststr#!=#null#)#{#if#(#myExpression#.#matches#(#teststr#)#)#{#return#true#;#}#teststr#=#in#.#readLine#(#)#;#}#return#false#;#}#catch#(#IOException#ioe#)#{#throw#new#BuildException#(#"Could not read "#+#r#.#toLongString#(#)#)#;#}#finally#{#try#{#in#.#close#(#)#;#}#catch#(#Exception#e#)#{#throw#new#BuildException#(#"Could not close "#+#r#.#toLongString#(#)#)#;#}#}#}##