void#verifySettings#(#)#{#configure#(#)#;#if#(#cache#==#null#)#{#setError#(#"Cache must be set."#)#;#}#else#if#(#algorithm#==#null#)#{#setError#(#"Algorithm must be set."#)#;#}#else#if#(#!#cache#.#isValid#(#)#)#{#setError#(#"Cache must be proper configured."#)#;#}#else#if#(#!#algorithm#.#isValid#(#)#)#{#setError#(#"Algorithm must be proper configured."#)#;#}#}##void#configure#(#)#{#//#// -----  The "Singleton"  -----#//#if#(#isConfigured#)#{#return#;#}#isConfigured#=#true#;#//#// -----  Set default values  -----#//#Project#p#=#getProject#(#)#;#String#filename#=#"cache.properties"#;#File#cachefile#=#null#;#if#(#p#!=#null#)#{#// normal use inside Ant#cachefile#=#new#File#(#p#.#getBaseDir#(#)#,#filename#)#;#// set self as a BuildListener to delay cachefile saves#getProject#(#)#.#addBuildListener#(#this#)#;#}#else#{#// no reference to project - e.g. during normal JUnit tests#cachefile#=#new#File#(#filename#)#;#setDelayUpdate#(#false#)#;#}#Cache#defaultCache#=#new#PropertiesfileCache#(#cachefile#)#;#Algorithm#defaultAlgorithm#=#new#DigestAlgorithm#(#)#;#Comparator#defaultComparator#=#new#EqualComparator#(#)#;#//#// -----  Set the main attributes, pattern '*'  -----#//#for#(#Iterator#itConfig#=#configParameter#.#iterator#(#)#;#itConfig#.#hasNext#(#)#;#)#{#Parameter#par#=#(#Parameter#)#itConfig#.#next#(#)#;#if#(#par#.#getName#(#)#.#indexOf#(#"."#)#>#0#)#{#// this is a *.* parameter for later use#specialParameter#.#add#(#par#)#;#}#else#{#useParameter#(#par#)#;#}#}#configParameter#=#new#Vector#(#)#;#// specify the algorithm classname#if#(#algoName#!=#null#)#{#// use Algorithm defined via name#if#(#"hashvalue"#.#equals#(#algoName#.#getValue#(#)#)#)#{#algorithm#=#new#HashvalueAlgorithm#(#)#;#}#else#if#(#"digest"#.#equals#(#algoName#.#getValue#(#)#)#)#{#algorithm#=#new#DigestAlgorithm#(#)#;#}#else#if#(#"checksum"#.#equals#(#algoName#.#getValue#(#)#)#)#{#algorithm#=#new#ChecksumAlgorithm#(#)#;#}#}#else#{#if#(#algorithmClass#!=#null#)#{#// use Algorithm specified by classname#algorithm#=#(#Algorithm#)#loadClass#(#algorithmClass#,#"is not an Algorithm."#,#Algorithm#.#class#)#;#}#else#{#// nothing specified - use default#algorithm#=#defaultAlgorithm#;#}#}#// specify the cache classname#if#(#cacheName#!=#null#)#{#// use Cache defined via name#if#(#"propertyfile"#.#equals#(#cacheName#.#getValue#(#)#)#)#{#cache#=#new#PropertiesfileCache#(#)#;#}#}#else#{#if#(#cacheClass#!=#null#)#{#// use Cache specified by classname#cache#=#(#Cache#)#loadClass#(#cacheClass#,#"is not a Cache."#,#Cache#.#class#)#;#}#else#{#// nothing specified - use default#cache#=#defaultCache#;#}#}#// specify the comparator classname#if#(#compName#!=#null#)#{#// use Algorithm defined via name#if#(#"equal"#.#equals#(#compName#.#getValue#(#)#)#)#{#comparator#=#new#EqualComparator#(#)#;#}#else#if#(#"rule"#.#equals#(#compName#.#getValue#(#)#)#)#{#// TODO there is a problem with the constructor for the RBC.#// you have to provide the rules in the constructors - no setters#// available.#throw#new#BuildException#(#"RuleBasedCollator not yet supported."#)#;#// Have to think about lazy initialization here...  JHM#// comparator = new java.text.RuleBasedCollator();#}#}#else#{#if#(#comparatorClass#!=#null#)#{#// use Algorithm specified by classname#comparator#=#(#Comparator#)#loadClass#(#comparatorClass#,#"is not a Comparator."#,#Comparator#.#class#)#;#}#else#{#// nothing specified - use default#comparator#=#defaultComparator#;#}#}#//#// -----  Set the special attributes, pattern '*.*'  -----#//#for#(#Iterator#itSpecial#=#specialParameter#.#iterator#(#)#;#itSpecial#.#hasNext#(#)#;#)#{#Parameter#par#=#(#Parameter#)#itSpecial#.#next#(#)#;#useParameter#(#par#)#;#}#specialParameter#=#new#Vector#(#)#;#}##Object#loadClass#(#String#classname#,#String#msg#,#Class#type#)#{#try#{#// load the specified class#ClassLoader#cl#=#getClassLoader#(#)#;#Class#clazz#=#null#;#if#(#cl#!=#null#)#{#clazz#=#cl#.#loadClass#(#classname#)#;#}#else#{#clazz#=#Class#.#forName#(#classname#)#;#}#Object#rv#=#clazz#.#newInstance#(#)#;#if#(#!#type#.#isInstance#(#rv#)#)#{#throw#new#BuildException#(#"Specified class ("#+#classname#+#") "#+#msg#)#;#}#return#rv#;#}#catch#(#ClassNotFoundException#e#)#{#throw#new#BuildException#(#"Specified class ("#+#classname#+#") not found."#)#;#}#catch#(#Exception#e#)#{#throw#new#BuildException#(#e#)#;#}#}##boolean#isSelected#(#Resource#resource#)#{#if#(#resource#.#isFilesystemOnly#(#)#)#{#// We have a 'resourced' file, so reconvert it and use#// the 'old' implementation.#FileResource#fileResource#=#(#FileResource#)#resource#;#File#file#=#fileResource#.#getFile#(#)#;#String#filename#=#fileResource#.#getName#(#)#;#File#basedir#=#fileResource#.#getBaseDir#(#)#;#return#isSelected#(#basedir#,#filename#,#file#)#;#}#else#{#try#{#// How to handle non-file-Resources? I copy temporarily the#// resource to a file and use the file-implementation.#FileUtils#fu#=#FileUtils#.#getFileUtils#(#)#;#File#tmpFile#=#fu#.#createTempFile#(#"modified-"#,#".tmp"#,#null#,#true#,#false#)#;#Resource#tmpResource#=#new#FileResource#(#tmpFile#)#;#ResourceUtils#.#copyResource#(#resource#,#tmpResource#)#;#boolean#isSelected#=#isSelected#(#tmpFile#.#getParentFile#(#)#,#tmpFile#.#getName#(#)#,#resource#.#toLongString#(#)#)#;#tmpFile#.#delete#(#)#;#return#isSelected#;#}#catch#(#UnsupportedOperationException#uoe#)#{#log#(#"The resource '"#+#resource#.#getName#(#)#+#"' does not provide an InputStream, so it is not checked. "#+#"Akkording to 'selres' attribute value it is "#+#(#(#selectResourcesWithoutInputStream#)#?#""#:#" not"#)#+#"selected."#,#Project#.#MSG_INFO#)#;#return#selectResourcesWithoutInputStream#;#}#catch#(#Exception#e#)#{#throw#new#BuildException#(#e#)#;#}#}#}##boolean#isSelected#(#File#basedir#,#String#filename#,#File#file#)#{#return#isSelected#(#basedir#,#filename#,#file#.#getAbsolutePath#(#)#)#;#}##boolean#isSelected#(#File#basedir#,#String#filename#,#String#cacheKey#)#{#validate#(#)#;#File#f#=#new#File#(#basedir#,#filename#)#;#// You can not compute a value for a directory#if#(#f#.#isDirectory#(#)#)#{#return#selectDirectories#;#}#// Get the values and do the comparison#String#cachedValue#=#String#.#valueOf#(#cache#.#get#(#f#.#getAbsolutePath#(#)#)#)#;#String#newValue#=#algorithm#.#getValue#(#f#)#;#boolean#rv#=#(#comparator#.#compare#(#cachedValue#,#newValue#)#!=#0#)#;#// Maybe update the cache#if#(#update#&&#rv#)#{#cache#.#put#(#f#.#getAbsolutePath#(#)#,#newValue#)#;#setModified#(#getModified#(#)#+#1#)#;#if#(#!#getDelayUpdate#(#)#)#{#saveCache#(#)#;#}#}#return#rv#;#}##void#saveCache#(#)#{#if#(#getModified#(#)#>#0#)#{#cache#.#save#(#)#;#setModified#(#0#)#;#}#}##void#setAlgorithmClass#(#String#classname#)#{#algorithmClass#=#classname#;#}##void#setComparatorClass#(#String#classname#)#{#comparatorClass#=#classname#;#}##void#setCacheClass#(#String#classname#)#{#cacheClass#=#classname#;#}##void#setUpdate#(#boolean#update#)#{#this#.#update#=#update#;#}##void#setSeldirs#(#boolean#seldirs#)#{#selectDirectories#=#seldirs#;#}##void#setSelres#(#boolean#newValue#)#{#this#.#selectResourcesWithoutInputStream#=#newValue#;#}##int#getModified#(#)#{#return#modified#;#}##void#setModified#(#int#modified#)#{#this#.#modified#=#modified#;#}##boolean#getDelayUpdate#(#)#{#return#delayUpdate#;#}##void#setDelayUpdate#(#boolean#delayUpdate#)#{#this#.#delayUpdate#=#delayUpdate#;#}##void#addClasspath#(#Path#path#)#{#if#(#classpath#!=#null#)#{#throw#new#BuildException#(#"<classpath> can be set only once."#)#;#}#classpath#=#path#;#}##ClassLoader#getClassLoader#(#)#{#if#(#myClassLoader#==#null#)#{#myClassLoader#=#(#classpath#==#null#)#// the usual classloader#?#getClass#(#)#.#getClassLoader#(#)#// additional use the provided classpath#// Memory leak in line below#:#getProject#(#)#.#createClassLoader#(#classpath#)#;#}#return#myClassLoader#;#}##void#setClassLoader#(#ClassLoader#loader#)#{#myClassLoader#=#loader#;#}##void#addParam#(#String#key#,#Object#value#)#{#Parameter#par#=#new#Parameter#(#)#;#par#.#setName#(#key#)#;#par#.#setValue#(#String#.#valueOf#(#value#)#)#;#configParameter#.#add#(#par#)#;#}##void#addParam#(#Parameter#parameter#)#{#configParameter#.#add#(#parameter#)#;#}##void#setParameters#(#Parameter#[#]#parameters#)#{#if#(#parameters#!=#null#)#{#for#(#int#i#=#0#;#i#<#parameters#.#length#;#i#++#)#{#configParameter#.#add#(#parameters#[#i#]#)#;#}#}#}##void#useParameter#(#Parameter#parameter#)#{#String#key#=#parameter#.#getName#(#)#;#String#value#=#parameter#.#getValue#(#)#;#if#(#"cache"#.#equals#(#key#)#)#{#CacheName#cn#=#new#CacheName#(#)#;#cn#.#setValue#(#value#)#;#setCache#(#cn#)#;#}#else#if#(#"algorithm"#.#equals#(#key#)#)#{#AlgorithmName#an#=#new#AlgorithmName#(#)#;#an#.#setValue#(#value#)#;#setAlgorithm#(#an#)#;#}#else#if#(#"comparator"#.#equals#(#key#)#)#{#ComparatorName#cn#=#new#ComparatorName#(#)#;#cn#.#setValue#(#value#)#;#setComparator#(#cn#)#;#}#else#if#(#"update"#.#equals#(#key#)#)#{#boolean#updateValue#=#(#"true"#.#equalsIgnoreCase#(#value#)#)#?#true#:#false#;#setUpdate#(#updateValue#)#;#}#else#if#(#"delayupdate"#.#equals#(#key#)#)#{#boolean#updateValue#=#(#"true"#.#equalsIgnoreCase#(#value#)#)#?#true#:#false#;#setDelayUpdate#(#updateValue#)#;#}#else#if#(#"seldirs"#.#equals#(#key#)#)#{#boolean#sdValue#=#(#"true"#.#equalsIgnoreCase#(#value#)#)#?#true#:#false#;#setSeldirs#(#sdValue#)#;#}#else#if#(#key#.#startsWith#(#CACHE_PREFIX#)#)#{#String#name#=#key#.#substring#(#CACHE_PREFIX#.#length#(#)#)#;#tryToSetAParameter#(#cache#,#name#,#value#)#;#}#else#if#(#key#.#startsWith#(#ALGORITHM_PREFIX#)#)#{#String#name#=#key#.#substring#(#ALGORITHM_PREFIX#.#length#(#)#)#;#tryToSetAParameter#(#algorithm#,#name#,#value#)#;#}#else#if#(#key#.#startsWith#(#COMPARATOR_PREFIX#)#)#{#String#name#=#key#.#substring#(#COMPARATOR_PREFIX#.#length#(#)#)#;#tryToSetAParameter#(#comparator#,#name#,#value#)#;#}#else#{#setError#(#"Invalid parameter "#+#key#)#;#}#}##void#tryToSetAParameter#(#Object#obj#,#String#name#,#String#value#)#{#Project#prj#=#(#getProject#(#)#!=#null#)#?#getProject#(#)#:#new#Project#(#)#;#IntrospectionHelper#iHelper#=#IntrospectionHelper#.#getHelper#(#prj#,#obj#.#getClass#(#)#)#;#try#{#iHelper#.#setAttribute#(#prj#,#obj#,#name#,#value#)#;#}#catch#(#org#.#apache#.#tools#.#ant#.#BuildException#e#)#{#// no-op#}#}##String#toString#(#)#{#StringBuffer#buf#=#new#StringBuffer#(#"{modifiedselector"#)#;#buf#.#append#(#" update="#)#.#append#(#update#)#;#buf#.#append#(#" seldirs="#)#.#append#(#selectDirectories#)#;#buf#.#append#(#" cache="#)#.#append#(#cache#)#;#buf#.#append#(#" algorithm="#)#.#append#(#algorithm#)#;#buf#.#append#(#" comparator="#)#.#append#(#comparator#)#;#buf#.#append#(#"}"#)#;#return#buf#.#toString#(#)#;#}##void#buildFinished#(#BuildEvent#event#)#{#if#(#getDelayUpdate#(#)#)#{#saveCache#(#)#;#}#}##void#targetFinished#(#BuildEvent#event#)#{#if#(#getDelayUpdate#(#)#)#{#saveCache#(#)#;#}#}##void#taskFinished#(#BuildEvent#event#)#{#if#(#getDelayUpdate#(#)#)#{#saveCache#(#)#;#}#}##void#buildStarted#(#BuildEvent#event#)#{#// no-op#}##void#targetStarted#(#BuildEvent#event#)#{#// no-op#}##void#taskStarted#(#BuildEvent#event#)#{#// no-op#}##void#messageLogged#(#BuildEvent#event#)#{#// no-op#}##Cache#getCache#(#)#{#return#cache#;#}##void#setCache#(#CacheName#name#)#{#cacheName#=#name#;#}##String#[#]#getValues#(#)#{#return#new#String#[#]#{#"propertyfile"#}#;#}##Algorithm#getAlgorithm#(#)#{#return#algorithm#;#}##void#setAlgorithm#(#AlgorithmName#name#)#{#algoName#=#name#;#}##String#[#]#getValues#(#)#{#return#new#String#[#]#{#"hashvalue"#,#"digest"#,#"checksum"#}#;#}##Comparator#getComparator#(#)#{#return#comparator#;#}##void#setComparator#(#ComparatorName#name#)#{#compName#=#name#;#}##String#[#]#getValues#(#)#{#return#new#String#[#]#{#"equal"#,#"rule"#}#;#}##