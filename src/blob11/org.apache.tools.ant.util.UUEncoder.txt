void#encode#(#InputStream#is#,#OutputStream#out#)#throws#IOException#{#this#.#out#=#out#;#encodeBegin#(#)#;#byte#[#]#buffer#=#new#byte#[#INPUT_BUFFER_SIZE#]#;#int#count#;#while#(#(#count#=#is#.#read#(#buffer#,#0#,#buffer#.#length#)#)#!=#-#1#)#{#int#pos#=#0#;#while#(#count#>#0#)#{#int#num#=#count#>#MAX_CHARS_PER_LINE#?#MAX_CHARS_PER_LINE#:#count#;#encodeLine#(#buffer#,#pos#,#num#,#out#)#;#pos#+=#num#;#count#-=#num#;#}#}#out#.#flush#(#)#;#encodeEnd#(#)#;#}##void#encodeString#(#String#n#)#throws#IOException#{#PrintStream#writer#=#new#PrintStream#(#out#)#;#writer#.#print#(#n#)#;#writer#.#flush#(#)#;#}##void#encodeBegin#(#)#throws#IOException#{#encodeString#(#"begin "#+#DEFAULT_MODE#+#" "#+#name#+#"\n"#)#;#}##void#encodeEnd#(#)#throws#IOException#{#encodeString#(#" \nend\n"#)#;#}##void#encodeLine#(#byte#[#]#data#,#int#offset#,#int#length#,#OutputStream#out#)#throws#IOException#{#// write out the number of characters encoded in this line.#// CheckStyle:MagicNumber OFF#out#.#write#(#(#byte#)#(#(#length#&#0x3F#)#+#' '#)#)#;#// CheckStyle:MagicNumber ON#byte#a#;#byte#b#;#byte#c#;#for#(#int#i#=#0#;#i#<#length#;#)#{#// set the padding defaults#b#=#1#;#c#=#1#;#// get the next 3 bytes (if we have them)#a#=#data#[#offset#+#i#++#]#;#if#(#i#<#length#)#{#b#=#data#[#offset#+#i#++#]#;#if#(#i#<#length#)#{#c#=#data#[#offset#+#i#++#]#;#}#}#// CheckStyle:MagicNumber OFF#byte#d1#=#(#byte#)#(#(#(#a#>#>#>#2#)#&#0x3F#)#+#' '#)#;#byte#d2#=#(#byte#)#(#(#(#(#a#<#<#4#)#&#0x30#)#|#(#(#b#>#>#>#4#)#&#0x0F#)#)#+#' '#)#;#byte#d3#=#(#byte#)#(#(#(#(#b#<#<#2#)#&#0x3C#)#|#(#(#c#>#>#>#6#)#&#0x3#)#)#+#' '#)#;#byte#d4#=#(#byte#)#(#(#c#&#0x3F#)#+#' '#)#;#// CheckStyle:MagicNumber ON#out#.#write#(#d1#)#;#out#.#write#(#d2#)#;#out#.#write#(#d3#)#;#out#.#write#(#d4#)#;#}#// terminate with a linefeed alone#out#.#write#(#'\n'#)#;#}##