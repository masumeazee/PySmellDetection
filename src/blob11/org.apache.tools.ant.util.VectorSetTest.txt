void#testAdd#(#)#{#assertTrue#(#v#.#add#(#O#)#)#;#assertFalse#(#v#.#add#(#O#)#)#;#assertEquals#(#1#,#v#.#size#(#)#)#;#}##void#testAdd2#(#)#{#v#.#add#(#0#,#O#)#;#v#.#add#(#1#,#O#)#;#assertEquals#(#1#,#v#.#size#(#)#)#;#}##void#testAddElement#(#)#{#v#.#addElement#(#O#)#;#v#.#addElement#(#O#)#;#assertEquals#(#1#,#v#.#size#(#)#)#;#}##void#testAddAll#(#)#{#assertTrue#(#v#.#addAll#(#Arrays#.#asList#(#new#Object#[#]#{#O#,#O#}#)#)#)#;#assertEquals#(#1#,#v#.#size#(#)#)#;#}##void#testAddAll2#(#)#{#assertTrue#(#v#.#addAll#(#0#,#Arrays#.#asList#(#new#Object#[#]#{#O#,#O#}#)#)#)#;#assertEquals#(#1#,#v#.#size#(#)#)#;#}##void#testClear#(#)#{#v#.#add#(#O#)#;#v#.#clear#(#)#;#assertEquals#(#0#,#v#.#size#(#)#)#;#}##void#testClone#(#)#{#v#.#add#(#O#)#;#Object#o#=#v#.#clone#(#)#;#assertTrue#(#o#instanceof#VectorSet#)#;#VectorSet#vs#=#(#VectorSet#)#o#;#assertEquals#(#1#,#vs#.#size#(#)#)#;#assertTrue#(#vs#.#contains#(#O#)#)#;#}##void#testContains#(#)#{#assertFalse#(#v#.#contains#(#O#)#)#;#v#.#add#(#O#)#;#assertTrue#(#v#.#contains#(#O#)#)#;#assertFalse#(#v#.#contains#(#null#)#)#;#}##void#testContainsAll#(#)#{#assertFalse#(#v#.#containsAll#(#Arrays#.#asList#(#new#Object#[#]#{#O#,#O#}#)#)#)#;#v#.#add#(#O#)#;#assertTrue#(#v#.#containsAll#(#Arrays#.#asList#(#new#Object#[#]#{#O#,#O#}#)#)#)#;#assertFalse#(#v#.#containsAll#(#Arrays#.#asList#(#new#Object#[#]#{#O#,#null#}#)#)#)#;#}##void#testInsertElementAt#(#)#{#v#.#insertElementAt#(#O#,#0#)#;#v#.#insertElementAt#(#O#,#1#)#;#assertEquals#(#1#,#v#.#size#(#)#)#;#}##void#testRemoveIndex#(#)#{#v#.#add#(#O#)#;#assertSame#(#O#,#v#.#remove#(#0#)#)#;#assertEquals#(#0#,#v#.#size#(#)#)#;#try#{#v#.#remove#(#0#)#;#fail#(#"expected an AIOBE"#)#;#}#catch#(#ArrayIndexOutOfBoundsException#e#)#{#// expected#}#}##void#testRemoveObject#(#)#{#v#.#add#(#O#)#;#assertTrue#(#v#.#remove#(#O#)#)#;#assertEquals#(#0#,#v#.#size#(#)#)#;#assertFalse#(#v#.#remove#(#O#)#)#;#}##void#testRemoveAll#(#)#{#v#.#add#(#O#)#;#assertTrue#(#v#.#removeAll#(#Arrays#.#asList#(#new#Object#[#]#{#O#,#O#}#)#)#)#;#assertEquals#(#0#,#v#.#size#(#)#)#;#assertFalse#(#v#.#removeAll#(#Arrays#.#asList#(#new#Object#[#]#{#O#,#O#}#)#)#)#;#}##void#testRemoveAllElements#(#)#{#v#.#add#(#O#)#;#v#.#removeAllElements#(#)#;#assertEquals#(#0#,#v#.#size#(#)#)#;#}##void#testRemoveElement#(#)#{#v#.#add#(#O#)#;#assertTrue#(#v#.#removeElement#(#O#)#)#;#assertEquals#(#0#,#v#.#size#(#)#)#;#assertFalse#(#v#.#removeElement#(#O#)#)#;#}##void#testRemoveElementAt#(#)#{#v#.#add#(#O#)#;#v#.#removeElementAt#(#0#)#;#assertEquals#(#0#,#v#.#size#(#)#)#;#try#{#v#.#removeElementAt#(#0#)#;#fail#(#"expected an AIOBE"#)#;#}#catch#(#ArrayIndexOutOfBoundsException#e#)#{#// expected#}#}##void#testRemoveRange#(#)#{#Object#a#=#new#Object#(#)#;#Object#b#=#new#Object#(#)#;#Object#c#=#new#Object#(#)#;#v#.#addAll#(#Arrays#.#asList#(#new#Object#[#]#{#O#,#a#,#b#,#c#}#)#)#;#v#.#removeRange#(#1#,#3#)#;#assertEquals#(#2#,#v#.#size#(#)#)#;#assertTrue#(#v#.#contains#(#O#)#)#;#assertTrue#(#v#.#contains#(#c#)#)#;#}##void#testRetainAll#(#)#{#Object#a#=#new#Object#(#)#;#Object#b#=#new#Object#(#)#;#Object#c#=#new#Object#(#)#;#v#.#addAll#(#Arrays#.#asList#(#new#Object#[#]#{#O#,#a#,#b#,#c#}#)#)#;#assertEquals#(#0#,#v#.#indexOf#(#O#)#)#;#v#.#retainAll#(#Arrays#.#asList#(#new#Object#[#]#{#c#,#O#}#)#)#;#assertEquals#(#2#,#v#.#size#(#)#)#;#assertTrue#(#v#.#contains#(#O#)#)#;#assertTrue#(#v#.#contains#(#c#)#)#;#assertEquals#(#0#,#v#.#indexOf#(#O#)#)#;#}##void#testSet#(#)#{#v#.#add#(#O#)#;#Object#a#=#new#Object#(#)#;#assertSame#(#O#,#v#.#set#(#0#,#a#)#)#;#assertSame#(#a#,#v#.#get#(#0#)#)#;#assertEquals#(#1#,#v#.#size#(#)#)#;#}##void#testSetElementAt#(#)#{#v#.#add#(#O#)#;#Object#a#=#new#Object#(#)#;#v#.#setElementAt#(#a#,#0#)#;#assertSame#(#a#,#v#.#get#(#0#)#)#;#assertEquals#(#1#,#v#.#size#(#)#)#;#}##