boolean#equals#(#TarEntry#it#)#{#return#getName#(#)#.#equals#(#it#.#getName#(#)#)#;#}##boolean#equals#(#Object#it#)#{#if#(#it#==#null#||#getClass#(#)#!=#it#.#getClass#(#)#)#{#return#false#;#}#return#equals#(#(#TarEntry#)#it#)#;#}##int#hashCode#(#)#{#return#getName#(#)#.#hashCode#(#)#;#}##boolean#isDescendent#(#TarEntry#desc#)#{#return#desc#.#getName#(#)#.#startsWith#(#getName#(#)#)#;#}##String#getName#(#)#{#return#name#.#toString#(#)#;#}##void#setName#(#String#name#)#{#this#.#name#=#new#StringBuffer#(#normalizeFileName#(#name#,#false#)#)#;#}##void#setMode#(#int#mode#)#{#this#.#mode#=#mode#;#}##String#getLinkName#(#)#{#return#linkName#.#toString#(#)#;#}##int#getUserId#(#)#{#return#userId#;#}##void#setUserId#(#int#userId#)#{#this#.#userId#=#userId#;#}##int#getGroupId#(#)#{#return#groupId#;#}##void#setGroupId#(#int#groupId#)#{#this#.#groupId#=#groupId#;#}##String#getUserName#(#)#{#return#userName#.#toString#(#)#;#}##void#setUserName#(#String#userName#)#{#this#.#userName#=#new#StringBuffer#(#userName#)#;#}##String#getGroupName#(#)#{#return#groupName#.#toString#(#)#;#}##void#setGroupName#(#String#groupName#)#{#this#.#groupName#=#new#StringBuffer#(#groupName#)#;#}##void#setIds#(#int#userId#,#int#groupId#)#{#setUserId#(#userId#)#;#setGroupId#(#groupId#)#;#}##void#setNames#(#String#userName#,#String#groupName#)#{#setUserName#(#userName#)#;#setGroupName#(#groupName#)#;#}##void#setModTime#(#long#time#)#{#modTime#=#time#/#MILLIS_PER_SECOND#;#}##void#setModTime#(#Date#time#)#{#modTime#=#time#.#getTime#(#)#/#MILLIS_PER_SECOND#;#}##Date#getModTime#(#)#{#return#new#Date#(#modTime#*#MILLIS_PER_SECOND#)#;#}##File#getFile#(#)#{#return#file#;#}##int#getMode#(#)#{#return#mode#;#}##long#getSize#(#)#{#return#size#;#}##void#setSize#(#long#size#)#{#this#.#size#=#size#;#}##boolean#isGNULongNameEntry#(#)#{#return#linkFlag#==#LF_GNUTYPE_LONGNAME#&&#name#.#toString#(#)#.#equals#(#GNU_LONGLINK#)#;#}##boolean#isDirectory#(#)#{#if#(#file#!=#null#)#{#return#file#.#isDirectory#(#)#;#}#if#(#linkFlag#==#LF_DIR#)#{#return#true#;#}#if#(#getName#(#)#.#endsWith#(#"/"#)#)#{#return#true#;#}#return#false#;#}##TarEntry#[#]#getDirectoryEntries#(#)#{#if#(#file#==#null#||#!#file#.#isDirectory#(#)#)#{#return#new#TarEntry#[#0#]#;#}#String#[#]#list#=#file#.#list#(#)#;#TarEntry#[#]#result#=#new#TarEntry#[#list#.#length#]#;#for#(#int#i#=#0#;#i#<#list#.#length#;#++#i#)#{#result#[#i#]#=#new#TarEntry#(#new#File#(#file#,#list#[#i#]#)#)#;#}#return#result#;#}##void#writeEntryHeader#(#byte#[#]#outbuf#)#{#int#offset#=#0#;#offset#=#TarUtils#.#getNameBytes#(#name#,#outbuf#,#offset#,#NAMELEN#)#;#offset#=#TarUtils#.#getOctalBytes#(#mode#,#outbuf#,#offset#,#MODELEN#)#;#offset#=#TarUtils#.#getOctalBytes#(#userId#,#outbuf#,#offset#,#UIDLEN#)#;#offset#=#TarUtils#.#getOctalBytes#(#groupId#,#outbuf#,#offset#,#GIDLEN#)#;#offset#=#TarUtils#.#getLongOctalBytes#(#size#,#outbuf#,#offset#,#SIZELEN#)#;#offset#=#TarUtils#.#getLongOctalBytes#(#modTime#,#outbuf#,#offset#,#MODTIMELEN#)#;#int#csOffset#=#offset#;#for#(#int#c#=#0#;#c#<#CHKSUMLEN#;#++#c#)#{#outbuf#[#offset#++#]#=#(#byte#)#' '#;#}#outbuf#[#offset#++#]#=#linkFlag#;#offset#=#TarUtils#.#getNameBytes#(#linkName#,#outbuf#,#offset#,#NAMELEN#)#;#offset#=#TarUtils#.#getNameBytes#(#magic#,#outbuf#,#offset#,#MAGICLEN#)#;#offset#=#TarUtils#.#getNameBytes#(#userName#,#outbuf#,#offset#,#UNAMELEN#)#;#offset#=#TarUtils#.#getNameBytes#(#groupName#,#outbuf#,#offset#,#GNAMELEN#)#;#offset#=#TarUtils#.#getOctalBytes#(#devMajor#,#outbuf#,#offset#,#DEVLEN#)#;#offset#=#TarUtils#.#getOctalBytes#(#devMinor#,#outbuf#,#offset#,#DEVLEN#)#;#while#(#offset#<#outbuf#.#length#)#{#outbuf#[#offset#++#]#=#0#;#}#long#chk#=#TarUtils#.#computeCheckSum#(#outbuf#)#;#TarUtils#.#getCheckSumOctalBytes#(#chk#,#outbuf#,#csOffset#,#CHKSUMLEN#)#;#}##void#parseTarHeader#(#byte#[#]#header#)#{#int#offset#=#0#;#name#=#TarUtils#.#parseName#(#header#,#offset#,#NAMELEN#)#;#offset#+=#NAMELEN#;#mode#=#(#int#)#TarUtils#.#parseOctal#(#header#,#offset#,#MODELEN#)#;#offset#+=#MODELEN#;#userId#=#(#int#)#TarUtils#.#parseOctal#(#header#,#offset#,#UIDLEN#)#;#offset#+=#UIDLEN#;#groupId#=#(#int#)#TarUtils#.#parseOctal#(#header#,#offset#,#GIDLEN#)#;#offset#+=#GIDLEN#;#size#=#TarUtils#.#parseOctal#(#header#,#offset#,#SIZELEN#)#;#offset#+=#SIZELEN#;#modTime#=#TarUtils#.#parseOctal#(#header#,#offset#,#MODTIMELEN#)#;#offset#+=#MODTIMELEN#;#offset#+=#CHKSUMLEN#;#linkFlag#=#header#[#offset#++#]#;#linkName#=#TarUtils#.#parseName#(#header#,#offset#,#NAMELEN#)#;#offset#+=#NAMELEN#;#magic#=#TarUtils#.#parseName#(#header#,#offset#,#MAGICLEN#)#;#offset#+=#MAGICLEN#;#userName#=#TarUtils#.#parseName#(#header#,#offset#,#UNAMELEN#)#;#offset#+=#UNAMELEN#;#groupName#=#TarUtils#.#parseName#(#header#,#offset#,#GNAMELEN#)#;#offset#+=#GNAMELEN#;#devMajor#=#(#int#)#TarUtils#.#parseOctal#(#header#,#offset#,#DEVLEN#)#;#offset#+=#DEVLEN#;#devMinor#=#(#int#)#TarUtils#.#parseOctal#(#header#,#offset#,#DEVLEN#)#;#}##String#normalizeFileName#(#String#fileName#,#boolean#preserveLeadingSlashes#)#{#String#osname#=#System#.#getProperty#(#"os.name"#)#.#toLowerCase#(#Locale#.#US#)#;#if#(#osname#!=#null#)#{#// Strip off drive letters!#// REVIEW Would a better check be "(File.separator == '\')"?#if#(#osname#.#startsWith#(#"windows"#)#)#{#if#(#fileName#.#length#(#)#>#2#)#{#char#ch1#=#fileName#.#charAt#(#0#)#;#char#ch2#=#fileName#.#charAt#(#1#)#;#if#(#ch2#==#':'#&&#(#(#ch1#>=#'a'#&&#ch1#<=#'z'#)#||#(#ch1#>=#'A'#&&#ch1#<=#'Z'#)#)#)#{#fileName#=#fileName#.#substring#(#2#)#;#}#}#}#else#if#(#osname#.#indexOf#(#"netware"#)#>#-#1#)#{#int#colon#=#fileName#.#indexOf#(#':'#)#;#if#(#colon#!=#-#1#)#{#fileName#=#fileName#.#substring#(#colon#+#1#)#;#}#}#}#fileName#=#fileName#.#replace#(#File#.#separatorChar#,#'/'#)#;#// No absolute pathnames#// Windows (and Posix?) paths can start with "\\NetworkDrive\",#// so we loop on starting /'s.#while#(#!#preserveLeadingSlashes#&&#fileName#.#startsWith#(#"/"#)#)#{#fileName#=#fileName#.#substring#(#1#)#;#}#return#fileName#;#}##