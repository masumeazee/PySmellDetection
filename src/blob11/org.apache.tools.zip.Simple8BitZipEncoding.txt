int#compareTo#(#Object#o#)#{#Simple8BitChar#a#=#(#Simple8BitChar#)#o#;#return#this#.#unicode#-#a#.#unicode#;#}##String#toString#(#)#{#return#"0x"#+#Integer#.#toHexString#(#0xffff#&#(#int#)#unicode#)#+#"->0x"#+#Integer#.#toHexString#(#0xff#&#(#int#)#code#)#;#}##char#decodeByte#(#byte#b#)#{#// code 0-127#if#(#b#>=#0#)#{#return#(#char#)#b#;#}#// byte is signed, so 128 == -128 and 255 == -1#return#this#.#highChars#[#128#+#(#int#)#b#]#;#}##boolean#canEncodeChar#(#char#c#)#{#if#(#c#>=#0#&&#c#<#128#)#{#return#true#;#}#Simple8BitChar#r#=#this#.#encodeHighChar#(#c#)#;#return#r#!=#null#;#}##boolean#pushEncodedChar#(#ByteBuffer#bb#,#char#c#)#{#if#(#c#>=#0#&&#c#<#128#)#{#bb#.#put#(#(#byte#)#c#)#;#return#true#;#}#Simple8BitChar#r#=#this#.#encodeHighChar#(#c#)#;#if#(#r#==#null#)#{#return#false#;#}#bb#.#put#(#r#.#code#)#;#return#true#;#}##Simple8BitChar#encodeHighChar#(#char#c#)#{#// for performance an simplicity, yet another reincarnation of#// binary search...#int#i0#=#0#;#int#i1#=#this#.#reverseMapping#.#size#(#)#;#while#(#i1#>#i0#)#{#int#i#=#i0#+#(#i1#-#i0#)#/#2#;#Simple8BitChar#m#=#(#Simple8BitChar#)#this#.#reverseMapping#.#get#(#i#)#;#if#(#m#.#unicode#==#c#)#{#return#m#;#}#if#(#m#.#unicode#<#c#)#{#i0#=#i#+#1#;#}#else#{#i1#=#i#;#}#}#if#(#i0#>=#this#.#reverseMapping#.#size#(#)#)#{#return#null#;#}#Simple8BitChar#r#=#(#Simple8BitChar#)#this#.#reverseMapping#.#get#(#i0#)#;#if#(#r#.#unicode#!=#c#)#{#return#null#;#}#return#r#;#}##boolean#canEncode#(#String#name#)#{#for#(#int#i#=#0#;#i#<#name#.#length#(#)#;#++#i#)#{#char#c#=#name#.#charAt#(#i#)#;#if#(#!#this#.#canEncodeChar#(#c#)#)#{#return#false#;#}#}#return#true#;#}##ByteBuffer#encode#(#String#name#)#{#ByteBuffer#out#=#ByteBuffer#.#allocate#(#name#.#length#(#)#+#6#+#(#name#.#length#(#)#+#1#)#/#2#)#;#for#(#int#i#=#0#;#i#<#name#.#length#(#)#;#++#i#)#{#char#c#=#name#.#charAt#(#i#)#;#if#(#out#.#remaining#(#)#<#6#)#{#out#=#ZipEncodingHelper#.#growBuffer#(#out#,#out#.#position#(#)#+#6#)#;#}#if#(#!#this#.#pushEncodedChar#(#out#,#c#)#)#{#ZipEncodingHelper#.#appendSurrogate#(#out#,#c#)#;#}#}#out#.#limit#(#out#.#position#(#)#)#;#out#.#rewind#(#)#;#return#out#;#}##String#decode#(#byte#[#]#data#)#throws#IOException#{#char#[#]#ret#=#new#char#[#data#.#length#]#;#for#(#int#i#=#0#;#i#<#data#.#length#;#++#i#)#{#ret#[#i#]#=#this#.#decodeByte#(#data#[#i#]#)#;#}#return#new#String#(#ret#)#;#}##