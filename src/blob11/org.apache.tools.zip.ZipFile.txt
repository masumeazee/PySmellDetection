String#getEncoding#(#)#{#return#encoding#;#}##void#close#(#)#throws#IOException#{#archive#.#close#(#)#;#}##void#closeQuietly#(#ZipFile#zipfile#)#{#if#(#zipfile#!=#null#)#{#try#{#zipfile#.#close#(#)#;#}#catch#(#IOException#e#)#{#//ignore#}#}#}##Enumeration#getEntries#(#)#{#return#Collections#.#enumeration#(#entries#.#keySet#(#)#)#;#}##ZipEntry#getEntry#(#String#name#)#{#return#(#ZipEntry#)#nameMap#.#get#(#name#)#;#}##InputStream#getInputStream#(#ZipEntry#ze#)#throws#IOException#,#ZipException#{#OffsetEntry#offsetEntry#=#(#OffsetEntry#)#entries#.#get#(#ze#)#;#if#(#offsetEntry#==#null#)#{#return#null#;#}#long#start#=#offsetEntry#.#dataOffset#;#BoundedInputStream#bis#=#new#BoundedInputStream#(#start#,#ze#.#getCompressedSize#(#)#)#;#switch#(#ze#.#getMethod#(#)#)#{#case#ZipEntry#.#STORED#:#return#bis#;#case#ZipEntry#.#DEFLATED#:#bis#.#addDummy#(#)#;#return#new#InflaterInputStream#(#bis#,#new#Inflater#(#true#)#)#;#default#:#throw#new#ZipException#(#"Found unsupported compression method "#+#ze#.#getMethod#(#)#)#;#}#}##Map#populateFromCentralDirectory#(#)#throws#IOException#{#HashMap#noEFS#=#new#HashMap#(#)#;#positionAtCentralDirectory#(#)#;#byte#[#]#cfh#=#new#byte#[#CFH_LEN#]#;#byte#[#]#signatureBytes#=#new#byte#[#WORD#]#;#archive#.#readFully#(#signatureBytes#)#;#long#sig#=#ZipLong#.#getValue#(#signatureBytes#)#;#final#long#cfhSig#=#ZipLong#.#getValue#(#ZipOutputStream#.#CFH_SIG#)#;#if#(#sig#!=#cfhSig#&&#startsWithLocalFileHeader#(#)#)#{#throw#new#IOException#(#"central directory is empty, can't expand"#+#" corrupt archive."#)#;#}#while#(#sig#==#cfhSig#)#{#archive#.#readFully#(#cfh#)#;#int#off#=#0#;#ZipEntry#ze#=#new#ZipEntry#(#)#;#int#versionMadeBy#=#ZipShort#.#getValue#(#cfh#,#off#)#;#off#+=#SHORT#;#ze#.#setPlatform#(#(#versionMadeBy#>#>#BYTE_SHIFT#)#&#NIBLET_MASK#)#;#off#+=#SHORT#;#// skip version info#final#int#generalPurposeFlag#=#ZipShort#.#getValue#(#cfh#,#off#)#;#final#boolean#hasEFS#=#(#generalPurposeFlag#&#ZipOutputStream#.#EFS_FLAG#)#!=#0#;#final#ZipEncoding#entryEncoding#=#hasEFS#?#ZipEncodingHelper#.#UTF8_ZIP_ENCODING#:#zipEncoding#;#off#+=#SHORT#;#ze#.#setMethod#(#ZipShort#.#getValue#(#cfh#,#off#)#)#;#off#+=#SHORT#;#// FIXME this is actually not very cpu cycles friendly as we are converting from#// dos to java while the underlying Sun implementation will convert#// from java to dos time for internal storage...#long#time#=#dosToJavaTime#(#ZipLong#.#getValue#(#cfh#,#off#)#)#;#ze#.#setTime#(#time#)#;#off#+=#WORD#;#ze#.#setCrc#(#ZipLong#.#getValue#(#cfh#,#off#)#)#;#off#+=#WORD#;#ze#.#setCompressedSize#(#ZipLong#.#getValue#(#cfh#,#off#)#)#;#off#+=#WORD#;#ze#.#setSize#(#ZipLong#.#getValue#(#cfh#,#off#)#)#;#off#+=#WORD#;#int#fileNameLen#=#ZipShort#.#getValue#(#cfh#,#off#)#;#off#+=#SHORT#;#int#extraLen#=#ZipShort#.#getValue#(#cfh#,#off#)#;#off#+=#SHORT#;#int#commentLen#=#ZipShort#.#getValue#(#cfh#,#off#)#;#off#+=#SHORT#;#off#+=#SHORT#;#// disk number#ze#.#setInternalAttributes#(#ZipShort#.#getValue#(#cfh#,#off#)#)#;#off#+=#SHORT#;#ze#.#setExternalAttributes#(#ZipLong#.#getValue#(#cfh#,#off#)#)#;#off#+=#WORD#;#byte#[#]#fileName#=#new#byte#[#fileNameLen#]#;#archive#.#readFully#(#fileName#)#;#ze#.#setName#(#entryEncoding#.#decode#(#fileName#)#)#;#// LFH offset,#OffsetEntry#offset#=#new#OffsetEntry#(#)#;#offset#.#headerOffset#=#ZipLong#.#getValue#(#cfh#,#off#)#;#// data offset will be filled later#entries#.#put#(#ze#,#offset#)#;#nameMap#.#put#(#ze#.#getName#(#)#,#ze#)#;#byte#[#]#cdExtraData#=#new#byte#[#extraLen#]#;#archive#.#readFully#(#cdExtraData#)#;#ze#.#setCentralDirectoryExtra#(#cdExtraData#)#;#byte#[#]#comment#=#new#byte#[#commentLen#]#;#archive#.#readFully#(#comment#)#;#ze#.#setComment#(#entryEncoding#.#decode#(#comment#)#)#;#archive#.#readFully#(#signatureBytes#)#;#sig#=#ZipLong#.#getValue#(#signatureBytes#)#;#if#(#!#hasEFS#&&#useUnicodeExtraFields#)#{#noEFS#.#put#(#ze#,#new#NameAndComment#(#fileName#,#comment#)#)#;#}#}#return#noEFS#;#}##void#positionAtCentralDirectory#(#)#throws#IOException#{#boolean#found#=#false#;#long#off#=#archive#.#length#(#)#-#MIN_EOCD_SIZE#;#long#stopSearching#=#Math#.#max#(#0L#,#archive#.#length#(#)#-#MAX_EOCD_SIZE#)#;#if#(#off#>=#0#)#{#archive#.#seek#(#off#)#;#byte#[#]#sig#=#ZipOutputStream#.#EOCD_SIG#;#int#curr#=#archive#.#read#(#)#;#while#(#off#>=#stopSearching#&&#curr#!=#-#1#)#{#if#(#curr#==#sig#[#POS_0#]#)#{#curr#=#archive#.#read#(#)#;#if#(#curr#==#sig#[#POS_1#]#)#{#curr#=#archive#.#read#(#)#;#if#(#curr#==#sig#[#POS_2#]#)#{#curr#=#archive#.#read#(#)#;#if#(#curr#==#sig#[#POS_3#]#)#{#found#=#true#;#break#;#}#}#}#}#archive#.#seek#(#--#off#)#;#curr#=#archive#.#read#(#)#;#}#}#if#(#!#found#)#{#throw#new#ZipException#(#"archive is not a ZIP archive"#)#;#}#archive#.#seek#(#off#+#CFD_LOCATOR_OFFSET#)#;#byte#[#]#cfdOffset#=#new#byte#[#WORD#]#;#archive#.#readFully#(#cfdOffset#)#;#archive#.#seek#(#ZipLong#.#getValue#(#cfdOffset#)#)#;#}##void#resolveLocalFileHeaderData#(#Map#entriesWithoutEFS#)#throws#IOException#{#Enumeration#e#=#getEntries#(#)#;#while#(#e#.#hasMoreElements#(#)#)#{#ZipEntry#ze#=#(#ZipEntry#)#e#.#nextElement#(#)#;#OffsetEntry#offsetEntry#=#(#OffsetEntry#)#entries#.#get#(#ze#)#;#long#offset#=#offsetEntry#.#headerOffset#;#archive#.#seek#(#offset#+#LFH_OFFSET_FOR_FILENAME_LENGTH#)#;#byte#[#]#b#=#new#byte#[#SHORT#]#;#archive#.#readFully#(#b#)#;#int#fileNameLen#=#ZipShort#.#getValue#(#b#)#;#archive#.#readFully#(#b#)#;#int#extraFieldLen#=#ZipShort#.#getValue#(#b#)#;#int#lenToSkip#=#fileNameLen#;#while#(#lenToSkip#>#0#)#{#int#skipped#=#archive#.#skipBytes#(#lenToSkip#)#;#if#(#skipped#<=#0#)#{#throw#new#RuntimeException#(#"failed to skip file name in"#+#" local file header"#)#;#}#lenToSkip#-=#skipped#;#}#byte#[#]#localExtraData#=#new#byte#[#extraFieldLen#]#;#archive#.#readFully#(#localExtraData#)#;#ze#.#setExtra#(#localExtraData#)#;#/*dataOffsets.put(ze,
                            new Long(offset + LFH_OFFSET_FOR_FILENAME_LENGTH
                                     + SHORT + SHORT + fileNameLen + extraFieldLen));
            */#offsetEntry#.#dataOffset#=#offset#+#LFH_OFFSET_FOR_FILENAME_LENGTH#+#SHORT#+#SHORT#+#fileNameLen#+#extraFieldLen#;#if#(#entriesWithoutEFS#.#containsKey#(#ze#)#)#{#setNameAndCommentFromExtraFields#(#ze#,#(#NameAndComment#)#entriesWithoutEFS#.#get#(#ze#)#)#;#}#}#}##Date#fromDosTime#(#ZipLong#zipDosTime#)#{#long#dosTime#=#zipDosTime#.#getValue#(#)#;#return#new#Date#(#dosToJavaTime#(#dosTime#)#)#;#}##long#dosToJavaTime#(#long#dosTime#)#{#Calendar#cal#=#Calendar#.#getInstance#(#)#;#// CheckStyle:MagicNumberCheck OFF - no point#cal#.#set#(#Calendar#.#YEAR#,#(#int#)#(#(#dosTime#>#>#25#)#&#0x7f#)#+#1980#)#;#cal#.#set#(#Calendar#.#MONTH#,#(#int#)#(#(#dosTime#>#>#21#)#&#0x0f#)#-#1#)#;#cal#.#set#(#Calendar#.#DATE#,#(#int#)#(#dosTime#>#>#16#)#&#0x1f#)#;#cal#.#set#(#Calendar#.#HOUR_OF_DAY#,#(#int#)#(#dosTime#>#>#11#)#&#0x1f#)#;#cal#.#set#(#Calendar#.#MINUTE#,#(#int#)#(#dosTime#>#>#5#)#&#0x3f#)#;#cal#.#set#(#Calendar#.#SECOND#,#(#int#)#(#dosTime#<#<#1#)#&#0x3e#)#;#// CheckStyle:MagicNumberCheck ON#return#cal#.#getTime#(#)#.#getTime#(#)#;#}##String#getString#(#byte#[#]#bytes#)#throws#ZipException#{#try#{#return#ZipEncodingHelper#.#getZipEncoding#(#encoding#)#.#decode#(#bytes#)#;#}#catch#(#IOException#ex#)#{#throw#new#ZipException#(#"Failed to decode name: "#+#ex#.#getMessage#(#)#)#;#}#}##boolean#startsWithLocalFileHeader#(#)#throws#IOException#{#archive#.#seek#(#0#)#;#final#byte#[#]#start#=#new#byte#[#WORD#]#;#archive#.#readFully#(#start#)#;#for#(#int#i#=#0#;#i#<#start#.#length#;#i#++#)#{#if#(#start#[#i#]#!=#ZipOutputStream#.#LFH_SIG#[#i#]#)#{#return#false#;#}#}#return#true#;#}##void#setNameAndCommentFromExtraFields#(#ZipEntry#ze#,#NameAndComment#nc#)#{#UnicodePathExtraField#name#=#(#UnicodePathExtraField#)#ze#.#getExtraField#(#UnicodePathExtraField#.#UPATH_ID#)#;#String#originalName#=#ze#.#getName#(#)#;#String#newName#=#getUnicodeStringIfOriginalMatches#(#name#,#nc#.#name#)#;#if#(#newName#!=#null#&&#!#originalName#.#equals#(#newName#)#)#{#ze#.#setName#(#newName#)#;#nameMap#.#remove#(#originalName#)#;#nameMap#.#put#(#newName#,#ze#)#;#}#if#(#nc#.#comment#!=#null#&&#nc#.#comment#.#length#>#0#)#{#UnicodeCommentExtraField#cmt#=#(#UnicodeCommentExtraField#)#ze#.#getExtraField#(#UnicodeCommentExtraField#.#UCOM_ID#)#;#String#newComment#=#getUnicodeStringIfOriginalMatches#(#cmt#,#nc#.#comment#)#;#if#(#newComment#!=#null#)#{#ze#.#setComment#(#newComment#)#;#}#}#}##String#getUnicodeStringIfOriginalMatches#(#AbstractUnicodeExtraField#f#,#byte#[#]#orig#)#{#if#(#f#!=#null#)#{#CRC32#crc32#=#new#CRC32#(#)#;#crc32#.#update#(#orig#)#;#long#origCRC32#=#crc32#.#getValue#(#)#;#if#(#origCRC32#==#f#.#getNameCRC32#(#)#)#{#try#{#return#ZipEncodingHelper#.#UTF8_ZIP_ENCODING#.#decode#(#f#.#getUnicodeName#(#)#)#;#}#catch#(#IOException#ex#)#{#// UTF-8 unsupported?  should be impossible the#// Unicode*ExtraField must contain some bad bytes#// TODO log this anywhere?#return#null#;#}#}#}#return#null#;#}##int#read#(#)#throws#IOException#{#if#(#remaining#--#<=#0#)#{#if#(#addDummyByte#)#{#addDummyByte#=#false#;#return#0#;#}#return#-#1#;#}#synchronized#(#archive#)#{#archive#.#seek#(#loc#++#)#;#return#archive#.#read#(#)#;#}#}##int#read#(#byte#[#]#b#,#int#off#,#int#len#)#throws#IOException#{#if#(#remaining#<=#0#)#{#if#(#addDummyByte#)#{#addDummyByte#=#false#;#b#[#off#]#=#0#;#return#1#;#}#return#-#1#;#}#if#(#len#<=#0#)#{#return#0#;#}#if#(#len#>#remaining#)#{#len#=#(#int#)#remaining#;#}#int#ret#=#-#1#;#synchronized#(#archive#)#{#archive#.#seek#(#loc#)#;#ret#=#archive#.#read#(#b#,#off#,#len#)#;#}#if#(#ret#>#0#)#{#loc#+=#ret#;#remaining#-=#ret#;#}#return#ret#;#}##void#addDummy#(#)#{#addDummyByte#=#true#;#}##