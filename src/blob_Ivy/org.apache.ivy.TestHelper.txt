DefaultArtifact#newArtifact#(#String#organisation#,#String#module#,#String#revision#,#String#artifact#,#String#type#,#String#ext#)#{#return#new#DefaultArtifact#(#ModuleRevisionId#.#newInstance#(#organisation#,#module#,#revision#)#,#new#Date#(#)#,#artifact#,#type#,#ext#)#;#}##File#getArchiveFileInCache#(#Ivy#ivy#,#String#mrid#,#String#artifactName#,#String#type#,#String#ext#)#{#DefaultArtifact#artifact#=#new#DefaultArtifact#(#ModuleRevisionId#.#parse#(#mrid#)#,#new#Date#(#)#,#artifactName#,#type#,#ext#)#;#return#getRepositoryCacheManager#(#ivy#,#artifact#.#getModuleRevisionId#(#)#)#.#getArchiveFileInCache#(#artifact#)#;#}##File#getArchiveFileInCache#(#Ivy#ivy#,#String#organisation#,#String#module#,#String#revision#,#String#artifactName#,#String#type#,#String#ext#)#{#DefaultArtifact#artifact#=#newArtifact#(#organisation#,#module#,#revision#,#artifactName#,#type#,#ext#)#;#return#getRepositoryCacheManager#(#ivy#,#artifact#.#getModuleRevisionId#(#)#)#.#getArchiveFileInCache#(#artifact#)#;#}##DefaultRepositoryCacheManager#getRepositoryCacheManager#(#Ivy#ivy#,#ModuleRevisionId#id#)#{#// WARN: this doesn't work if the resolver registered is a compound resolver (chain or dual)#// and a sub resolver doesn't use the same cache manager as the parent#return#(#DefaultRepositoryCacheManager#)#ivy#.#getSettings#(#)#.#getResolver#(#id#)#.#getRepositoryCacheManager#(#)#;#}##void#assertModuleRevisionIds#(#String#expectedMrids#,#Collection#/* <ModuleRevisionId> */#mrids#)#{#Collection#expected#=#parseMrids#(#expectedMrids#)#;#Assert#.#assertEquals#(#expected#,#mrids#)#;#}##Collection#parseMrids#(#String#mrids#)#{#String#[#]#m#=#mrids#.#split#(#",?\\s+"#)#;#Collection#c#=#new#LinkedHashSet#(#)#;#for#(#int#i#=#0#;#i#<#m#.#length#;#i#++#)#{#c#.#add#(#ModuleRevisionId#.#parse#(#m#[#i#]#)#)#;#}#return#c#;#}##ModuleRevisionId#[#]#parseMridsToArray#(#String#mrids#)#{#Collection#parsedMrids#=#parseMrids#(#mrids#)#;#return#(#ModuleRevisionId#[#]#)#parsedMrids#.#toArray#(#new#ModuleRevisionId#[#parsedMrids#.#size#(#)#]#)#;#}##ModuleDescriptor#parseMicroIvyDescriptor#(#String#microIvy#)#{#Pattern#mridPattern#=#ModuleRevisionId#.#NON_CAPTURING_PATTERN#;#Matcher#m#=#mridPattern#.#matcher#(#microIvy#)#;#if#(#m#.#matches#(#)#)#{#return#DefaultModuleDescriptor#.#newBasicInstance#(#ModuleRevisionId#.#parse#(#microIvy#)#,#new#Date#(#)#)#;#}#Pattern#oneDependencyPattern#=#Pattern#.#compile#(#"("#+#mridPattern#.#pattern#(#)#+#")\\s*->\\s*("#+#mridPattern#.#pattern#(#)#+#")"#)#;#m#=#oneDependencyPattern#.#matcher#(#microIvy#)#;#if#(#m#.#matches#(#)#)#{#DefaultModuleDescriptor#md#=#DefaultModuleDescriptor#.#newBasicInstance#(#ModuleRevisionId#.#parse#(#m#.#group#(#1#)#)#,#new#Date#(#)#)#;#md#.#addDependency#(#new#DefaultDependencyDescriptor#(#ModuleRevisionId#.#parse#(#m#.#group#(#2#)#)#,#false#)#)#;#return#md#;#}#String#p#=#"("#+#mridPattern#.#pattern#(#)#+#")\\s*->\\s*\\{\\s*((?:"#+#mridPattern#.#pattern#(#)#+#",?\\s+)*"#+#mridPattern#.#pattern#(#)#+#")?\\s*\\}"#;#Pattern#multipleDependenciesPattern#=#Pattern#.#compile#(#p#)#;#m#=#multipleDependenciesPattern#.#matcher#(#microIvy#)#;#if#(#m#.#matches#(#)#)#{#DefaultModuleDescriptor#md#=#DefaultModuleDescriptor#.#newBasicInstance#(#ModuleRevisionId#.#parse#(#m#.#group#(#1#)#)#,#new#Date#(#)#)#;#String#mrids#=#m#.#group#(#2#)#;#if#(#mrids#!=#null#)#{#Collection#depMrids#=#parseMrids#(#mrids#)#;#for#(#Iterator#iter#=#depMrids#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#ModuleRevisionId#dep#=#(#ModuleRevisionId#)#iter#.#next#(#)#;#md#.#addDependency#(#new#DefaultDependencyDescriptor#(#dep#,#false#)#)#;#}#}#return#md#;#}#throw#new#IllegalArgumentException#(#"invalid micro ivy format: "#+#microIvy#)#;#}##Collection#/*<ModuleDescriptor>*/#parseMicroIvyDescriptors#(#String#microIvy#)#{#String#[#]#mds#=#microIvy#.#split#(#"\\s*;;\\s*"#)#;#Collection#r#=#new#ArrayList#(#)#;#for#(#int#i#=#0#;#i#<#mds#.#length#;#i#++#)#{#r#.#add#(#parseMicroIvyDescriptor#(#mds#[#i#]#)#)#;#}#return#r#;#}##void#fillRepository#(#DependencyResolver#resolver#,#Collection#/*<ModuleDescriptor>*/#mds#)#throws#IOException#{#File#tmp#=#File#.#createTempFile#(#"ivy"#,#"tmp"#)#;#try#{#for#(#Iterator#iter#=#mds#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#boolean#overwrite#=#false#;#ModuleDescriptor#md#=#(#ModuleDescriptor#)#iter#.#next#(#)#;#resolver#.#beginPublishTransaction#(#md#.#getModuleRevisionId#(#)#,#overwrite#)#;#boolean#published#=#false#;#try#{#XmlModuleDescriptorWriter#.#write#(#md#,#tmp#)#;#resolver#.#publish#(#md#.#getMetadataArtifact#(#)#,#tmp#,#overwrite#)#;#tmp#.#delete#(#)#;#tmp#.#createNewFile#(#)#;#Artifact#[#]#artifacts#=#md#.#getAllArtifacts#(#)#;#for#(#int#i#=#0#;#i#<#artifacts#.#length#;#i#++#)#{#resolver#.#publish#(#artifacts#[#i#]#,#tmp#,#overwrite#)#;#}#resolver#.#commitPublishTransaction#(#)#;#published#=#true#;#}#finally#{#if#(#!#published#)#{#resolver#.#abortPublishTransaction#(#)#;#}#}#}#}#finally#{#tmp#.#delete#(#)#;#}#}##FileSystemResolver#newTestRepository#(#)#{#FileSystemResolver#testRepository#=#new#FileSystemResolver#(#)#;#testRepository#.#setName#(#"test"#)#;#String#testRepoDir#=#new#File#(#"build/test/test-repo"#)#.#getAbsolutePath#(#)#;#testRepository#.#addIvyPattern#(#testRepoDir#+#"/[organisation]/[module]/[revision]/[artifact].[ext]"#)#;#testRepository#.#addArtifactPattern#(#testRepoDir#+#"/[organisation]/[module]/[revision]/[artifact].[ext]"#)#;#return#testRepository#;#}##void#cleanTestRepository#(#)#{#FileUtil#.#forceDelete#(#new#File#(#"build/test/test-repo"#)#)#;#}##void#cleanTest#(#)#{#cleanTestRepository#(#)#;#FileUtil#.#forceDelete#(#new#File#(#"build/test/cache"#)#)#;#}##IvySettings#loadTestSettings#(#IvySettings#settings#)#{#settings#.#setDefaultCache#(#new#File#(#"build/test/cache"#)#)#;#settings#.#addResolver#(#newTestRepository#(#)#)#;#settings#.#setDefaultResolver#(#"test"#)#;#return#settings#;#}##ResolveData#newResolveData#(#IvySettings#settings#)#{#return#new#ResolveData#(#new#ResolveEngine#(#settings#,#new#EventManager#(#)#,#new#SortEngine#(#settings#)#)#,#newResolveOptions#(#settings#)#)#;#}##ResolveOptions#newResolveOptions#(#IvySettings#settings#)#{#return#new#ResolveOptions#(#)#;#}##