void#setUp#(#)#throws#Exception#{#strategy#=#WarnCircularDependencyStrategy#.#getInstance#(#)#;#resetLogger#(#)#;#}##void#resetLogger#(#)#{#mockMessageImpl#=#new#MockMessageLogger#(#)#;#Message#.#setDefaultLogger#(#mockMessageImpl#)#;#}##void#testLog#(#)#throws#Exception#{#strategy#.#handleCircularDependency#(#TestHelper#.#parseMridsToArray#(#"#A;1.0, #B;1.0"#)#)#;#mockMessageImpl#.#assertLogWarningContains#(#"circular dependency found: #A;1.0->#B;1.0"#)#;#}##void#testRemoveDuplicates#(#)#throws#Exception#{#strategy#.#handleCircularDependency#(#TestHelper#.#parseMridsToArray#(#"#A;1.1, #B;1.0"#)#)#;#strategy#.#handleCircularDependency#(#TestHelper#.#parseMridsToArray#(#"#A;1.1, #B;1.0"#)#)#;#// should only log the circular dependency once#assertEquals#(#1#,#mockMessageImpl#.#getLogs#(#)#.#size#(#)#)#;#}##void#testRemoveDuplicates2#(#)#throws#Exception#{#setResolveContext#(#"1"#)#;#resetLogger#(#)#;#strategy#.#handleCircularDependency#(#TestHelper#.#parseMridsToArray#(#"#A;1.1, #B;1.0"#)#)#;#strategy#.#handleCircularDependency#(#TestHelper#.#parseMridsToArray#(#"#A;1.1, #B;1.0"#)#)#;#// should only log the circular dependency once#assertEquals#(#1#,#mockMessageImpl#.#getLogs#(#)#.#size#(#)#)#;#setResolveContext#(#"2"#)#;#resetLogger#(#)#;#strategy#.#handleCircularDependency#(#TestHelper#.#parseMridsToArray#(#"#A;1.1, #B;1.0"#)#)#;#// should log the message#assertEquals#(#1#,#mockMessageImpl#.#getLogs#(#)#.#size#(#)#)#;#strategy#.#handleCircularDependency#(#TestHelper#.#parseMridsToArray#(#"#A;1.1, #B;1.0"#)#)#;#// should not log the message again#assertEquals#(#1#,#mockMessageImpl#.#getLogs#(#)#.#size#(#)#)#;#}##void#setResolveContext#(#String#resolveId#)#{#IvySettings#settings#=#new#IvySettings#(#)#;#IvyContext#.#getContext#(#)#.#setResolveData#(#new#ResolveData#(#new#ResolveEngine#(#settings#,#new#EventManager#(#)#,#new#SortEngine#(#settings#)#)#,#new#ResolveOptions#(#)#.#setResolveId#(#resolveId#)#)#)#;#}##