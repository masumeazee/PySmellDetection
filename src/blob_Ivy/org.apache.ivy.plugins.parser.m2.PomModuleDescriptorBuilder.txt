void#addMappingConfs#(#DefaultDependencyDescriptor#dd#,#boolean#isOptional#)#{#if#(#isOptional#)#{#dd#.#addDependencyConfiguration#(#"optional"#,#"compile(*)"#)#;#//dd.addDependencyConfiguration("optional", "provided(*)");#dd#.#addDependencyConfiguration#(#"optional"#,#"master(*)"#)#;#}#else#{#dd#.#addDependencyConfiguration#(#"compile"#,#"compile(*)"#)#;#//dd.addDependencyConfiguration("compile", "provided(*)");#dd#.#addDependencyConfiguration#(#"compile"#,#"master(*)"#)#;#dd#.#addDependencyConfiguration#(#"runtime"#,#"runtime(*)"#)#;#}#}##void#addMappingConfs#(#DefaultDependencyDescriptor#dd#,#boolean#isOptional#)#{#if#(#isOptional#)#{#dd#.#addDependencyConfiguration#(#"optional"#,#"compile(*)"#)#;#dd#.#addDependencyConfiguration#(#"optional"#,#"provided(*)"#)#;#dd#.#addDependencyConfiguration#(#"optional"#,#"runtime(*)"#)#;#dd#.#addDependencyConfiguration#(#"optional"#,#"master(*)"#)#;#}#else#{#dd#.#addDependencyConfiguration#(#"provided"#,#"compile(*)"#)#;#dd#.#addDependencyConfiguration#(#"provided"#,#"provided(*)"#)#;#dd#.#addDependencyConfiguration#(#"provided"#,#"runtime(*)"#)#;#dd#.#addDependencyConfiguration#(#"provided"#,#"master(*)"#)#;#}#}##void#addMappingConfs#(#DefaultDependencyDescriptor#dd#,#boolean#isOptional#)#{#if#(#isOptional#)#{#dd#.#addDependencyConfiguration#(#"optional"#,#"compile(*)"#)#;#dd#.#addDependencyConfiguration#(#"optional"#,#"provided(*)"#)#;#dd#.#addDependencyConfiguration#(#"optional"#,#"master(*)"#)#;#}#else#{#dd#.#addDependencyConfiguration#(#"runtime"#,#"compile(*)"#)#;#dd#.#addDependencyConfiguration#(#"runtime"#,#"runtime(*)"#)#;#dd#.#addDependencyConfiguration#(#"runtime"#,#"master(*)"#)#;#}#}##void#addMappingConfs#(#DefaultDependencyDescriptor#dd#,#boolean#isOptional#)#{#//optional doesn't make sense in the test scope#dd#.#addDependencyConfiguration#(#"test"#,#"runtime(*)"#)#;#dd#.#addDependencyConfiguration#(#"test"#,#"master(*)"#)#;#}##void#addMappingConfs#(#DefaultDependencyDescriptor#dd#,#boolean#isOptional#)#{#//optional doesn't make sense in the system scope#dd#.#addDependencyConfiguration#(#"system"#,#"master(*)"#)#;#}##ModuleDescriptor#getModuleDescriptor#(#)#{#return#ivyModuleDescriptor#;#}##void#setModuleRevId#(#String#groupId#,#String#artifactId#,#String#version#)#{#mrid#=#ModuleRevisionId#.#newInstance#(#groupId#,#artifactId#,#version#)#;#ivyModuleDescriptor#.#setModuleRevisionId#(#mrid#)#;#if#(#(#version#==#null#)#||#version#.#endsWith#(#"SNAPSHOT"#)#)#{#ivyModuleDescriptor#.#setStatus#(#"integration"#)#;#}#else#{#ivyModuleDescriptor#.#setStatus#(#"release"#)#;#}#}##void#setHomePage#(#String#homePage#)#{#ivyModuleDescriptor#.#setHomePage#(#homePage#)#;#}##void#setDescription#(#String#description#)#{#ivyModuleDescriptor#.#setDescription#(#description#)#;#}##void#setLicenses#(#License#[#]#licenses#)#{#for#(#int#i#=#0#;#i#<#licenses#.#length#;#i#++#)#{#ivyModuleDescriptor#.#addLicense#(#licenses#[#i#]#)#;#}#}##void#addMainArtifact#(#String#artifactId#,#String#packaging#)#{#String#ext#;#/*
         * TODO: we should make packaging to ext mapping configurable, since it's not possible to
         * cover all cases.
         */#if#(#"pom"#.#equals#(#packaging#)#)#{#// no artifact defined! Add the default artifact if it exist.#DependencyResolver#resolver#=#parserSettings#.#getResolver#(#mrid#)#;#if#(#resolver#!=#null#)#{#DefaultArtifact#artifact#=#new#DefaultArtifact#(#mrid#,#new#Date#(#)#,#artifactId#,#"jar"#,#"jar"#)#;#ArtifactOrigin#artifactOrigin#=#resolver#.#locate#(#artifact#)#;#if#(#!#ArtifactOrigin#.#isUnknown#(#artifactOrigin#)#)#{#mainArtifact#=#artifact#;#ivyModuleDescriptor#.#addArtifact#(#"master"#,#mainArtifact#)#;#}#}#return#;#}#else#if#(#JAR_PACKAGINGS#.#contains#(#packaging#)#)#{#ext#=#"jar"#;#}#else#{#ext#=#packaging#;#}#mainArtifact#=#new#DefaultArtifact#(#mrid#,#new#Date#(#)#,#artifactId#,#packaging#,#ext#)#;#ivyModuleDescriptor#.#addArtifact#(#"master"#,#mainArtifact#)#;#}##void#addDependency#(#Resource#res#,#PomDependencyData#dep#)#{#String#scope#=#dep#.#getScope#(#)#;#if#(#(#scope#!=#null#)#&&#(#scope#.#length#(#)#>#0#)#&&#!#MAVEN2_CONF_MAPPING#.#containsKey#(#scope#)#)#{#// unknown scope, defaulting to 'compile'#scope#=#"compile"#;#}#String#version#=#dep#.#getVersion#(#)#;#version#=#(#version#==#null#||#version#.#length#(#)#==#0#)#?#getDefaultVersion#(#dep#)#:#version#;#ModuleRevisionId#moduleRevId#=#ModuleRevisionId#.#newInstance#(#dep#.#getGroupId#(#)#,#dep#.#getArtifactId#(#)#,#version#)#;#DefaultDependencyDescriptor#dd#=#new#DefaultDependencyDescriptor#(#ivyModuleDescriptor#,#moduleRevId#,#true#,#false#,#true#)#;#scope#=#(#scope#==#null#||#scope#.#length#(#)#==#0#)#?#getDefaultScope#(#dep#)#:#scope#;#ConfMapper#mapping#=#(#ConfMapper#)#MAVEN2_CONF_MAPPING#.#get#(#scope#)#;#mapping#.#addMappingConfs#(#dd#,#dep#.#isOptional#(#)#)#;#Map#extraAtt#=#new#HashMap#(#)#;#if#(#(#dep#.#getClassifier#(#)#!=#null#)#||#(#dep#.#getType#(#)#!=#null#)#)#{#String#type#=#"jar"#;#if#(#dep#.#getType#(#)#!=#null#)#{#type#=#dep#.#getType#(#)#;#}#String#ext#=#type#;#// if type is 'test-jar', the extension is 'jar' and the classifier is 'tests'#// Cfr. http://maven.apache.org/guides/mini/guide-attached-tests.html#if#(#"test-jar"#.#equals#(#type#)#)#{#ext#=#"jar"#;#extraAtt#.#put#(#"m:classifier"#,#"tests"#)#;#}#else#if#(#JAR_PACKAGINGS#.#contains#(#type#)#)#{#ext#=#"jar"#;#}#// we deal with classifiers by setting an extra attribute and forcing the#// dependency to assume such an artifact is published#if#(#dep#.#getClassifier#(#)#!=#null#)#{#extraAtt#.#put#(#"m:classifier"#,#dep#.#getClassifier#(#)#)#;#}#DefaultDependencyArtifactDescriptor#depArtifact#=#new#DefaultDependencyArtifactDescriptor#(#dd#,#dd#.#getDependencyId#(#)#.#getName#(#)#,#type#,#ext#,#null#,#extraAtt#)#;#// here we have to assume a type and ext for the artifact, so this is a limitation#// compared to how m2 behave with classifiers#String#optionalizedScope#=#dep#.#isOptional#(#)#?#"optional"#:#scope#;#dd#.#addDependencyArtifact#(#optionalizedScope#,#depArtifact#)#;#}#// experimentation shows the following, excluded modules are#// inherited from parent POMs if either of the following is true:#// the <exclusions> element is missing or the <exclusions> element#// is present, but empty.#List#/*<ModuleId>*/#excluded#=#dep#.#getExcludedModules#(#)#;#if#(#excluded#.#isEmpty#(#)#)#{#excluded#=#getDependencyMgtExclusions#(#ivyModuleDescriptor#,#dep#.#getGroupId#(#)#,#dep#.#getArtifactId#(#)#)#;#}#for#(#Iterator#itExcl#=#excluded#.#iterator#(#)#;#itExcl#.#hasNext#(#)#;#)#{#ModuleId#excludedModule#=#(#ModuleId#)#itExcl#.#next#(#)#;#String#[#]#confs#=#dd#.#getModuleConfigurations#(#)#;#for#(#int#k#=#0#;#k#<#confs#.#length#;#k#++#)#{#dd#.#addExcludeRule#(#confs#[#k#]#,#new#DefaultExcludeRule#(#new#ArtifactId#(#excludedModule#,#PatternMatcher#.#ANY_EXPRESSION#,#PatternMatcher#.#ANY_EXPRESSION#,#PatternMatcher#.#ANY_EXPRESSION#)#,#ExactPatternMatcher#.#INSTANCE#,#null#)#)#;#}#}#ivyModuleDescriptor#.#addDependency#(#dd#)#;#}##void#addDependency#(#DependencyDescriptor#descriptor#)#{#ivyModuleDescriptor#.#addDependency#(#descriptor#)#;#}##void#addDependencyMgt#(#PomDependencyMgt#dep#)#{#String#key#=#getDependencyMgtExtraInfoKeyForVersion#(#dep#.#getGroupId#(#)#,#dep#.#getArtifactId#(#)#)#;#ivyModuleDescriptor#.#addExtraInfo#(#key#,#dep#.#getVersion#(#)#)#;#if#(#dep#.#getScope#(#)#!=#null#)#{#String#scopeKey#=#getDependencyMgtExtraInfoKeyForScope#(#dep#.#getGroupId#(#)#,#dep#.#getArtifactId#(#)#)#;#ivyModuleDescriptor#.#addExtraInfo#(#scopeKey#,#dep#.#getScope#(#)#)#;#}#if#(#!#dep#.#getExcludedModules#(#)#.#isEmpty#(#)#)#{#final#String#exclusionPrefix#=#getDependencyMgtExtraInfoPrefixForExclusion#(#dep#.#getGroupId#(#)#,#dep#.#getArtifactId#(#)#)#;#int#index#=#0#;#for#(#final#Iterator#iter#=#dep#.#getExcludedModules#(#)#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#final#ModuleId#excludedModule#=#(#ModuleId#)#iter#.#next#(#)#;#ivyModuleDescriptor#.#addExtraInfo#(#exclusionPrefix#+#index#,#excludedModule#.#getOrganisation#(#)#+#EXTRA_INFO_DELIMITER#+#excludedModule#.#getName#(#)#)#;#index#+=#1#;#}#}#// dependency management info is also used for version mediation of transitive dependencies#ivyModuleDescriptor#.#addDependencyDescriptorMediator#(#ModuleId#.#newInstance#(#dep#.#getGroupId#(#)#,#dep#.#getArtifactId#(#)#)#,#ExactPatternMatcher#.#INSTANCE#,#new#OverrideDependencyDescriptorMediator#(#null#,#dep#.#getVersion#(#)#)#)#;#}##void#addPlugin#(#PomDependencyMgt#plugin#)#{#String#pluginValue#=#plugin#.#getGroupId#(#)#+#EXTRA_INFO_DELIMITER#+#plugin#.#getArtifactId#(#)#+#EXTRA_INFO_DELIMITER#+#plugin#.#getVersion#(#)#;#String#pluginExtraInfo#=#(#String#)#ivyModuleDescriptor#.#getExtraInfo#(#)#.#get#(#"m:maven.plugins"#)#;#if#(#pluginExtraInfo#==#null#)#{#pluginExtraInfo#=#pluginValue#;#}#else#{#pluginExtraInfo#=#pluginExtraInfo#+#"|"#+#pluginValue#;#}#ivyModuleDescriptor#.#getExtraInfo#(#)#.#put#(#"m:maven.plugins"#,#pluginExtraInfo#)#;#}##List#/*<PomDependencyMgt>*/#getPlugins#(#ModuleDescriptor#md#)#{#List#result#=#new#ArrayList#(#)#;#String#plugins#=#(#String#)#md#.#getExtraInfo#(#)#.#get#(#"m:maven.plugins"#)#;#if#(#plugins#==#null#)#{#return#new#ArrayList#(#)#;#}#String#[#]#pluginsArray#=#plugins#.#split#(#"\\|"#)#;#for#(#int#i#=#0#;#i#<#pluginsArray#.#length#;#i#++#)#{#String#[#]#parts#=#pluginsArray#[#i#]#.#split#(#EXTRA_INFO_DELIMITER#)#;#result#.#add#(#new#PomPluginElement#(#parts#[#0#]#,#parts#[#1#]#,#parts#[#2#]#)#)#;#}#return#result#;#}##String#getGroupId#(#)#{#return#groupId#;#}##String#getArtifactId#(#)#{#return#artifactId#;#}##String#getVersion#(#)#{#return#version#;#}##String#getScope#(#)#{#return#null#;#}##List#/*<ModuleId>*/#getExcludedModules#(#)#{#return#Collections#.#EMPTY_LIST#;#// probably not used?#}##String#getDefaultVersion#(#PomDependencyData#dep#)#{#String#key#=#getDependencyMgtExtraInfoKeyForVersion#(#dep#.#getGroupId#(#)#,#dep#.#getArtifactId#(#)#)#;#return#(#String#)#ivyModuleDescriptor#.#getExtraInfo#(#)#.#get#(#key#)#;#}##String#getDefaultScope#(#PomDependencyData#dep#)#{#String#key#=#getDependencyMgtExtraInfoKeyForScope#(#dep#.#getGroupId#(#)#,#dep#.#getArtifactId#(#)#)#;#String#result#=#(#String#)#ivyModuleDescriptor#.#getExtraInfo#(#)#.#get#(#key#)#;#if#(#(#result#==#null#)#||#!#MAVEN2_CONF_MAPPING#.#containsKey#(#result#)#)#{#result#=#"compile"#;#}#return#result#;#}##String#getDependencyMgtExtraInfoKeyForVersion#(#String#groupId#,#String#artifaceId#)#{#return#DEPENDENCY_MANAGEMENT#+#EXTRA_INFO_DELIMITER#+#groupId#+#EXTRA_INFO_DELIMITER#+#artifaceId#+#EXTRA_INFO_DELIMITER#+#"version"#;#}##String#getDependencyMgtExtraInfoKeyForScope#(#String#groupId#,#String#artifaceId#)#{#return#DEPENDENCY_MANAGEMENT#+#EXTRA_INFO_DELIMITER#+#groupId#+#EXTRA_INFO_DELIMITER#+#artifaceId#+#EXTRA_INFO_DELIMITER#+#"scope"#;#}##String#getPropertyExtraInfoKey#(#String#propertyName#)#{#return#PROPERTIES#+#EXTRA_INFO_DELIMITER#+#propertyName#;#}##String#getDependencyMgtExtraInfoPrefixForExclusion#(#String#groupId#,#String#artifaceId#)#{#return#DEPENDENCY_MANAGEMENT#+#EXTRA_INFO_DELIMITER#+#groupId#+#EXTRA_INFO_DELIMITER#+#artifaceId#+#EXTRA_INFO_DELIMITER#+#"exclusion_"#;#}##List#/*<ModuleId>*/#getDependencyMgtExclusions#(#final#ModuleDescriptor#descriptor#,#final#String#groupId#,#final#String#artifactId#)#{#final#String#exclusionPrefix#=#getDependencyMgtExtraInfoPrefixForExclusion#(#groupId#,#artifactId#)#;#final#List#/*<ModuleId>*/#exclusionIds#=#new#LinkedList#/*<ModuleId>*/#(#)#;#final#Map#/*<String,String>*/#extras#=#descriptor#.#getExtraInfo#(#)#;#for#(#final#Iterator#entIter#=#extras#.#entrySet#(#)#.#iterator#(#)#;#entIter#.#hasNext#(#)#;#)#{#final#Map#.#Entry#/*<String,String>*/#ent#=#(#Map#.#Entry#)#entIter#.#next#(#)#;#final#String#key#=#(#String#)#ent#.#getKey#(#)#;#if#(#key#.#startsWith#(#exclusionPrefix#)#)#{#final#String#full_exclusion#=#(#String#)#ent#.#getValue#(#)#;#final#String#[#]#exclusion_parts#=#full_exclusion#.#split#(#EXTRA_INFO_DELIMITER#)#;#if#(#exclusion_parts#.#length#!=#2#)#{#Message#.#error#(#"what seemed to be a dependency management extra info exclusion "#+#"had the wrong number of parts (should have 2) "#+#exclusion_parts#.#length#+#" : "#+#full_exclusion#)#;#continue#;#}#exclusionIds#.#add#(#ModuleId#.#newInstance#(#exclusion_parts#[#0#]#,#exclusion_parts#[#1#]#)#)#;#}#}#return#exclusionIds#;#}##Map#/*<ModuleId, String version>*/#getDependencyManagementMap#(#ModuleDescriptor#md#)#{#Map#ret#=#new#LinkedHashMap#(#)#;#for#(#Iterator#iterator#=#md#.#getExtraInfo#(#)#.#entrySet#(#)#.#iterator#(#)#;#iterator#.#hasNext#(#)#;#)#{#Map#.#Entry#entry#=#(#Map#.#Entry#)#iterator#.#next#(#)#;#String#key#=#(#String#)#entry#.#getKey#(#)#;#if#(#(#key#)#.#startsWith#(#DEPENDENCY_MANAGEMENT#)#)#{#String#[#]#parts#=#key#.#split#(#EXTRA_INFO_DELIMITER#)#;#if#(#parts#.#length#!=#DEPENDENCY_MANAGEMENT_KEY_PARTS_COUNT#)#{#Message#.#warn#(#"what seem to be a dependency management extra info "#+#"doesn't match expected pattern: "#+#key#)#;#}#else#{#ret#.#put#(#ModuleId#.#newInstance#(#parts#[#1#]#,#parts#[#2#]#)#,#entry#.#getValue#(#)#)#;#}#}#}#return#ret#;#}##List#getDependencyManagements#(#ModuleDescriptor#md#)#{#List#result#=#new#ArrayList#(#)#;#for#(#Iterator#iterator#=#md#.#getExtraInfo#(#)#.#entrySet#(#)#.#iterator#(#)#;#iterator#.#hasNext#(#)#;#)#{#Map#.#Entry#entry#=#(#Map#.#Entry#)#iterator#.#next#(#)#;#String#key#=#(#String#)#entry#.#getKey#(#)#;#if#(#(#key#)#.#startsWith#(#DEPENDENCY_MANAGEMENT#)#)#{#String#[#]#parts#=#key#.#split#(#EXTRA_INFO_DELIMITER#)#;#if#(#parts#.#length#!=#DEPENDENCY_MANAGEMENT_KEY_PARTS_COUNT#)#{#Message#.#warn#(#"what seem to be a dependency management extra info "#+#"doesn't match expected pattern: "#+#key#)#;#}#else#{#String#versionKey#=#DEPENDENCY_MANAGEMENT#+#EXTRA_INFO_DELIMITER#+#parts#[#1#]#+#EXTRA_INFO_DELIMITER#+#parts#[#2#]#+#EXTRA_INFO_DELIMITER#+#"version"#;#String#scopeKey#=#DEPENDENCY_MANAGEMENT#+#EXTRA_INFO_DELIMITER#+#parts#[#1#]#+#EXTRA_INFO_DELIMITER#+#parts#[#2#]#+#EXTRA_INFO_DELIMITER#+#"scope"#;#String#version#=#(#String#)#md#.#getExtraInfo#(#)#.#get#(#versionKey#)#;#String#scope#=#(#String#)#md#.#getExtraInfo#(#)#.#get#(#scopeKey#)#;#List#/*<ModuleId>*/#exclusions#=#getDependencyMgtExclusions#(#md#,#parts#[#1#]#,#parts#[#2#]#)#;#result#.#add#(#new#DefaultPomDependencyMgt#(#parts#[#1#]#,#parts#[#2#]#,#version#,#scope#,#exclusions#)#)#;#}#}#}#return#result#;#}##void#addExtraInfos#(#Map#extraAttributes#)#{#for#(#Iterator#it#=#extraAttributes#.#entrySet#(#)#.#iterator#(#)#;#it#.#hasNext#(#)#;#)#{#Map#.#Entry#entry#=#(#Entry#)#it#.#next#(#)#;#String#key#=#(#String#)#entry#.#getKey#(#)#;#String#value#=#(#String#)#entry#.#getValue#(#)#;#addExtraInfo#(#key#,#value#)#;#}#}##void#addExtraInfo#(#String#key#,#String#value#)#{#if#(#!#ivyModuleDescriptor#.#getExtraInfo#(#)#.#containsKey#(#key#)#)#{#ivyModuleDescriptor#.#addExtraInfo#(#key#,#value#)#;#}#}##Map#extractPomProperties#(#Map#extraInfo#)#{#Map#r#=#new#HashMap#(#)#;#for#(#Iterator#it#=#extraInfo#.#entrySet#(#)#.#iterator#(#)#;#it#.#hasNext#(#)#;#)#{#Map#.#Entry#extraInfoEntry#=#(#Map#.#Entry#)#it#.#next#(#)#;#if#(#(#(#String#)#extraInfoEntry#.#getKey#(#)#)#.#startsWith#(#PROPERTIES#)#)#{#String#prop#=#(#(#String#)#extraInfoEntry#.#getKey#(#)#)#.#substring#(#PROPERTIES#.#length#(#)#+#EXTRA_INFO_DELIMITER#.#length#(#)#)#;#r#.#put#(#prop#,#extraInfoEntry#.#getValue#(#)#)#;#}#}#return#r#;#}##void#addProperty#(#String#propertyName#,#String#value#)#{#addExtraInfo#(#getPropertyExtraInfoKey#(#propertyName#)#,#value#)#;#}##Artifact#getMainArtifact#(#)#{#return#mainArtifact#;#}##Artifact#getSourceArtifact#(#)#{#return#new#MDArtifact#(#ivyModuleDescriptor#,#mrid#.#getName#(#)#,#"source"#,#"jar"#,#null#,#Collections#.#singletonMap#(#"m:classifier"#,#"sources"#)#)#;#}##Artifact#getJavadocArtifact#(#)#{#return#new#MDArtifact#(#ivyModuleDescriptor#,#mrid#.#getName#(#)#,#"javadoc"#,#"jar"#,#null#,#Collections#.#singletonMap#(#"m:classifier"#,#"javadoc"#)#)#;#}##void#addSourceArtifact#(#)#{#ivyModuleDescriptor#.#addArtifact#(#"sources"#,#getSourceArtifact#(#)#)#;#}##void#addJavadocArtifact#(#)#{#ivyModuleDescriptor#.#addArtifact#(#"javadoc"#,#getJavadocArtifact#(#)#)#;#}##