void#setUp#(#)#throws#Exception#{#helper#=#new#VfsTestHelper#(#)#;#}##void#tearDown#(#)#{#helper#=#null#;#}##void#testCreateResourceThatExists#(#)#throws#Exception#{#Iterator#vfsURIs#=#helper#.#createVFSUriSet#(#VfsTestHelper#.#TEST_IVY_XML#)#.#iterator#(#)#;#while#(#vfsURIs#.#hasNext#(#)#)#{#VfsURI#vfsURI#=#(#VfsURI#)#vfsURIs#.#next#(#)#;#String#resId#=#vfsURI#.#toString#(#)#;#VfsResource#res#=#new#VfsResource#(#resId#,#helper#.#fsManager#)#;#if#(#res#==#null#)#{#fail#(#"Unexpected null value on VFS URI: "#+#resId#)#;#}#if#(#!#res#.#exists#(#)#)#{#fail#(#"Resource does not exist and it should: "#+#resId#)#;#}#// VFS apparently does some weird normalization so that resource id used to create#// the VFS resource is not necessarily identical to the id returned from the getName#// method <sigh>. We try to work around this by transforming things into java URIs.#if#(#!#new#URI#(#escapeUrl#(#resId#)#)#.#equals#(#new#URI#(#escapeUrl#(#res#.#getName#(#)#)#)#.#normalize#(#)#)#)#{#fail#(#"Failed on getName. Expected: "#+#resId#+#". Actual: "#+#res#.#getName#(#)#)#;#}#if#(#res#.#getLastModified#(#)#==#0#)#{#fail#(#"Expected non-null file modification date for URI: "#+#resId#)#;#}#if#(#res#.#getContentLength#(#)#==#0#)#{#fail#(#"Expected non-zero file length for URI: "#+#resId#)#;#}#if#(#!#res#.#physicallyExists#(#)#)#{#fail#(#"Physical existence check returned false for existing resource: "#+#resId#)#;#}#}#}##String#escapeUrl#(#String#queryString#)#{#queryString#=#StringUtils#.#replace#(#queryString#,#" "#,#"%20"#)#;#queryString#=#StringUtils#.#replace#(#queryString#,#"\""#,#"%22"#)#;#queryString#=#StringUtils#.#replace#(#queryString#,#"%"#,#"%26"#)#;#queryString#=#StringUtils#.#replace#(#queryString#,#"="#,#"%3D"#)#;#queryString#=#StringUtils#.#replace#(#queryString#,#"/"#,#"%2F"#)#;#queryString#=#StringUtils#.#replace#(#queryString#,#"+"#,#"%2B"#)#;#queryString#=#StringUtils#.#replace#(#queryString#,#"&"#,#"%26"#)#;#queryString#=#StringUtils#.#replace#(#queryString#,#"~"#,#"%7E"#)#;#queryString#=#StringUtils#.#replace#(#queryString#,#"?"#,#"%3F"#)#;#return#queryString#;#}##void#testCreateResourceThatDoesntExist#(#)#throws#Exception#{#Iterator#vfsURIs#=#helper#.#createVFSUriSet#(#"zzyyxx.zzyyxx"#)#.#iterator#(#)#;#while#(#vfsURIs#.#hasNext#(#)#)#{#VfsURI#vfsURI#=#(#VfsURI#)#vfsURIs#.#next#(#)#;#String#resId#=#vfsURI#.#toString#(#)#;#VfsResource#res#=#new#VfsResource#(#resId#,#helper#.#fsManager#)#;#if#(#res#==#null#)#{#fail#(#"Unexpected null value on VFS URI: "#+#resId#)#;#}#if#(#res#.#exists#(#)#)#{#fail#(#"Resource does not exist and it shouldn't: "#+#resId#)#;#}#// VFS apparently does some weird normalization so that resource id used to create#// the VFS resource is not necessarily identical to the id returned from the getName#// method <sigh>. We try to work around this by transforming things into java URIs.#if#(#!#new#URI#(#escapeUrl#(#resId#)#)#.#equals#(#new#URI#(#escapeUrl#(#res#.#getName#(#)#)#)#.#normalize#(#)#)#)#{#fail#(#"Failed on getName. Expected: "#+#resId#+#". Actual: "#+#res#.#getName#(#)#)#;#}#if#(#res#.#getLastModified#(#)#!=#0#)#{#fail#(#"Expected null file modification date for URI: "#+#resId#+#": "#+#res#.#getLastModified#(#)#)#;#}#if#(#res#.#getContentLength#(#)#!=#0#)#{#fail#(#"Expected non-zero file length for URI: "#+#resId#)#;#}#if#(#res#.#physicallyExists#(#)#)#{#fail#(#"Physical existence check returned true for non-existent resource: "#+#resId#)#;#}#}#}##void#testBadURI#(#)#throws#Exception#{#String#vfsURI#=#"smb1:/goobeldygook"#;#VfsResource#res#=#new#VfsResource#(#vfsURI#,#helper#.#fsManager#)#;#if#(#res#==#null#)#{#fail#(#"Unexpected null value on VFS URI: "#+#vfsURI#)#;#}#if#(#res#.#exists#(#)#)#{#fail#(#"Resource is marked as existing and it should not: "#+#vfsURI#)#;#}#if#(#!#res#.#getName#(#)#.#equals#(#"smb1:/goobeldygook"#)#)#{#fail#(#"Failed on getName. Expected: "#+#vfsURI#+#". Actual: "#+#res#.#getName#(#)#)#;#}#if#(#res#.#getLastModified#(#)#!=#0#)#{#fail#(#"Expected null file modification date for URI: "#+#vfsURI#+#": "#+#res#.#getLastModified#(#)#)#;#}#if#(#res#.#getContentLength#(#)#!=#0#)#{#fail#(#"Expected zero file length for URI: "#+#vfsURI#)#;#}#if#(#res#.#physicallyExists#(#)#)#{#fail#(#"Physical existence check returned false for existing resource: "#+#vfsURI#)#;#}#}##void#testListFolderChildren#(#)#throws#Exception#{#final#String#testFolder#=#"2/mod10.1"#;#final#List#expectedFiles#=#Arrays#.#asList#(#new#String#[#]#{#"ivy-1.0.xml"#,#"ivy-1.1.xml"#,#"ivy-1.2.xml"#,#"ivy-1.3.xml"#}#)#;#Iterator#baseVfsURIs#=#helper#.#createVFSUriSet#(#testFolder#)#.#iterator#(#)#;#while#(#baseVfsURIs#.#hasNext#(#)#)#{#VfsURI#baseVfsURI#=#(#VfsURI#)#baseVfsURIs#.#next#(#)#;#List#expected#=#new#ArrayList#(#)#;#for#(#int#i#=#0#;#i#<#expectedFiles#.#size#(#)#;#i#++#)#{#String#resId#=#baseVfsURI#.#toString#(#)#+#"/"#+#expectedFiles#.#get#(#i#)#;#expected#.#add#(#resId#)#;#}#List#actual#=#new#ArrayList#(#)#;#VfsResource#res#=#new#VfsResource#(#baseVfsURI#.#toString#(#)#,#helper#.#fsManager#)#;#Iterator#children#=#res#.#getChildren#(#)#.#iterator#(#)#;#while#(#children#.#hasNext#(#)#)#{#String#resId#=#(#String#)#children#.#next#(#)#;#// remove entries ending in .svn#if#(#!#resId#.#endsWith#(#".svn"#)#)#{#actual#.#add#(#resId#)#;#}#}#Collections#.#sort#(#actual#)#;#Collections#.#sort#(#expected#)#;#if#(#!#actual#.#equals#(#expected#)#)#{#fail#(#"\nExpected: "#+#expected#.#toString#(#)#+#"\n.Actual: "#+#actual#.#toString#(#)#)#;#}#}#}##void#testListFileChildren#(#)#throws#Exception#{#Iterator#testSet#=#helper#.#createVFSUriSet#(#VfsTestHelper#.#TEST_IVY_XML#)#.#iterator#(#)#;#while#(#testSet#.#hasNext#(#)#)#{#VfsURI#vfsURI#=#(#VfsURI#)#testSet#.#next#(#)#;#VfsResource#res#=#new#VfsResource#(#vfsURI#.#toString#(#)#,#helper#.#fsManager#)#;#List#results#=#res#.#getChildren#(#)#;#if#(#results#.#size#(#)#>#0#)#{#fail#(#"getChildren query on file provided results when it shouldn't have"#)#;#}#}#}##void#testListImaginary#(#)#throws#Exception#{#Iterator#testSet#=#helper#.#createVFSUriSet#(#"idontexistzzxx"#)#.#iterator#(#)#;#while#(#testSet#.#hasNext#(#)#)#{#VfsURI#vfsURI#=#(#VfsURI#)#testSet#.#next#(#)#;#VfsResource#res#=#new#VfsResource#(#vfsURI#.#toString#(#)#,#helper#.#fsManager#)#;#List#results#=#res#.#getChildren#(#)#;#if#(#results#.#size#(#)#>#0#)#{#fail#(#"getChildren query on file provided results when it shouldn't have"#)#;#}#}#}##