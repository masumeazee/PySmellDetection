Repository#getRepository#(#)#{#return#repository#;#}##void#setRepository#(#Repository#repository#)#{#this#.#repository#=#repository#;#}##void#setName#(#String#name#)#{#super#.#setName#(#name#)#;#if#(#repository#instanceof#AbstractRepository#)#{#(#(#AbstractRepository#)#repository#)#.#setName#(#name#)#;#}#}##ResolvedResource#findResourceUsingPattern#(#ModuleRevisionId#mrid#,#String#pattern#,#Artifact#artifact#,#ResourceMDParser#rmdparser#,#Date#date#)#{#String#name#=#getName#(#)#;#VersionMatcher#versionMatcher#=#getSettings#(#)#.#getVersionMatcher#(#)#;#try#{#if#(#!#versionMatcher#.#isDynamic#(#mrid#)#||#isAlwaysCheckExactRevision#(#)#)#{#String#resourceName#=#IvyPatternHelper#.#substitute#(#pattern#,#mrid#,#artifact#)#;#Message#.#debug#(#"\t trying "#+#resourceName#)#;#logAttempt#(#resourceName#)#;#Resource#res#=#repository#.#getResource#(#resourceName#)#;#boolean#reachable#=#res#.#exists#(#)#;#if#(#reachable#)#{#String#revision#;#if#(#pattern#.#indexOf#(#IvyPatternHelper#.#REVISION_KEY#)#==#-#1#)#{#if#(#"ivy"#.#equals#(#artifact#.#getType#(#)#)#||#"pom"#.#equals#(#artifact#.#getType#(#)#)#)#{#// we can't determine the revision from the pattern, get it#// from the moduledescriptor itself#File#temp#=#File#.#createTempFile#(#"ivy"#,#artifact#.#getExt#(#)#)#;#temp#.#deleteOnExit#(#)#;#repository#.#get#(#res#.#getName#(#)#,#temp#)#;#ModuleDescriptorParser#parser#=#ModuleDescriptorParserRegistry#.#getInstance#(#)#.#getParser#(#res#)#;#ModuleDescriptor#md#=#parser#.#parseDescriptor#(#getSettings#(#)#,#temp#.#toURI#(#)#.#toURL#(#)#,#res#,#false#)#;#revision#=#md#.#getRevision#(#)#;#if#(#(#revision#==#null#)#||#(#revision#.#length#(#)#==#0#)#)#{#revision#=#"working@"#+#name#;#}#}#else#{#revision#=#"working@"#+#name#;#}#}#else#{#revision#=#mrid#.#getRevision#(#)#;#}#return#new#ResolvedResource#(#res#,#revision#)#;#}#else#if#(#versionMatcher#.#isDynamic#(#mrid#)#)#{#return#findDynamicResourceUsingPattern#(#rmdparser#,#mrid#,#pattern#,#artifact#,#date#)#;#}#else#{#Message#.#debug#(#"\t"#+#name#+#": resource not reachable for "#+#mrid#+#": res="#+#res#)#;#return#null#;#}#}#else#{#return#findDynamicResourceUsingPattern#(#rmdparser#,#mrid#,#pattern#,#artifact#,#date#)#;#}#}#catch#(#IOException#ex#)#{#throw#new#RuntimeException#(#name#+#": unable to get resource for "#+#mrid#+#": res="#+#IvyPatternHelper#.#substitute#(#pattern#,#mrid#,#artifact#)#+#": "#+#ex#,#ex#)#;#}#catch#(#ParseException#ex#)#{#throw#new#RuntimeException#(#name#+#": unable to get resource for "#+#mrid#+#": res="#+#IvyPatternHelper#.#substitute#(#pattern#,#mrid#,#artifact#)#+#": "#+#ex#,#ex#)#;#}#}##ResolvedResource#findDynamicResourceUsingPattern#(#ResourceMDParser#rmdparser#,#ModuleRevisionId#mrid#,#String#pattern#,#Artifact#artifact#,#Date#date#)#{#String#name#=#getName#(#)#;#logAttempt#(#IvyPatternHelper#.#substitute#(#pattern#,#ModuleRevisionId#.#newInstance#(#mrid#,#IvyPatternHelper#.#getTokenString#(#IvyPatternHelper#.#REVISION_KEY#)#)#,#artifact#)#)#;#ResolvedResource#[#]#rress#=#listResources#(#repository#,#mrid#,#pattern#,#artifact#)#;#if#(#rress#==#null#)#{#Message#.#debug#(#"\t"#+#name#+#": unable to list resources for "#+#mrid#+#": pattern="#+#pattern#)#;#return#null#;#}#else#{#ResolvedResource#found#=#findResource#(#rress#,#rmdparser#,#mrid#,#date#)#;#if#(#found#==#null#)#{#Message#.#debug#(#"\t"#+#name#+#": no resource found for "#+#mrid#+#": pattern="#+#pattern#)#;#}#return#found#;#}#}##Resource#getResource#(#String#source#)#throws#IOException#{#return#repository#.#getResource#(#source#)#;#}##ResolvedResource#[#]#listResources#(#Repository#repository#,#ModuleRevisionId#mrid#,#String#pattern#,#Artifact#artifact#)#{#return#ResolverHelper#.#findAll#(#repository#,#mrid#,#pattern#,#artifact#)#;#}##long#get#(#Resource#resource#,#File#dest#)#throws#IOException#{#Message#.#verbose#(#"\t"#+#getName#(#)#+#": downloading "#+#resource#.#getName#(#)#)#;#Message#.#debug#(#"\t\tto "#+#dest#)#;#if#(#dest#.#getParentFile#(#)#!=#null#)#{#dest#.#getParentFile#(#)#.#mkdirs#(#)#;#}#repository#.#get#(#resource#.#getName#(#)#,#dest#)#;#return#dest#.#length#(#)#;#}##void#publish#(#Artifact#artifact#,#File#src#,#boolean#overwrite#)#throws#IOException#{#String#destPattern#;#if#(#"ivy"#.#equals#(#artifact#.#getType#(#)#)#&&#!#getIvyPatterns#(#)#.#isEmpty#(#)#)#{#destPattern#=#(#String#)#getIvyPatterns#(#)#.#get#(#0#)#;#}#else#if#(#!#getArtifactPatterns#(#)#.#isEmpty#(#)#)#{#destPattern#=#(#String#)#getArtifactPatterns#(#)#.#get#(#0#)#;#}#else#{#throw#new#IllegalStateException#(#"impossible to publish "#+#artifact#+#" using "#+#this#+#": no artifact pattern defined"#)#;#}#// Check for m2 compatibility#ModuleRevisionId#mrid#=#artifact#.#getModuleRevisionId#(#)#;#if#(#isM2compatible#(#)#)#{#mrid#=#convertM2IdForResourceSearch#(#mrid#)#;#}#String#dest#=#getDestination#(#destPattern#,#artifact#,#mrid#)#;#put#(#artifact#,#src#,#dest#,#overwrite#)#;#Message#.#info#(#"\tpublished "#+#artifact#.#getName#(#)#+#" to "#+#hidePassword#(#dest#)#)#;#}##String#getDestination#(#String#pattern#,#Artifact#artifact#,#ModuleRevisionId#mrid#)#{#return#IvyPatternHelper#.#substitute#(#pattern#,#mrid#,#artifact#)#;#}##void#put#(#Artifact#artifact#,#File#src#,#String#dest#,#boolean#overwrite#)#throws#IOException#{#// verify the checksum algorithms before uploading artifacts!#String#[#]#checksums#=#getChecksumAlgorithms#(#)#;#for#(#int#i#=#0#;#i#<#checksums#.#length#;#i#++#)#{#if#(#!#ChecksumHelper#.#isKnownAlgorithm#(#checksums#[#i#]#)#)#{#throw#new#IllegalArgumentException#(#"Unknown checksum algorithm: "#+#checksums#[#i#]#)#;#}#}#repository#.#put#(#artifact#,#src#,#dest#,#overwrite#)#;#for#(#int#i#=#0#;#i#<#checksums#.#length#;#i#++#)#{#putChecksum#(#artifact#,#src#,#dest#,#overwrite#,#checksums#[#i#]#)#;#}#}##void#putChecksum#(#Artifact#artifact#,#File#src#,#String#dest#,#boolean#overwrite#,#String#algorithm#)#throws#IOException#{#File#csFile#=#File#.#createTempFile#(#"ivytemp"#,#algorithm#)#;#try#{#FileUtil#.#copy#(#new#ByteArrayInputStream#(#ChecksumHelper#.#computeAsString#(#src#,#algorithm#)#.#getBytes#(#)#)#,#csFile#,#null#)#;#repository#.#put#(#DefaultArtifact#.#cloneWithAnotherTypeAndExt#(#artifact#,#algorithm#,#artifact#.#getExt#(#)#+#"."#+#algorithm#)#,#csFile#,#dest#+#"."#+#algorithm#,#overwrite#)#;#}#finally#{#csFile#.#delete#(#)#;#}#}##DownloadReport#download#(#Artifact#[#]#artifacts#,#DownloadOptions#options#)#{#EventManager#eventManager#=#getEventManager#(#)#;#try#{#if#(#eventManager#!=#null#)#{#repository#.#addTransferListener#(#eventManager#)#;#}#return#super#.#download#(#artifacts#,#options#)#;#}#finally#{#if#(#eventManager#!=#null#)#{#repository#.#removeTransferListener#(#eventManager#)#;#}#}#}##void#findTokenValues#(#Collection#names#,#List#patterns#,#Map#tokenValues#,#String#token#)#{#for#(#Iterator#iter#=#patterns#.#iterator#(#)#;#iter#.#hasNext#(#)#;#)#{#String#pattern#=#(#String#)#iter#.#next#(#)#;#String#partiallyResolvedPattern#=#IvyPatternHelper#.#substituteTokens#(#pattern#,#tokenValues#)#;#String#[#]#values#=#ResolverHelper#.#listTokenValues#(#repository#,#partiallyResolvedPattern#,#token#)#;#if#(#values#!=#null#)#{#names#.#addAll#(#filterNames#(#new#ArrayList#(#Arrays#.#asList#(#values#)#)#)#)#;#}#}#}##String#[#]#listTokenValues#(#String#pattern#,#String#token#)#{#return#ResolverHelper#.#listTokenValues#(#repository#,#pattern#,#token#)#;#}##boolean#exist#(#String#path#)#{#try#{#Resource#resource#=#repository#.#getResource#(#path#)#;#return#resource#.#exists#(#)#;#}#catch#(#IOException#e#)#{#return#false#;#}#}##String#getTypeName#(#)#{#return#"repository"#;#}##void#dumpSettings#(#)#{#super#.#dumpSettings#(#)#;#Message#.#debug#(#"\t\trepository: "#+#getRepository#(#)#)#;#}##void#setSettings#(#ResolverSettings#settings#)#{#super#.#setSettings#(#settings#)#;#if#(#settings#!=#null#)#{#if#(#alwaysCheckExactRevision#==#null#)#{#alwaysCheckExactRevision#=#Boolean#.#valueOf#(#settings#.#getVariable#(#"ivy.default.always.check.exact.revision"#)#)#;#}#}#}##boolean#isAlwaysCheckExactRevision#(#)#{#return#alwaysCheckExactRevision#==#null#?#true#:#alwaysCheckExactRevision#.#booleanValue#(#)#;#}##void#setAlwaysCheckExactRevision#(#boolean#alwaysCheckExactRevision#)#{#this#.#alwaysCheckExactRevision#=#Boolean#.#valueOf#(#alwaysCheckExactRevision#)#;#}##