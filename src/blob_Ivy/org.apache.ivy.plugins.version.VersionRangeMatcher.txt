long#getLastModified#(#)#{#return#0#;#}##String#getRevision#(#)#{#return#mrid#.#getRevision#(#)#;#}##int#compare#(#Object#o1#,#Object#o2#)#{#if#(#o1#.#equals#(#o2#)#)#{#return#0#;#}#ArtifactInfo#art1#=#new#MRIDArtifactInfo#(#(#ModuleRevisionId#)#o1#)#;#ArtifactInfo#art2#=#new#MRIDArtifactInfo#(#(#ModuleRevisionId#)#o2#)#;#ArtifactInfo#art#=#getLatestStrategy#(#)#.#findLatest#(#new#ArtifactInfo#[#]#{#art1#,#art2#}#,#null#)#;#return#art#==#art1#?#-#1#:#1#;#}##boolean#isDynamic#(#ModuleRevisionId#askedMrid#)#{#String#revision#=#askedMrid#.#getRevision#(#)#;#return#ALL_RANGE#.#matcher#(#revision#)#.#matches#(#)#;#}##boolean#accept#(#ModuleRevisionId#askedMrid#,#ModuleRevisionId#foundMrid#)#{#String#revision#=#askedMrid#.#getRevision#(#)#;#Matcher#m#;#m#=#FINITE_RANGE#.#matcher#(#revision#)#;#if#(#m#.#matches#(#)#)#{#String#lower#=#m#.#group#(#1#)#;#String#upper#=#m#.#group#(#2#)#;#return#isUpper#(#askedMrid#,#lower#,#foundMrid#,#revision#.#startsWith#(#OPEN_INC#)#)#&&#isLower#(#askedMrid#,#upper#,#foundMrid#,#revision#.#endsWith#(#CLOSE_INC#)#)#;#}#m#=#LOWER_INFINITE_RANGE#.#matcher#(#revision#)#;#if#(#m#.#matches#(#)#)#{#String#upper#=#m#.#group#(#1#)#;#return#isLower#(#askedMrid#,#upper#,#foundMrid#,#revision#.#endsWith#(#CLOSE_INC#)#)#;#}#m#=#UPPER_INFINITE_RANGE#.#matcher#(#revision#)#;#if#(#m#.#matches#(#)#)#{#String#lower#=#m#.#group#(#1#)#;#return#isUpper#(#askedMrid#,#lower#,#foundMrid#,#revision#.#startsWith#(#OPEN_INC#)#)#;#}#return#false#;#}##boolean#isLower#(#ModuleRevisionId#askedMrid#,#String#revision#,#ModuleRevisionId#foundMrid#,#boolean#inclusive#)#{#ModuleRevisionId#mRevId#=#ModuleRevisionId#.#newInstance#(#askedMrid#,#revision#)#;#int#result#=#comparator#.#compare#(#mRevId#,#foundMrid#)#;#return#result#<=#(#inclusive#?#0#:#-#1#)#;#}##boolean#isUpper#(#ModuleRevisionId#askedMrid#,#String#revision#,#ModuleRevisionId#foundMrid#,#boolean#inclusive#)#{#ModuleRevisionId#mRevId#=#ModuleRevisionId#.#newInstance#(#askedMrid#,#revision#)#;#int#result#=#comparator#.#compare#(#mRevId#,#foundMrid#)#;#return#result#>=#(#inclusive#?#0#:#1#)#;#}##int#compare#(#ModuleRevisionId#askedMrid#,#ModuleRevisionId#foundMrid#,#Comparator#staticComparator#)#{#String#revision#=#askedMrid#.#getRevision#(#)#;#Matcher#m#;#m#=#UPPER_INFINITE_RANGE#.#matcher#(#revision#)#;#if#(#m#.#matches#(#)#)#{#// no upper limit, the dynamic revision can always be considered greater#return#1#;#}#String#upper#;#m#=#FINITE_RANGE#.#matcher#(#revision#)#;#if#(#m#.#matches#(#)#)#{#upper#=#m#.#group#(#2#)#;#}#else#{#m#=#LOWER_INFINITE_RANGE#.#matcher#(#revision#)#;#if#(#m#.#matches#(#)#)#{#upper#=#m#.#group#(#1#)#;#}#else#{#throw#new#IllegalArgumentException#(#"impossible to compare: askedMrid is not a dynamic revision: "#+#askedMrid#)#;#}#}#int#c#=#staticComparator#.#compare#(#ModuleRevisionId#.#newInstance#(#askedMrid#,#upper#)#,#foundMrid#)#;#// if the comparison consider them equal, we must return -1, because we can't consider the#// dynamic revision to be greater. Otherwise we can safeely return the result of the static#// comparison#return#c#==#0#?#-#1#:#c#;#}##LatestStrategy#getLatestStrategy#(#)#{#if#(#latestStrategy#==#null#)#{#if#(#getSettings#(#)#==#null#)#{#throw#new#IllegalStateException#(#"no ivy instance nor latest strategy configured in version range matcher "#+#this#)#;#}#if#(#latestStrategyName#==#null#)#{#throw#new#IllegalStateException#(#"null latest strategy defined in version range matcher "#+#this#)#;#}#latestStrategy#=#getSettings#(#)#.#getLatestStrategy#(#latestStrategyName#)#;#if#(#latestStrategy#==#null#)#{#throw#new#IllegalStateException#(#"unknown latest strategy '"#+#latestStrategyName#+#"' configured in version range matcher "#+#this#)#;#}#}#return#latestStrategy#;#}##void#setLatestStrategy#(#LatestStrategy#latestStrategy#)#{#this#.#latestStrategy#=#latestStrategy#;#}##void#setLatest#(#String#latestStrategyName#)#{#this#.#latestStrategyName#=#latestStrategyName#;#}##